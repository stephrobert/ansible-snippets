{
    "Manage geo-replication sessions": {
        "prefix": [
            "gluster.gluster.geo_rep",
            "Manage geo-replication sessions"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  gluster.gluster.geo_rep:",
            "    action: ${2:string}",
            "    changelog_log_level: ${3:string}",
            "    checkpoint: ${4:string}",
            "    force: ${5:string}",
            "    georepuser: ${6:string}",
            "    gluster_log_file: ${7:string}",
            "    gluster_log_level: ${8:string}",
            "    ignore_deletes: ${9:string}",
            "    log_file: ${10:string}",
            "    log_level: ${11:string}",
            "    log_rsync_performance: ${12:string}",
            "    mastervol: ${13:string}",
            "    meta_volume_mnt: ${14:string}",
            "    rsync_command: ${15:string}",
            "    rsync_options: ${16:string}",
            "    slavevol: ${17:string}",
            "    ssh_command: ${18:string}",
            "    sync_acls: ${19:string}",
            "    sync_jobs: ${20:string}",
            "    sync_xattrs: ${21:string}",
            "    timeout: ${22:string}",
            "    use_meta_volume: ${23:string}",
            "    use_tarssh: ${24:string}",
            "    volume_id: ${25:string}",
            "$0"
        ],
        "description": "Manage geo-replication sessions",
        "scope": "ansible"
    },
    "Gather information on self-heal or rebalance status": {
        "prefix": [
            "gluster.gluster.gluster_heal_info",
            "Gather information on self-heal or rebalance status"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  gluster.gluster.gluster_heal_info:",
            "    name: ${2:string}",
            "    status_filter: ${3|self-heal,rebalance|}",
            "$0"
        ],
        "description": "Gather information on self-heal or rebalance status",
        "scope": "ansible"
    },
    "Attach/Detach peers to/from the cluster": {
        "prefix": [
            "gluster.gluster.gluster_peer",
            "Attach/Detach peers to/from the cluster"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  gluster.gluster.gluster_peer:",
            "    force: ${2|true,false|}",
            "    nodes:",
            "      - ${3:element}",
            "    state: ${4|present,absent|}",
            "$0"
        ],
        "description": "Attach/Detach peers to/from the cluster",
        "scope": "ansible"
    },
    "Manage GlusterFS volumes": {
        "prefix": [
            "gluster.gluster.gluster_volume",
            "Manage GlusterFS volumes"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  gluster.gluster.gluster_volume:",
            "    arbiters: ${2:int}",
            "    bricks: ${3:string}",
            "    cluster:",
            "      - ${4:element}",
            "    directory: ${5:string}",
            "    disperses: ${6:int}",
            "    force: ${7|false,true|}",
            "    host: ${8:string}",
            "    name: ${9:string}",
            "    quota: ${11:string}",
            "    rebalance: ${12|true,false|}",
            "    redundancies: ${13:int}",
            "    replicas: ${14:int}",
            "    start_on_create: ${15|true,false|}",
            "    state: ${16:string}",
            "    stripes: ${17:int}",
            "    transport: ${18|tcp,rdma,tcp,rdma|}",
            "$0"
        ],
        "description": "Manage GlusterFS volumes",
        "scope": "ansible"
    }
}