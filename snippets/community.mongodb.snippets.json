{
    "Manages the MongoDB Sharded Cluster Balancer.": {
        "prefix": [
            "community.mongodb.mongodb_balancer",
            "Manages the MongoDB Sharded Cluster Balancer."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.mongodb.mongodb_balancer:",
            "    auth_mechanism: ${2:string}",
            "    autosplit: ${3|false,true|}",
            "    chunksize: ${4:int}",
            "    connection_options:",
            "      - ${5:element}",
            "    login_database: ${6:admin}",
            "    login_host: ${7:localhost}",
            "    login_password: ${8:string}",
            "    login_port: ${9:27017}",
            "    login_user: ${10:string}",
            "    mongos_process: ${11:mongos}",
            "    ssl: ${12|false,true|}",
            "    ssl_ca_certs: ${13:string}",
            "    ssl_cert_reqs: ${14|CERT_REQUIRED,CERT_NONE,CERT_OPTIONAL|}",
            "    ssl_certfile: ${15:string}",
            "    ssl_crlfile: ${16:string}",
            "    ssl_keyfile: ${17:string}",
            "    ssl_pem_passphrase: ${18:string}",
            "    state: ${19|started,stopped|}",
            "    strict_compatibility: ${20|true,false|}",
            "    window: ${21:\"raw\"}",
            "$0"
        ],
        "description": "Manages the MongoDB Sharded Cluster Balancer.",
        "scope": "ansible"
    },
    "Creates or drops indexes on MongoDB collections.": {
        "prefix": [
            "community.mongodb.mongodb_index",
            "Creates or drops indexes on MongoDB collections."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.mongodb.mongodb_index:",
            "    auth_mechanism: ${2:string}",
            "    connection_options:",
            "      - ${3:element}",
            "    indexes:",
            "      - ${4:element}",
            "    login_database: ${5:admin}",
            "    login_host: ${6:localhost}",
            "    login_password: ${7:string}",
            "    login_port: ${8:27017}",
            "    login_user: ${9:string}",
            "    replica_set: ${10:string}",
            "    ssl: ${11|false,true|}",
            "    ssl_ca_certs: ${12:string}",
            "    ssl_cert_reqs: ${13|CERT_REQUIRED,CERT_NONE,CERT_OPTIONAL|}",
            "    ssl_certfile: ${14:string}",
            "    ssl_crlfile: ${15:string}",
            "    ssl_keyfile: ${16:string}",
            "    ssl_pem_passphrase: ${17:string}",
            "    strict_compatibility: ${18|true,false|}",
            "$0"
        ],
        "description": "Creates or drops indexes on MongoDB collections.",
        "scope": "ansible"
    },
    "Gather information about MongoDB instance.": {
        "prefix": [
            "community.mongodb.mongodb_info",
            "Gather information about MongoDB instance."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.mongodb.mongodb_info:",
            "    auth_mechanism: ${2:string}",
            "    connection_options:",
            "      - ${3:element}",
            "    filter:",
            "      - ${4:element}",
            "    login_database: ${5:admin}",
            "    login_host: ${6:localhost}",
            "    login_password: ${7:string}",
            "    login_port: ${8:27017}",
            "    login_user: ${9:string}",
            "    ssl: ${10|false,true|}",
            "    ssl_ca_certs: ${11:string}",
            "    ssl_cert_reqs: ${12|CERT_REQUIRED,CERT_NONE,CERT_OPTIONAL|}",
            "    ssl_certfile: ${13:string}",
            "    ssl_crlfile: ${14:string}",
            "    ssl_keyfile: ${15:string}",
            "    ssl_pem_passphrase: ${16:string}",
            "    strict_compatibility: ${17|true,false|}",
            "$0"
        ],
        "description": "Gather information about MongoDB instance.",
        "scope": "ansible"
    },
    "Enables or disables maintenance mode for a secondary member.": {
        "prefix": [
            "community.mongodb.mongodb_maintenance",
            "Enables or disables maintenance mode for a secondary member."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.mongodb.mongodb_maintenance:",
            "    auth_mechanism: ${2:string}",
            "    connection_options:",
            "      - ${3:element}",
            "    login_database: ${4:admin}",
            "    login_host: ${5:localhost}",
            "    login_password: ${6:string}",
            "    login_port: ${7:27017}",
            "    login_user: ${8:string}",
            "    maintenance: ${9|false,true|}",
            "    ssl: ${10|false,true|}",
            "    ssl_ca_certs: ${11:string}",
            "    ssl_cert_reqs: ${12|CERT_REQUIRED,CERT_NONE,CERT_OPTIONAL|}",
            "    ssl_certfile: ${13:string}",
            "    ssl_crlfile: ${14:string}",
            "    ssl_keyfile: ${15:string}",
            "    ssl_pem_passphrase: ${16:string}",
            "    strict_compatibility: ${17|true,false|}",
            "$0"
        ],
        "description": "Enables or disables maintenance mode for a secondary member.",
        "scope": "ansible"
    },
    "Manages the free monitoring feature.": {
        "prefix": [
            "community.mongodb.mongodb_monitoring",
            "Manages the free monitoring feature."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.mongodb.mongodb_monitoring:",
            "    auth_mechanism: ${2:string}",
            "    connection_options:",
            "      - ${3:element}",
            "    login_database: ${4:admin}",
            "    login_host: ${5:localhost}",
            "    login_password: ${6:string}",
            "    login_port: ${7:27017}",
            "    login_user: ${8:string}",
            "    return_url: ${9|false,true|}",
            "    ssl: ${10|false,true|}",
            "    ssl_ca_certs: ${11:string}",
            "    ssl_cert_reqs: ${12|CERT_REQUIRED,CERT_NONE,CERT_OPTIONAL|}",
            "    ssl_certfile: ${13:string}",
            "    ssl_crlfile: ${14:string}",
            "    ssl_keyfile: ${15:string}",
            "    ssl_pem_passphrase: ${16:string}",
            "    state: ${17|started,stopped|}",
            "    strict_compatibility: ${18|true,false|}",
            "$0"
        ],
        "description": "Manages the free monitoring feature.",
        "scope": "ansible"
    },
    "Resizes the MongoDB oplog.": {
        "prefix": [
            "community.mongodb.mongodb_oplog",
            "Resizes the MongoDB oplog."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.mongodb.mongodb_oplog:",
            "    auth_mechanism: ${2:string}",
            "    compact: ${3|false,true|}",
            "    connection_options:",
            "      - ${4:element}",
            "    login_database: ${5:admin}",
            "    login_host: ${6:localhost}",
            "    login_password: ${7:string}",
            "    login_port: ${8:27017}",
            "    login_user: ${9:string}",
            "    oplog_size_mb: ${10:int}",
            "    ssl: ${11|false,true|}",
            "    ssl_ca_certs: ${12:string}",
            "    ssl_cert_reqs: ${13|CERT_REQUIRED,CERT_NONE,CERT_OPTIONAL|}",
            "    ssl_certfile: ${14:string}",
            "    ssl_crlfile: ${15:string}",
            "    ssl_keyfile: ${16:string}",
            "    ssl_pem_passphrase: ${17:string}",
            "    strict_compatibility: ${18|true,false|}",
            "$0"
        ],
        "description": "Resizes the MongoDB oplog.",
        "scope": "ansible"
    },
    "Change an administrative parameter on a MongoDB server": {
        "prefix": [
            "community.mongodb.mongodb_parameter",
            "Change an administrative parameter on a MongoDB server"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.mongodb.mongodb_parameter:",
            "    auth_mechanism: ${2:string}",
            "    connection_options:",
            "      - ${3:element}",
            "    login_database: ${4:admin}",
            "    login_host: ${5:localhost}",
            "    login_password: ${6:string}",
            "    login_port: ${7:27017}",
            "    login_user: ${8:string}",
            "    param: ${9:string}",
            "    param_type: ${10|str,int|}",
            "    replica_set: ${11:string}",
            "    ssl: ${12|false,true|}",
            "    ssl_ca_certs: ${13:string}",
            "    ssl_cert_reqs: ${14|CERT_REQUIRED,CERT_NONE,CERT_OPTIONAL|}",
            "    ssl_certfile: ${15:string}",
            "    ssl_crlfile: ${16:string}",
            "    ssl_keyfile: ${17:string}",
            "    ssl_pem_passphrase: ${18:string}",
            "    strict_compatibility: ${19|true,false|}",
            "    value: ${20:string}",
            "$0"
        ],
        "description": "Change an administrative parameter on a MongoDB server",
        "scope": "ansible"
    },
    "Initialises a MongoDB replicaset.": {
        "prefix": [
            "community.mongodb.mongodb_replicaset",
            "Initialises a MongoDB replicaset."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.mongodb.mongodb_replicaset:",
            "    arbiter_at_index: ${2:int}",
            "    auth_mechanism: ${3:string}",
            "    chaining_allowed: ${4|true,false|}",
            "    cluster_cmd: ${5|hello,isMaster|}",
            "    connection_options:",
            "      - ${6:element}",
            "    debug: ${7|false,true|}",
            "    election_timeout_millis: ${8:10000}",
            "    force: ${9|false,true|}",
            "    heartbeat_timeout_secs: ${10:10}",
            "    login_database: ${11:admin}",
            "    login_host: ${12:localhost}",
            "    login_password: ${13:string}",
            "    login_port: ${14:27017}",
            "    login_user: ${15:string}",
            "    max_time_ms: ${16:None}",
            "    members:",
            "      - ${17:element}",
            "    protocol_version: ${18:1}",
            "    reconfigure: ${19|false,true|}",
            "    replica_set: ${20:rs0}",
            "    ssl: ${21|false,true|}",
            "    ssl_ca_certs: ${22:string}",
            "    ssl_cert_reqs: ${23|CERT_REQUIRED,CERT_NONE,CERT_OPTIONAL|}",
            "    ssl_certfile: ${24:string}",
            "    ssl_crlfile: ${25:string}",
            "    ssl_keyfile: ${26:string}",
            "    ssl_pem_passphrase: ${27:string}",
            "    strict_compatibility: ${28|true,false|}",
            "    validate: ${29|true,false|}",
            "$0"
        ],
        "description": "Initialises a MongoDB replicaset.",
        "scope": "ansible"
    },
    "Adds or removes a role from a MongoDB database": {
        "prefix": [
            "community.mongodb.mongodb_role",
            "Adds or removes a role from a MongoDB database"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.mongodb.mongodb_role:",
            "    auth_mechanism: ${2:string}",
            "    authenticationRestrictions:",
            "      - ${3:element}",
            "    connection_options:",
            "      - ${4:element}",
            "    database: ${5:string}",
            "    debug: ${6|false,true|}",
            "    login_database: ${7:admin}",
            "    login_host: ${8:localhost}",
            "    login_password: ${9:string}",
            "    login_port: ${10:27017}",
            "    login_user: ${11:string}",
            "    name: ${12:string}",
            "    privileges:",
            "      - ${13:element}",
            "    replica_set: ${14:string}",
            "    roles:",
            "      - ${15:element}",
            "    ssl: ${16|false,true|}",
            "    ssl_ca_certs: ${17:string}",
            "    ssl_cert_reqs: ${18|CERT_REQUIRED,CERT_NONE,CERT_OPTIONAL|}",
            "    ssl_certfile: ${19:string}",
            "    ssl_crlfile: ${20:string}",
            "    ssl_keyfile: ${21:string}",
            "    ssl_pem_passphrase: ${22:string}",
            "    state: ${23|present,absent|}",
            "    strict_compatibility: ${24|true,false|}",
            "$0"
        ],
        "description": "Adds or removes a role from a MongoDB database",
        "scope": "ansible"
    },
    "Manages MongoDB Document Schema Validators.": {
        "prefix": [
            "community.mongodb.mongodb_schema",
            "Manages MongoDB Document Schema Validators."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.mongodb.mongodb_schema:",
            "    action: ${2|error,warn|}",
            "    auth_mechanism: ${3:string}",
            "    collection: ${4:string}",
            "    connection_options:",
            "      - ${5:element}",
            "    db: ${6:string}",
            "    debug: ${7|false,true|}",
            "    level: ${8|strict,moderate|}",
            "    login_database: ${9:admin}",
            "    login_host: ${10:localhost}",
            "    login_password: ${11:string}",
            "    login_port: ${12:27017}",
            "    login_user: ${13:string}",
            "    replica_set: ${15:None}",
            "    required:",
            "      - ${16:element}",
            "    ssl: ${17|false,true|}",
            "    ssl_ca_certs: ${18:string}",
            "    ssl_cert_reqs: ${19|CERT_REQUIRED,CERT_NONE,CERT_OPTIONAL|}",
            "    ssl_certfile: ${20:string}",
            "    ssl_crlfile: ${21:string}",
            "    ssl_keyfile: ${22:string}",
            "    ssl_pem_passphrase: ${23:string}",
            "    state: ${24|present,absent|}",
            "    strict_compatibility: ${25|true,false|}",
            "$0"
        ],
        "description": "Manages MongoDB Document Schema Validators.",
        "scope": "ansible"
    },
    "Add or remove shards from a MongoDB Cluster": {
        "prefix": [
            "community.mongodb.mongodb_shard",
            "Add or remove shards from a MongoDB Cluster"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.mongodb.mongodb_shard:",
            "    auth_mechanism: ${2:string}",
            "    connection_options:",
            "      - ${3:element}",
            "    login_database: ${4:admin}",
            "    login_host: ${5:localhost}",
            "    login_password: ${6:string}",
            "    login_port: ${7:27017}",
            "    login_user: ${8:string}",
            "    mongos_process: ${9:mongos}",
            "    shard: ${10:string}",
            "    sharded_databases: ${11:\"raw\"}",
            "    ssl: ${12|false,true|}",
            "    ssl_ca_certs: ${13:string}",
            "    ssl_cert_reqs: ${14|CERT_REQUIRED,CERT_NONE,CERT_OPTIONAL|}",
            "    ssl_certfile: ${15:string}",
            "    ssl_crlfile: ${16:string}",
            "    ssl_keyfile: ${17:string}",
            "    ssl_pem_passphrase: ${18:string}",
            "    state: ${19|present,absent|}",
            "    strict_compatibility: ${20|true,false|}",
            "$0"
        ],
        "description": "Add or remove shards from a MongoDB Cluster",
        "scope": "ansible"
    },
    "Manage Shard Tags.": {
        "prefix": [
            "community.mongodb.mongodb_shard_tag",
            "Manage Shard Tags."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.mongodb.mongodb_shard_tag:",
            "    auth_mechanism: ${2:string}",
            "    connection_options:",
            "      - ${3:element}",
            "    login_database: ${4:admin}",
            "    login_host: ${5:localhost}",
            "    login_password: ${6:string}",
            "    login_port: ${7:27017}",
            "    login_user: ${8:string}",
            "    mongos_process: ${9:mongos}",
            "    name: ${10:string}",
            "    shard: ${11:string}",
            "    ssl: ${12|false,true|}",
            "    ssl_ca_certs: ${13:string}",
            "    ssl_cert_reqs: ${14|CERT_REQUIRED,CERT_NONE,CERT_OPTIONAL|}",
            "    ssl_certfile: ${15:string}",
            "    ssl_crlfile: ${16:string}",
            "    ssl_keyfile: ${17:string}",
            "    ssl_pem_passphrase: ${18:string}",
            "    state: ${19|present,absent|}",
            "    strict_compatibility: ${20|true,false|}",
            "$0"
        ],
        "description": "Manage Shard Tags.",
        "scope": "ansible"
    },
    "Manage Shard Zones.": {
        "prefix": [
            "community.mongodb.mongodb_shard_zone",
            "Manage Shard Zones."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.mongodb.mongodb_shard_zone:",
            "    auth_mechanism: ${2:string}",
            "    connection_options:",
            "      - ${3:element}",
            "    login_database: ${4:admin}",
            "    login_host: ${5:localhost}",
            "    login_password: ${6:string}",
            "    login_port: ${7:27017}",
            "    login_user: ${8:string}",
            "    mongos_process: ${9:mongos}",
            "    name: ${10:string}",
            "    namespace: ${11:string}",
            "    ranges:",
            "      - ${12:element}",
            "    ssl: ${13|false,true|}",
            "    ssl_ca_certs: ${14:string}",
            "    ssl_cert_reqs: ${15|CERT_REQUIRED,CERT_NONE,CERT_OPTIONAL|}",
            "    ssl_certfile: ${16:string}",
            "    ssl_crlfile: ${17:string}",
            "    ssl_keyfile: ${18:string}",
            "    ssl_pem_passphrase: ${19:string}",
            "    state: ${20|present,absent|}",
            "    strict_compatibility: ${21|true,false|}",
            "$0"
        ],
        "description": "Manage Shard Zones.",
        "scope": "ansible"
    },
    "Run commands via the MongoDB shell.": {
        "prefix": [
            "community.mongodb.mongodb_shell",
            "Run commands via the MongoDB shell."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.mongodb.mongodb_shell:",
            "    additional_args: ${2:\"raw\"}",
            "    db: ${3:test}",
            "    debug: ${4|false,true|}",
            "    eval: ${5:string}",
            "    file: ${6:string}",
            "    idempotent: ${7|false,true|}",
            "    login_database: ${8:admin}",
            "    login_host: ${9:localhost}",
            "    login_password: ${10:string}",
            "    login_port: ${11:27017}",
            "    login_user: ${12:string}",
            "    mongo_cmd: ${13:mongosh}",
            "    nodb: ${14|false,true|}",
            "    norc: ${15|false,true|}",
            "    omit:",
            "      - ${16:element}",
            "    quiet: ${17|true,false|}",
            "    split_char: ${18: }",
            "    strict_compatibility: ${19|true,false|}",
            "    stringify: ${20|false,true|}",
            "    transform: ${21|auto,split,json,raw|}",
            "$0"
        ],
        "description": "Run commands via the MongoDB shell.",
        "scope": "ansible"
    },
    "Cleans up all database resources and then terminates the mongod/mongos process.": {
        "prefix": [
            "community.mongodb.mongodb_shutdown",
            "Cleans up all database resources and then terminates the mongod/mongos process."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.mongodb.mongodb_shutdown:",
            "    auth_mechanism: ${2:string}",
            "    connection_options:",
            "      - ${3:element}",
            "    force: ${4|false,true|}",
            "    login_database: ${5:admin}",
            "    login_host: ${6:localhost}",
            "    login_password: ${7:string}",
            "    login_port: ${8:27017}",
            "    login_user: ${9:string}",
            "    ssl: ${10|false,true|}",
            "    ssl_ca_certs: ${11:string}",
            "    ssl_cert_reqs: ${12|CERT_REQUIRED,CERT_NONE,CERT_OPTIONAL|}",
            "    ssl_certfile: ${13:string}",
            "    ssl_crlfile: ${14:string}",
            "    ssl_keyfile: ${15:string}",
            "    ssl_pem_passphrase: ${16:string}",
            "    strict_compatibility: ${17|true,false|}",
            "    timeout: ${18:10}",
            "$0"
        ],
        "description": "Cleans up all database resources and then terminates the mongod/mongos process.",
        "scope": "ansible"
    },
    "Validates the status of the replicaset.": {
        "prefix": [
            "community.mongodb.mongodb_status",
            "Validates the status of the replicaset."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.mongodb.mongodb_status:",
            "    auth_mechanism: ${2:string}",
            "    connection_options:",
            "      - ${3:element}",
            "    interval: ${4:30}",
            "    login_database: ${5:admin}",
            "    login_host: ${6:localhost}",
            "    login_password: ${7:string}",
            "    login_port: ${8:27017}",
            "    login_user: ${9:string}",
            "    poll: ${10:1}",
            "    replica_set: ${11:rs0}",
            "    ssl: ${12|false,true|}",
            "    ssl_ca_certs: ${13:string}",
            "    ssl_cert_reqs: ${14|CERT_REQUIRED,CERT_NONE,CERT_OPTIONAL|}",
            "    ssl_certfile: ${15:string}",
            "    ssl_crlfile: ${16:string}",
            "    ssl_keyfile: ${17:string}",
            "    ssl_pem_passphrase: ${18:string}",
            "    strict_compatibility: ${19|true,false|}",
            "    validate: ${20|default,votes,minimal|}",
            "$0"
        ],
        "description": "Validates the status of the replicaset.",
        "scope": "ansible"
    },
    "Step down the MongoDB node from a PRIMARY state.": {
        "prefix": [
            "community.mongodb.mongodb_stepdown",
            "Step down the MongoDB node from a PRIMARY state."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.mongodb.mongodb_stepdown:",
            "    auth_mechanism: ${2:string}",
            "    connection_options:",
            "      - ${3:element}",
            "    force: ${4|false,true|}",
            "    interval: ${5:30}",
            "    login_database: ${6:admin}",
            "    login_host: ${7:localhost}",
            "    login_password: ${8:string}",
            "    login_port: ${9:27017}",
            "    login_user: ${10:string}",
            "    poll: ${11:1}",
            "    secondary_catch_up: ${12:10}",
            "    ssl: ${13|false,true|}",
            "    ssl_ca_certs: ${14:string}",
            "    ssl_cert_reqs: ${15|CERT_REQUIRED,CERT_NONE,CERT_OPTIONAL|}",
            "    ssl_certfile: ${16:string}",
            "    ssl_crlfile: ${17:string}",
            "    ssl_keyfile: ${18:string}",
            "    ssl_pem_passphrase: ${19:string}",
            "    stepdown_seconds: ${20:60}",
            "    strict_compatibility: ${21|true,false|}",
            "$0"
        ],
        "description": "Step down the MongoDB node from a PRIMARY state.",
        "scope": "ansible"
    },
    "Adds or removes a user from a MongoDB database": {
        "prefix": [
            "community.mongodb.mongodb_user",
            "Adds or removes a user from a MongoDB database"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.mongodb.mongodb_user:",
            "    auth_mechanism: ${2:string}",
            "    connection_options:",
            "      - ${3:element}",
            "    create_for_localhost_exception: ${4:path}",
            "    database: ${5:string}",
            "    login_database: ${6:admin}",
            "    login_host: ${7:localhost}",
            "    login_password: ${8:string}",
            "    login_port: ${9:27017}",
            "    login_user: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    replica_set: ${13:string}",
            "    roles:",
            "      - ${14:element}",
            "    ssl: ${15|false,true|}",
            "    ssl_ca_certs: ${16:string}",
            "    ssl_cert_reqs: ${17|CERT_REQUIRED,CERT_NONE,CERT_OPTIONAL|}",
            "    ssl_certfile: ${18:string}",
            "    ssl_crlfile: ${19:string}",
            "    ssl_keyfile: ${20:string}",
            "    ssl_pem_passphrase: ${21:string}",
            "    state: ${22|present,absent|}",
            "    strict_compatibility: ${23|true,false|}",
            "    update_password: ${24|always,on_create|}",
            "$0"
        ],
        "description": "Adds or removes a user from a MongoDB database",
        "scope": "ansible"
    }
}