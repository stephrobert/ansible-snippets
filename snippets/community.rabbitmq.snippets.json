{
    "Manage rabbitMQ bindings": {
        "prefix": [
            "community.rabbitmq.rabbitmq_binding",
            "Manage rabbitMQ bindings"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.rabbitmq.rabbitmq_binding:",
            "    ca_cert: ${3:path}",
            "    client_cert: ${4:path}",
            "    client_key: ${5:path}",
            "    destination: ${6:string}",
            "    destination_type: ${7:string}",
            "    login_host: ${8:localhost}",
            "    login_password: ${9:guest}",
            "    login_port: ${10:15672}",
            "    login_protocol: ${11|http,https|}",
            "    login_user: ${12:guest}",
            "    name: ${13:string}",
            "    routing_key: ${14:#}",
            "    state: ${15|present,absent|}",
            "    vhost: ${16:/}",
            "$0"
        ],
        "description": "Manage rabbitMQ bindings",
        "scope": "ansible"
    },
    "Manage rabbitMQ exchange": {
        "prefix": [
            "community.rabbitmq.rabbitmq_exchange",
            "Manage rabbitMQ exchange"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.rabbitmq.rabbitmq_exchange:",
            "    auto_delete: ${3|false,true|}",
            "    ca_cert: ${4:path}",
            "    client_cert: ${5:path}",
            "    client_key: ${6:path}",
            "    durable: ${7|true,false|}",
            "    exchange_type: ${8|direct,fanout,headers,topic,x-delayed-message,x-random,x-consistent-hash,x-recent-history|}",
            "    internal: ${9|false,true|}",
            "    login_host: ${10:localhost}",
            "    login_password: ${11:guest}",
            "    login_port: ${12:15672}",
            "    login_protocol: ${13|http,https|}",
            "    login_user: ${14:guest}",
            "    name: ${15:string}",
            "    state: ${16|present,absent|}",
            "    vhost: ${17:/}",
            "$0"
        ],
        "description": "Manage rabbitMQ exchange",
        "scope": "ansible"
    },
    "Enables feature flag": {
        "prefix": [
            "community.rabbitmq.rabbitmq_feature_flag",
            "Enables feature flag"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.rabbitmq.rabbitmq_feature_flag:",
            "    name: ${2:string}",
            "    node: ${3:rabbit}",
            "$0"
        ],
        "description": "Enables feature flag",
        "scope": "ansible"
    },
    "Manage RabbitMQ global parameters": {
        "prefix": [
            "community.rabbitmq.rabbitmq_global_parameter",
            "Manage RabbitMQ global parameters"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.rabbitmq.rabbitmq_global_parameter:",
            "    name: ${2:None}",
            "    node: ${3:rabbit}",
            "    state: ${4|present,absent|}",
            "    value: ${5:None}",
            "$0"
        ],
        "description": "Manage RabbitMQ global parameters",
        "scope": "ansible"
    },
    "Manage RabbitMQ parameters": {
        "prefix": [
            "community.rabbitmq.rabbitmq_parameter",
            "Manage RabbitMQ parameters"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.rabbitmq.rabbitmq_parameter:",
            "    component: ${2:string}",
            "    name: ${3:string}",
            "    node: ${4:rabbit}",
            "    state: ${5|present,absent|}",
            "    value: ${6:string}",
            "    vhost: ${7:/}",
            "$0"
        ],
        "description": "Manage RabbitMQ parameters",
        "scope": "ansible"
    },
    "Manage RabbitMQ plugins": {
        "prefix": [
            "community.rabbitmq.rabbitmq_plugin",
            "Manage RabbitMQ plugins"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.rabbitmq.rabbitmq_plugin:",
            "    broker_state: ${2|online,offline|}",
            "    names: ${3:string}",
            "    new_only: ${4|false,true|}",
            "    prefix: ${5:string}",
            "    state: ${6|enabled,disabled|}",
            "$0"
        ],
        "description": "Manage RabbitMQ plugins",
        "scope": "ansible"
    },
    "Manage the state of policies in RabbitMQ": {
        "prefix": [
            "community.rabbitmq.rabbitmq_policy",
            "Manage the state of policies in RabbitMQ"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.rabbitmq.rabbitmq_policy:",
            "    apply_to: ${2|all,exchanges,queues|}",
            "    name: ${3:string}",
            "    node: ${4:rabbit}",
            "    pattern: ${5:None}",
            "    priority: ${6:0}",
            "    state: ${7|present,absent|}",
            "    vhost: ${9:/}",
            "$0"
        ],
        "description": "Manage the state of policies in RabbitMQ",
        "scope": "ansible"
    },
    "Publish a message to a RabbitMQ queue.": {
        "prefix": [
            "community.rabbitmq.rabbitmq_publish",
            "Publish a message to a RabbitMQ queue."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.rabbitmq.rabbitmq_publish:",
            "    auto_delete: ${2|false,true|}",
            "    body: ${3:string}",
            "    cafile: ${4:string}",
            "    certfile: ${5:string}",
            "    content_type: ${6:text/plain}",
            "    durable: ${7|false,true|}",
            "    exchange: ${8:string}",
            "    exclusive: ${9|false,true|}",
            "    host: ${11:string}",
            "    keyfile: ${12:string}",
            "    password: ${13:string}",
            "    port: ${14:int}",
            "    proto: ${15:string}",
            "    queue: ${16:string}",
            "    routing_key: ${17:string}",
            "    src: ${18:path}",
            "    url: ${19:string}",
            "    username: ${20:string}",
            "    vhost: ${21:string}",
            "$0"
        ],
        "description": "Publish a message to a RabbitMQ queue.",
        "scope": "ansible"
    },
    "Manage rabbitMQ queues": {
        "prefix": [
            "community.rabbitmq.rabbitmq_queue",
            "Manage rabbitMQ queues"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.rabbitmq.rabbitmq_queue:",
            "    auto_delete: ${3|false,true|}",
            "    auto_expires: ${4:int}",
            "    ca_cert: ${5:path}",
            "    client_cert: ${6:path}",
            "    client_key: ${7:path}",
            "    dead_letter_exchange: ${8:string}",
            "    dead_letter_routing_key: ${9:string}",
            "    durable: ${10|true,false|}",
            "    login_host: ${11:localhost}",
            "    login_password: ${12:guest}",
            "    login_port: ${13:15672}",
            "    login_protocol: ${14|http,https|}",
            "    login_user: ${15:guest}",
            "    max_length: ${16:int}",
            "    max_priority: ${17:int}",
            "    message_ttl: ${18:int}",
            "    name: ${19:string}",
            "    state: ${20|present,absent|}",
            "    vhost: ${21:/}",
            "$0"
        ],
        "description": "Manage rabbitMQ queues",
        "scope": "ansible"
    },
    "Execute rabbitmq-upgrade commands": {
        "prefix": [
            "community.rabbitmq.rabbitmq_upgrade",
            "Execute rabbitmq-upgrade commands"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.rabbitmq.rabbitmq_upgrade:",
            "    action: ${2:string}",
            "    node: ${3:rabbit}",
            "$0"
        ],
        "description": "Execute rabbitmq-upgrade commands",
        "scope": "ansible"
    },
    "Manage RabbitMQ users": {
        "prefix": [
            "community.rabbitmq.rabbitmq_user",
            "Manage RabbitMQ users"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.rabbitmq.rabbitmq_user:",
            "    configure_priv: ${2:^}",
            "    force: ${3|false,true|}",
            "    node: ${4:rabbit}",
            "    password: ${5:string}",
            "    permissions:",
            "      - ${6:element}",
            "    read_priv: ${7:^}",
            "    state: ${8|present,absent|}",
            "    tags: ${9:string}",
            "    topic_permissions:",
            "      - ${10:element}",
            "    update_password: ${11|on_create,always|}",
            "    user: ${12:string}",
            "    vhost: ${13:/}",
            "    write_priv: ${14:^}",
            "$0"
        ],
        "description": "Manage RabbitMQ users",
        "scope": "ansible"
    },
    "Manage RabbitMQ user limits": {
        "prefix": [
            "community.rabbitmq.rabbitmq_user_limits",
            "Manage RabbitMQ user limits"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.rabbitmq.rabbitmq_user_limits:",
            "    max_channels: ${2:-1}",
            "    max_connections: ${3:-1}",
            "    node: ${4:string}",
            "    state: ${5|present,absent|}",
            "    user: ${6:string}",
            "$0"
        ],
        "description": "Manage RabbitMQ user limits",
        "scope": "ansible"
    },
    "Manage the state of a virtual host in RabbitMQ": {
        "prefix": [
            "community.rabbitmq.rabbitmq_vhost",
            "Manage the state of a virtual host in RabbitMQ"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.rabbitmq.rabbitmq_vhost:",
            "    name: ${2:string}",
            "    node: ${3:rabbit}",
            "    state: ${4|present,absent|}",
            "    tracing: ${5|false,true|}",
            "$0"
        ],
        "description": "Manage the state of a virtual host in RabbitMQ",
        "scope": "ansible"
    },
    "Manage the state of virtual host limits in RabbitMQ": {
        "prefix": [
            "community.rabbitmq.rabbitmq_vhost_limits",
            "Manage the state of virtual host limits in RabbitMQ"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.rabbitmq.rabbitmq_vhost_limits:",
            "    max_connections: ${2:-1}",
            "    max_queues: ${3:-1}",
            "    node: ${4:string}",
            "    state: ${5|present,absent|}",
            "    vhost: ${6:/}",
            "$0"
        ],
        "description": "Manage the state of virtual host limits in RabbitMQ",
        "scope": "ansible"
    }
}