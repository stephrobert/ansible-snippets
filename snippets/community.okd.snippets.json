{
    "Manage OpenShift objects": {
        "prefix": [
            "community.okd.k8s",
            "Manage OpenShift objects"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.okd.k8s:",
            "    api_key: ${2:string}",
            "    api_version: ${3:v1}",
            "    append_hash: ${4|false,true|}",
            "    apply: ${5|false,true|}",
            "    ca_cert: ${6:path}",
            "    client_cert: ${7:path}",
            "    client_key: ${8:path}",
            "    context: ${9:string}",
            "    continue_on_error: ${10|false,true|}",
            "    force: ${12|false,true|}",
            "    host: ${13:string}",
            "    impersonate_groups:",
            "      - ${14:element}",
            "    impersonate_user: ${15:string}",
            "    kind: ${16:string}",
            "    kubeconfig: ${17:\"raw\"}",
            "    merge_type:",
            "      - ${18:element}",
            "    name: ${19:string}",
            "    namespace: ${20:string}",
            "    no_proxy: ${21:string}",
            "    password: ${22:string}",
            "    persist_config: ${23|false,true|}",
            "    proxy: ${24:string}",
            "    src: ${27:path}",
            "    state: ${28|present,absent,patched|}",
            "    template: ${29:\"raw\"}",
            "    username: ${30:string}",
            "    validate_certs: ${32|false,true|}",
            "    wait: ${33|false,true|}",
            "    wait_sleep: ${35:5}",
            "    wait_timeout: ${36:120}",
            "$0"
        ],
        "description": "Manage OpenShift objects",
        "scope": "ansible"
    },
    "Sync OpenShift Groups with records from an external provider.": {
        "prefix": [
            "community.okd.openshift_adm_groups_sync",
            "Sync OpenShift Groups with records from an external provider."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.okd.openshift_adm_groups_sync:",
            "    allow_groups:",
            "      - ${2:element}",
            "    api_key: ${3:string}",
            "    ca_cert: ${4:path}",
            "    client_cert: ${5:path}",
            "    client_key: ${6:path}",
            "    context: ${7:string}",
            "    deny_groups:",
            "      - ${8:element}",
            "    host: ${9:string}",
            "    impersonate_groups:",
            "      - ${10:element}",
            "    impersonate_user: ${11:string}",
            "    kubeconfig: ${12:\"raw\"}",
            "    no_proxy: ${13:string}",
            "    password: ${14:string}",
            "    persist_config: ${15|false,true|}",
            "    proxy: ${16:string}",
            "    state: ${18|present,absent|}",
            "    type: ${20|ldap,openshift|}",
            "    username: ${21:string}",
            "    validate_certs: ${22|false,true|}",
            "$0"
        ],
        "description": "Sync OpenShift Groups with records from an external provider.",
        "scope": "ansible"
    },
    "Update TemplateInstances to point to the latest group-version-kinds": {
        "prefix": [
            "community.okd.openshift_adm_migrate_template_instances",
            "Update TemplateInstances to point to the latest group-version-kinds"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.okd.openshift_adm_migrate_template_instances:",
            "    api_key: ${2:string}",
            "    ca_cert: ${3:path}",
            "    client_cert: ${4:path}",
            "    client_key: ${5:path}",
            "    context: ${6:string}",
            "    host: ${7:string}",
            "    impersonate_groups:",
            "      - ${8:element}",
            "    impersonate_user: ${9:string}",
            "    kubeconfig: ${10:\"raw\"}",
            "    namespace: ${11:string}",
            "    no_proxy: ${12:string}",
            "    password: ${13:string}",
            "    persist_config: ${14|false,true|}",
            "    proxy: ${15:string}",
            "    username: ${17:string}",
            "    validate_certs: ${18|false,true|}",
            "    wait: ${19|false,true|}",
            "    wait_sleep: ${21:5}",
            "    wait_timeout: ${22:120}",
            "$0"
        ],
        "description": "Update TemplateInstances to point to the latest group-version-kinds",
        "scope": "ansible"
    },
    "Removes references to the specified roles, clusterroles, users, and groups": {
        "prefix": [
            "community.okd.openshift_adm_prune_auth",
            "Removes references to the specified roles, clusterroles, users, and groups"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.okd.openshift_adm_prune_auth:",
            "    api_key: ${2:string}",
            "    ca_cert: ${3:path}",
            "    client_cert: ${4:path}",
            "    client_key: ${5:path}",
            "    context: ${6:string}",
            "    host: ${7:string}",
            "    impersonate_groups:",
            "      - ${8:element}",
            "    impersonate_user: ${9:string}",
            "    kubeconfig: ${10:\"raw\"}",
            "    label_selectors:",
            "      - ${11:element}",
            "    name: ${12:string}",
            "    namespace: ${13:string}",
            "    no_proxy: ${14:string}",
            "    password: ${15:string}",
            "    persist_config: ${16|false,true|}",
            "    proxy: ${17:string}",
            "    resource: ${19:string}",
            "    username: ${20:string}",
            "    validate_certs: ${21|false,true|}",
            "$0"
        ],
        "description": "Removes references to the specified roles, clusterroles, users, and groups",
        "scope": "ansible"
    },
    "Prune old completed and failed builds": {
        "prefix": [
            "community.okd.openshift_adm_prune_builds",
            "Prune old completed and failed builds"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.okd.openshift_adm_prune_builds:",
            "    api_key: ${2:string}",
            "    ca_cert: ${3:path}",
            "    client_cert: ${4:path}",
            "    client_key: ${5:path}",
            "    context: ${6:string}",
            "    host: ${7:string}",
            "    impersonate_groups:",
            "      - ${8:element}",
            "    impersonate_user: ${9:string}",
            "    keep_younger_than: ${10:int}",
            "    kubeconfig: ${11:\"raw\"}",
            "    namespace: ${12:string}",
            "    no_proxy: ${13:string}",
            "    orphans: ${14|false,true|}",
            "    password: ${15:string}",
            "    persist_config: ${16|false,true|}",
            "    proxy: ${17:string}",
            "    username: ${19:string}",
            "    validate_certs: ${20|false,true|}",
            "$0"
        ],
        "description": "Prune old completed and failed builds",
        "scope": "ansible"
    },
    "Remove old completed and failed deployment configs": {
        "prefix": [
            "community.okd.openshift_adm_prune_deployments",
            "Remove old completed and failed deployment configs"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.okd.openshift_adm_prune_deployments:",
            "    api_key: ${2:string}",
            "    ca_cert: ${3:path}",
            "    client_cert: ${4:path}",
            "    client_key: ${5:path}",
            "    context: ${6:string}",
            "    host: ${7:string}",
            "    impersonate_groups:",
            "      - ${8:element}",
            "    impersonate_user: ${9:string}",
            "    keep_younger_than: ${10:int}",
            "    kubeconfig: ${11:\"raw\"}",
            "    namespace: ${12:string}",
            "    no_proxy: ${13:string}",
            "    orphans: ${14|false,true|}",
            "    password: ${15:string}",
            "    persist_config: ${16|false,true|}",
            "    proxy: ${17:string}",
            "    username: ${19:string}",
            "    validate_certs: ${20|false,true|}",
            "$0"
        ],
        "description": "Remove old completed and failed deployment configs",
        "scope": "ansible"
    },
    "Remove unreferenced images": {
        "prefix": [
            "community.okd.openshift_adm_prune_images",
            "Remove unreferenced images"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.okd.openshift_adm_prune_images:",
            "    all_images: ${2|true,false|}",
            "    api_key: ${3:string}",
            "    ca_cert: ${4:path}",
            "    client_cert: ${5:path}",
            "    client_key: ${6:path}",
            "    context: ${7:string}",
            "    host: ${8:string}",
            "    ignore_invalid_refs: ${9|false,true|}",
            "    impersonate_groups:",
            "      - ${10:element}",
            "    impersonate_user: ${11:string}",
            "    keep_younger_than: ${12:int}",
            "    kubeconfig: ${13:\"raw\"}",
            "    namespace: ${14:string}",
            "    no_proxy: ${15:string}",
            "    password: ${16:string}",
            "    persist_config: ${17|false,true|}",
            "    proxy: ${18:string}",
            "    prune_over_size_limit: ${20|false,true|}",
            "    prune_registry: ${21|true,false|}",
            "    registry_ca_cert: ${22:path}",
            "    registry_url: ${23:string}",
            "    registry_validate_certs: ${24|false,true|}",
            "    username: ${25:string}",
            "    validate_certs: ${26|false,true|}",
            "$0"
        ],
        "description": "Remove unreferenced images",
        "scope": "ansible"
    },
    "Authenticate to OpenShift clusters which require an explicit login step": {
        "prefix": [
            "community.okd.openshift_auth",
            "Authenticate to OpenShift clusters which require an explicit login step"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.okd.openshift_auth:",
            "    api_key: ${2:string}",
            "    ca_cert: ${3:path}",
            "    host: ${4:string}",
            "    password: ${5:string}",
            "    state: ${6|present,absent|}",
            "    username: ${7:string}",
            "    validate_certs: ${8|true,false|}",
            "$0"
        ],
        "description": "Authenticate to OpenShift clusters which require an explicit login step",
        "scope": "ansible"
    },
    "Start a new build or Cancel running, pending, or new builds.": {
        "prefix": [
            "community.okd.openshift_build",
            "Start a new build or Cancel running, pending, or new builds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.okd.openshift_build:",
            "    api_key: ${2:string}",
            "    build_args:",
            "      - ${3:element}",
            "    build_config_name: ${4:string}",
            "    build_name: ${5:string}",
            "    build_phases:",
            "      - ${6:element}",
            "    ca_cert: ${7:path}",
            "    client_cert: ${8:path}",
            "    client_key: ${9:path}",
            "    commit: ${10:string}",
            "    context: ${11:string}",
            "    env_vars:",
            "      - ${12:element}",
            "    host: ${13:string}",
            "    impersonate_groups:",
            "      - ${14:element}",
            "    impersonate_user: ${15:string}",
            "    incremental: ${16|false,true|}",
            "    kubeconfig: ${17:\"raw\"}",
            "    namespace: ${18:string}",
            "    no_cache: ${19|false,true|}",
            "    no_proxy: ${20:string}",
            "    password: ${21:string}",
            "    persist_config: ${22|false,true|}",
            "    proxy: ${23:string}",
            "    state: ${25|started,cancelled,restarted|}",
            "    username: ${26:string}",
            "    validate_certs: ${27|false,true|}",
            "    wait: ${28|false,true|}",
            "    wait_sleep: ${29:5}",
            "    wait_timeout: ${30:120}",
            "$0"
        ],
        "description": "Start a new build or Cancel running, pending, or new builds.",
        "scope": "ansible"
    },
    "Import the latest image information from a tag in a container image registry.": {
        "prefix": [
            "community.okd.openshift_import_image",
            "Import the latest image information from a tag in a container image registry."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.okd.openshift_import_image:",
            "    all: ${2|false,true|}",
            "    api_key: ${3:string}",
            "    ca_cert: ${4:path}",
            "    client_cert: ${5:path}",
            "    client_key: ${6:path}",
            "    context: ${7:string}",
            "    host: ${8:string}",
            "    impersonate_groups:",
            "      - ${9:element}",
            "    impersonate_user: ${10:string}",
            "    kubeconfig: ${11:\"raw\"}",
            "    name: ${12:\"raw\"}",
            "    namespace: ${13:string}",
            "    no_proxy: ${14:string}",
            "    password: ${15:string}",
            "    persist_config: ${16|false,true|}",
            "    proxy: ${17:string}",
            "    reference_policy: ${19|source,local|}",
            "    scheduled: ${20|false,true|}",
            "    source: ${21:string}",
            "    username: ${22:string}",
            "    validate_certs: ${23|false,true|}",
            "    validate_registry_certs: ${24|false,true|}",
            "$0"
        ],
        "description": "Import the latest image information from a tag in a container image registry.",
        "scope": "ansible"
    },
    "Process an OpenShift template.openshift.io/v1 Template": {
        "prefix": [
            "community.okd.openshift_process",
            "Process an OpenShift template.openshift.io/v1 Template"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.okd.openshift_process:",
            "    api_key: ${2:string}",
            "    ca_cert: ${3:path}",
            "    client_cert: ${4:path}",
            "    client_key: ${5:path}",
            "    context: ${6:string}",
            "    host: ${7:string}",
            "    impersonate_groups:",
            "      - ${8:element}",
            "    impersonate_user: ${9:string}",
            "    kubeconfig: ${10:\"raw\"}",
            "    name: ${11:string}",
            "    namespace: ${12:string}",
            "    no_proxy: ${14:string}",
            "    parameter_file: ${15:string}",
            "    password: ${17:string}",
            "    persist_config: ${18|false,true|}",
            "    proxy: ${19:string}",
            "    src: ${22:path}",
            "    state: ${23|rendered,absent,present|}",
            "    username: ${24:string}",
            "    validate_certs: ${25|false,true|}",
            "    wait: ${26|false,true|}",
            "    wait_sleep: ${28:5}",
            "    wait_timeout: ${29:120}",
            "$0"
        ],
        "description": "Process an OpenShift template.openshift.io/v1 Template",
        "scope": "ansible"
    },
    "Display information about the integrated registry.": {
        "prefix": [
            "community.okd.openshift_registry_info",
            "Display information about the integrated registry."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.okd.openshift_registry_info:",
            "    api_key: ${2:string}",
            "    ca_cert: ${3:path}",
            "    check: ${4|false,true|}",
            "    client_cert: ${5:path}",
            "    client_key: ${6:path}",
            "    context: ${7:string}",
            "    host: ${8:string}",
            "    impersonate_groups:",
            "      - ${9:element}",
            "    impersonate_user: ${10:string}",
            "    kubeconfig: ${11:\"raw\"}",
            "    no_proxy: ${12:string}",
            "    password: ${13:string}",
            "    persist_config: ${14|false,true|}",
            "    proxy: ${15:string}",
            "    username: ${17:string}",
            "    validate_certs: ${18|false,true|}",
            "$0"
        ],
        "description": "Display information about the integrated registry.",
        "scope": "ansible"
    },
    "Expose a Service as an OpenShift Route.": {
        "prefix": [
            "community.okd.openshift_route",
            "Expose a Service as an OpenShift Route."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.okd.openshift_route:",
            "    api_key: ${3:string}",
            "    ca_cert: ${4:path}",
            "    client_cert: ${5:path}",
            "    client_key: ${6:path}",
            "    context: ${7:string}",
            "    force: ${8|false,true|}",
            "    host: ${9:string}",
            "    hostname: ${10:string}",
            "    impersonate_groups:",
            "      - ${11:element}",
            "    impersonate_user: ${12:string}",
            "    kubeconfig: ${13:\"raw\"}",
            "    name: ${15:string}",
            "    namespace: ${16:string}",
            "    no_proxy: ${17:string}",
            "    password: ${18:string}",
            "    path: ${19:string}",
            "    persist_config: ${20|false,true|}",
            "    port: ${21:string}",
            "    proxy: ${22:string}",
            "    service: ${24:string}",
            "    state: ${25|present,absent|}",
            "    termination: ${26|insecure,edge,passthrough,reencrypt|}",
            "    username: ${28:string}",
            "    validate_certs: ${29|false,true|}",
            "    wait: ${30|false,true|}",
            "    wait_sleep: ${32:5}",
            "    wait_timeout: ${33:120}",
            "    wildcard_policy: ${34:string}",
            "$0"
        ],
        "description": "Expose a Service as an OpenShift Route.",
        "scope": "ansible"
    }
}