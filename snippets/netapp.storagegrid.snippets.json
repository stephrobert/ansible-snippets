{
    "NetApp StorageGRID manage accounts.": {
        "prefix": [
            "netapp.storagegrid.na_sg_grid_account",
            "NetApp StorageGRID manage accounts."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  netapp.storagegrid.na_sg_grid_account:",
            "    account_id: ${2:string}",
            "    allow_platform_services: ${3|false,true|}",
            "    api_url: ${4:string}",
            "    auth_token: ${5:string}",
            "    management: ${6|true,false|}",
            "    name: ${7:string}",
            "    password: ${8:string}",
            "    protocol: ${9:string}",
            "    quota_size: ${10:0}",
            "    quota_size_unit: ${11|gb,bytes,b,kb,mb,tb,pb,eb,zb,yb|}",
            "    root_access_group: ${12:string}",
            "    state: ${13|present,absent|}",
            "    update_password: ${14|on_create,always|}",
            "    use_own_identity_source: ${15|false,true|}",
            "    validate_certs: ${16|true,false|}",
            "$0"
        ],
        "description": "NetApp StorageGRID manage accounts.",
        "scope": "ansible"
    },
    "Manage the Storage API and Grid Management certificates on StorageGRID.": {
        "prefix": [
            "netapp.storagegrid.na_sg_grid_certificate",
            "Manage the Storage API and Grid Management certificates on StorageGRID."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  netapp.storagegrid.na_sg_grid_certificate:",
            "    api_url: ${2:string}",
            "    auth_token: ${3:string}",
            "    ca_bundle: ${4:string}",
            "    private_key: ${5:string}",
            "    server_certificate: ${6:string}",
            "    state: ${7|present,absent|}",
            "    type: ${8:string}",
            "    validate_certs: ${9|true,false|}",
            "$0"
        ],
        "description": "Manage the Storage API and Grid Management certificates on StorageGRID.",
        "scope": "ansible"
    },
    "Manage Client Certificates on StorageGRID": {
        "prefix": [
            "netapp.storagegrid.na_sg_grid_client_certificate",
            "Manage Client Certificates on StorageGRID"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  netapp.storagegrid.na_sg_grid_client_certificate:",
            "    allow_prometheus: ${2|false,true|}",
            "    api_url: ${3:string}",
            "    auth_token: ${4:string}",
            "    certificate_id: ${5:string}",
            "    display_name: ${6:string}",
            "    public_key: ${7:string}",
            "    state: ${8|present,absent|}",
            "    validate_certs: ${9|true,false|}",
            "$0"
        ],
        "description": "Manage Client Certificates on StorageGRID",
        "scope": "ansible"
    },
    "NetApp StorageGRID manage external DNS servers for the grid.": {
        "prefix": [
            "netapp.storagegrid.na_sg_grid_dns",
            "NetApp StorageGRID manage external DNS servers for the grid."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  netapp.storagegrid.na_sg_grid_dns:",
            "    api_url: ${2:string}",
            "    auth_token: ${3:string}",
            "    dns_servers:",
            "      - ${4:element}",
            "    state: ${5|present|}",
            "    validate_certs: ${6|true,false|}",
            "$0"
        ],
        "description": "NetApp StorageGRID manage external DNS servers for the grid.",
        "scope": "ansible"
    },
    "Manage Load balancer (gateway) endpoints on StorageGRID.": {
        "prefix": [
            "netapp.storagegrid.na_sg_grid_gateway",
            "Manage Load balancer (gateway) endpoints on StorageGRID."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  netapp.storagegrid.na_sg_grid_gateway:",
            "    api_url: ${2:string}",
            "    auth_token: ${3:string}",
            "    binding_mode: ${4|global,ha-groups,node-interfaces|}",
            "    ca_bundle: ${5:string}",
            "    default_service_type: ${6|s3,swift|}",
            "    display_name: ${7:string}",
            "    enable_ipv4: ${8|true,false|}",
            "    enable_ipv6: ${9|true,false|}",
            "    gateway_id: ${10:string}",
            "    ha_groups:",
            "      - ${11:element}",
            "    node_interfaces:",
            "      - ${12:element}",
            "    port: ${13:int}",
            "    private_key: ${14:string}",
            "    secure: ${15|true,false|}",
            "    server_certificate: ${16:string}",
            "    state: ${17|present,absent|}",
            "    validate_certs: ${18|true,false|}",
            "$0"
        ],
        "description": "Manage Load balancer (gateway) endpoints on StorageGRID.",
        "scope": "ansible"
    },
    "NetApp StorageGRID manage groups.": {
        "prefix": [
            "netapp.storagegrid.na_sg_grid_group",
            "NetApp StorageGRID manage groups."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  netapp.storagegrid.na_sg_grid_group:",
            "    api_url: ${2:string}",
            "    auth_token: ${3:string}",
            "    display_name: ${4:string}",
            "    state: ${6|present,absent|}",
            "    unique_name: ${7:string}",
            "    validate_certs: ${8|true,false|}",
            "$0"
        ],
        "description": "NetApp StorageGRID manage groups.",
        "scope": "ansible"
    },
    "Manage high availability (HA) group configuration on StorageGRID.": {
        "prefix": [
            "netapp.storagegrid.na_sg_grid_ha_group",
            "Manage high availability (HA) group configuration on StorageGRID."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  netapp.storagegrid.na_sg_grid_ha_group:",
            "    api_url: ${2:string}",
            "    auth_token: ${3:string}",
            "    description: ${4:string}",
            "    gateway_cidr: ${5:string}",
            "    ha_group_id: ${6:string}",
            "    interfaces:",
            "      - ${7:element}",
            "    name: ${8:string}",
            "    state: ${9|present,absent|}",
            "    validate_certs: ${10|true,false|}",
            "    virtual_ips:",
            "      - ${11:element}",
            "$0"
        ],
        "description": "Manage high availability (HA) group configuration on StorageGRID.",
        "scope": "ansible"
    },
    "NetApp StorageGRID manage Grid identity federation.": {
        "prefix": [
            "netapp.storagegrid.na_sg_grid_identity_federation",
            "NetApp StorageGRID manage Grid identity federation."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  netapp.storagegrid.na_sg_grid_identity_federation:",
            "    api_url: ${2:string}",
            "    auth_token: ${3:string}",
            "    base_group_dn: ${4:string}",
            "    base_user_dn: ${5:string}",
            "    ca_cert: ${6:string}",
            "    hostname: ${7:string}",
            "    ldap_group_id_attribute: ${8:string}",
            "    ldap_group_uuid_attribute: ${9:string}",
            "    ldap_service_type: ${10:string}",
            "    ldap_user_id_attribute: ${11:string}",
            "    ldap_user_uuid_attribute: ${12:string}",
            "    password: ${13:string}",
            "    port: ${14:int}",
            "    state: ${15|present,absent|}",
            "    tls: ${16|STARTTLS,LDAPS,Disabled|}",
            "    type: ${17:ldap}",
            "    username: ${18:string}",
            "    validate_certs: ${19|true,false|}",
            "$0"
        ],
        "description": "NetApp StorageGRID manage Grid identity federation.",
        "scope": "ansible"
    },
    "NetApp StorageGRID Grid information gatherer.": {
        "prefix": [
            "netapp.storagegrid.na_sg_grid_info",
            "NetApp StorageGRID Grid information gatherer."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  netapp.storagegrid.na_sg_grid_info:",
            "    api_url: ${2:string}",
            "    auth_token: ${3:string}",
            "    gather_subset:",
            "      - ${4:element}",
            "    validate_certs: ${6|true,false|}",
            "$0"
        ],
        "description": "NetApp StorageGRID Grid information gatherer.",
        "scope": "ansible"
    },
    "NetApp StorageGRID manage external NTP servers for the grid.": {
        "prefix": [
            "netapp.storagegrid.na_sg_grid_ntp",
            "NetApp StorageGRID manage external NTP servers for the grid."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  netapp.storagegrid.na_sg_grid_ntp:",
            "    api_url: ${2:string}",
            "    auth_token: ${3:string}",
            "    ntp_servers:",
            "      - ${4:element}",
            "    passphrase: ${5:string}",
            "    state: ${6|present|}",
            "    validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "NetApp StorageGRID manage external NTP servers for the grid.",
        "scope": "ansible"
    },
    "NetApp StorageGRID manage Regions for the grid.": {
        "prefix": [
            "netapp.storagegrid.na_sg_grid_regions",
            "NetApp StorageGRID manage Regions for the grid."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  netapp.storagegrid.na_sg_grid_regions:",
            "    api_url: ${2:string}",
            "    auth_token: ${3:string}",
            "    regions:",
            "      - ${4:element}",
            "    state: ${5|present|}",
            "    validate_certs: ${6|true,false|}",
            "$0"
        ],
        "description": "NetApp StorageGRID manage Regions for the grid.",
        "scope": "ansible"
    },
    "Manage Traffic Classification Policy configuration on StorageGRID.": {
        "prefix": [
            "netapp.storagegrid.na_sg_grid_traffic_classes",
            "Manage Traffic Classification Policy configuration on StorageGRID."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  netapp.storagegrid.na_sg_grid_traffic_classes:",
            "    api_url: ${2:string}",
            "    auth_token: ${3:string}",
            "    description: ${4:string}",
            "    limits:",
            "      - ${5:element}",
            "    matchers:",
            "      - ${6:element}",
            "    name: ${7:string}",
            "    policy_id: ${8:string}",
            "    state: ${9|present,absent|}",
            "    validate_certs: ${10|true,false|}",
            "$0"
        ],
        "description": "Manage Traffic Classification Policy configuration on StorageGRID.",
        "scope": "ansible"
    },
    "NetApp StorageGRID manage users.": {
        "prefix": [
            "netapp.storagegrid.na_sg_grid_user",
            "NetApp StorageGRID manage users."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  netapp.storagegrid.na_sg_grid_user:",
            "    api_url: ${2:string}",
            "    auth_token: ${3:string}",
            "    disable: ${4|false,true|}",
            "    full_name: ${5:string}",
            "    member_of:",
            "      - ${6:element}",
            "    password: ${7:string}",
            "    state: ${8|present,absent|}",
            "    unique_name: ${9:string}",
            "    update_password: ${10|on_create,always|}",
            "    validate_certs: ${11|true,false|}",
            "$0"
        ],
        "description": "NetApp StorageGRID manage users.",
        "scope": "ansible"
    },
    "Manage buckets on StorageGRID.": {
        "prefix": [
            "netapp.storagegrid.na_sg_org_container",
            "Manage buckets on StorageGRID."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  netapp.storagegrid.na_sg_org_container:",
            "    api_url: ${2:string}",
            "    auth_token: ${3:string}",
            "    bucket_versioning_enabled: ${4|false,true|}",
            "    name: ${6:string}",
            "    region: ${7:string}",
            "    s3_object_lock_enabled: ${8|false,true|}",
            "    state: ${9|present,absent|}",
            "    validate_certs: ${10|true,false|}",
            "$0"
        ],
        "description": "Manage buckets on StorageGRID.",
        "scope": "ansible"
    },
    "NetApp StorageGRID manage groups within a tenancy.": {
        "prefix": [
            "netapp.storagegrid.na_sg_org_group",
            "NetApp StorageGRID manage groups within a tenancy."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  netapp.storagegrid.na_sg_org_group:",
            "    api_url: ${2:string}",
            "    auth_token: ${3:string}",
            "    display_name: ${4:string}",
            "    state: ${7|present,absent|}",
            "    unique_name: ${8:string}",
            "    validate_certs: ${9|true,false|}",
            "$0"
        ],
        "description": "NetApp StorageGRID manage groups within a tenancy.",
        "scope": "ansible"
    },
    "NetApp StorageGRID manage Tenant identity federation.": {
        "prefix": [
            "netapp.storagegrid.na_sg_org_identity_federation",
            "NetApp StorageGRID manage Tenant identity federation."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  netapp.storagegrid.na_sg_org_identity_federation:",
            "    api_url: ${2:string}",
            "    auth_token: ${3:string}",
            "    base_group_dn: ${4:string}",
            "    base_user_dn: ${5:string}",
            "    ca_cert: ${6:string}",
            "    hostname: ${7:string}",
            "    ldap_group_id_attribute: ${8:string}",
            "    ldap_group_uuid_attribute: ${9:string}",
            "    ldap_service_type: ${10:string}",
            "    ldap_user_id_attribute: ${11:string}",
            "    ldap_user_uuid_attribute: ${12:string}",
            "    password: ${13:string}",
            "    port: ${14:int}",
            "    state: ${15|present,absent|}",
            "    tls: ${16|STARTTLS,LDAPS,Disabled|}",
            "    type: ${17:ldap}",
            "    username: ${18:string}",
            "    validate_certs: ${19|true,false|}",
            "$0"
        ],
        "description": "NetApp StorageGRID manage Tenant identity federation.",
        "scope": "ansible"
    },
    "NetApp StorageGRID Org information gatherer.": {
        "prefix": [
            "netapp.storagegrid.na_sg_org_info",
            "NetApp StorageGRID Org information gatherer."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  netapp.storagegrid.na_sg_org_info:",
            "    api_url: ${2:string}",
            "    auth_token: ${3:string}",
            "    gather_subset:",
            "      - ${4:element}",
            "    validate_certs: ${6|true,false|}",
            "$0"
        ],
        "description": "NetApp StorageGRID Org information gatherer.",
        "scope": "ansible"
    },
    "NetApp StorageGRID manage users within a tenancy.": {
        "prefix": [
            "netapp.storagegrid.na_sg_org_user",
            "NetApp StorageGRID manage users within a tenancy."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  netapp.storagegrid.na_sg_org_user:",
            "    api_url: ${2:string}",
            "    auth_token: ${3:string}",
            "    disable: ${4|false,true|}",
            "    full_name: ${5:string}",
            "    member_of:",
            "      - ${6:element}",
            "    password: ${7:string}",
            "    state: ${8|present,absent|}",
            "    unique_name: ${9:string}",
            "    update_password: ${10|on_create,always|}",
            "    validate_certs: ${11|true,false|}",
            "$0"
        ],
        "description": "NetApp StorageGRID manage users within a tenancy.",
        "scope": "ansible"
    },
    "Creates NetApp StorageGRID User S3 keys.": {
        "prefix": [
            "netapp.storagegrid.na_sg_org_user_s3_key",
            "Creates NetApp StorageGRID User S3 keys."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  netapp.storagegrid.na_sg_org_user_s3_key:",
            "    access_key: ${2:string}",
            "    api_url: ${3:string}",
            "    auth_token: ${4:string}",
            "    expires: ${5:string}",
            "    state: ${6|present,absent|}",
            "    unique_user_name: ${7:string}",
            "    validate_certs: ${8|true,false|}",
            "$0"
        ],
        "description": "Creates NetApp StorageGRID User S3 keys.",
        "scope": "ansible"
    }
}