{
    "Manage Action Batch jobs within the Meraki Dashboard.": {
        "prefix": [
            "cisco.meraki.meraki_action_batch",
            "Manage Action Batch jobs within the Meraki Dashboard."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_action_batch:",
            "    action_batch_id: ${2:string}",
            "    actions:",
            "      - ${3:element}",
            "    auth_key: ${4:string}",
            "    confirmed: ${5|false,true|}",
            "    host: ${6:api.meraki.com}",
            "    internal_error_retry_time: ${7:60}",
            "    net_id: ${8:string}",
            "    net_name: ${9:string}",
            "    org_id: ${10:string}",
            "    org_name: ${11:string}",
            "    output_format: ${12|snakecase,camelcase|}",
            "    output_level: ${13|normal,debug|}",
            "    rate_limit_retry_time: ${14:165}",
            "    state: ${15|present,query,absent|}",
            "    synchronous: ${16|true,false|}",
            "    timeout: ${17:30}",
            "    use_https: ${18|true,false|}",
            "    use_proxy: ${19|false,true|}",
            "    validate_certs: ${20|true,false|}",
            "$0"
        ],
        "description": "Manage Action Batch jobs within the Meraki Dashboard.",
        "scope": "ansible"
    },
    "Manage administrators in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_admin",
            "Manage administrators in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_admin:",
            "    auth_key: ${2:string}",
            "    email: ${3:string}",
            "    host: ${4:api.meraki.com}",
            "    internal_error_retry_time: ${5:60}",
            "    name: ${6:string}",
            "    networks:",
            "      - ${7:element}",
            "    org_access: ${8:string}",
            "    org_id: ${9:string}",
            "    org_name: ${10:string}",
            "    output_format: ${11|snakecase,camelcase|}",
            "    output_level: ${12|normal,debug|}",
            "    rate_limit_retry_time: ${13:165}",
            "    state: ${14:string}",
            "    tags:",
            "      - ${15:element}",
            "    timeout: ${16:30}",
            "    use_https: ${17|true,false|}",
            "    use_proxy: ${18|false,true|}",
            "    validate_certs: ${19|true,false|}",
            "$0"
        ],
        "description": "Manage administrators in the Meraki cloud",
        "scope": "ansible"
    },
    "Manage alerts in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_alert",
            "Manage alerts in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_alert:",
            "    alerts:",
            "      - ${2:element}",
            "    auth_key: ${3:string}",
            "    host: ${5:api.meraki.com}",
            "    internal_error_retry_time: ${6:60}",
            "    net_id: ${7:string}",
            "    net_name: ${8:string}",
            "    org_id: ${9:string}",
            "    org_name: ${10:string}",
            "    output_format: ${11|snakecase,camelcase|}",
            "    output_level: ${12|normal,debug|}",
            "    rate_limit_retry_time: ${13:165}",
            "    state: ${14|present,query|}",
            "    timeout: ${15:30}",
            "    use_https: ${16|true,false|}",
            "    use_proxy: ${17|false,true|}",
            "    validate_certs: ${18|true,false|}",
            "$0"
        ],
        "description": "Manage alerts in the Meraki cloud",
        "scope": "ansible"
    },
    "Manage configuration templates in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_config_template",
            "Manage configuration templates in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_config_template:",
            "    auth_key: ${2:string}",
            "    auto_bind: ${3|false,true|}",
            "    config_template: ${4:string}",
            "    host: ${5:api.meraki.com}",
            "    internal_error_retry_time: ${6:60}",
            "    net_id: ${7:string}",
            "    net_name: ${8:string}",
            "    org_id: ${9:string}",
            "    org_name: ${10:string}",
            "    output_format: ${11|snakecase,camelcase|}",
            "    output_level: ${12|normal,debug|}",
            "    rate_limit_retry_time: ${13:165}",
            "    state: ${14|query,absent,present|}",
            "    timeout: ${15:30}",
            "    use_https: ${16|true,false|}",
            "    use_proxy: ${17|false,true|}",
            "    validate_certs: ${18|true,false|}",
            "$0"
        ],
        "description": "Manage configuration templates in the Meraki cloud",
        "scope": "ansible"
    },
    "Manage devices in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_device",
            "Manage devices in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_device:",
            "    address: ${2:string}",
            "    auth_key: ${3:string}",
            "    host: ${4:api.meraki.com}",
            "    hostname: ${5:string}",
            "    internal_error_retry_time: ${6:60}",
            "    lldp_cdp_timespan: ${8:int}",
            "    model: ${10:string}",
            "    move_map_marker: ${11|false,true|}",
            "    net_id: ${12:string}",
            "    net_name: ${13:string}",
            "    note: ${14:string}",
            "    org_id: ${15:string}",
            "    org_name: ${16:string}",
            "    output_format: ${17|snakecase,camelcase|}",
            "    output_level: ${18|normal,debug|}",
            "    query: ${19:string}",
            "    rate_limit_retry_time: ${20:165}",
            "    serial: ${21:string}",
            "    state: ${22|query,absent,present|}",
            "    tags:",
            "      - ${23:element}",
            "    timeout: ${24:30}",
            "    use_https: ${25|true,false|}",
            "    use_proxy: ${26|false,true|}",
            "    validate_certs: ${27|true,false|}",
            "$0"
        ],
        "description": "Manage devices in the Meraki cloud",
        "scope": "ansible"
    },
    "Edit firewall policies for administrative network services": {
        "prefix": [
            "cisco.meraki.meraki_firewalled_services",
            "Edit firewall policies for administrative network services"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_firewalled_services:",
            "    access: ${2:string}",
            "    allowed_ips:",
            "      - ${3:element}",
            "    auth_key: ${4:string}",
            "    host: ${5:api.meraki.com}",
            "    internal_error_retry_time: ${6:60}",
            "    net_id: ${7:string}",
            "    net_name: ${8:string}",
            "    org_id: ${9:string}",
            "    org_name: ${10:string}",
            "    output_format: ${11|snakecase,camelcase|}",
            "    output_level: ${12|normal,debug|}",
            "    rate_limit_retry_time: ${13:165}",
            "    service: ${14:string}",
            "    state: ${15|present,query|}",
            "    timeout: ${16:30}",
            "    use_https: ${17|true,false|}",
            "    use_proxy: ${18|false,true|}",
            "    validate_certs: ${19|true,false|}",
            "$0"
        ],
        "description": "Edit firewall policies for administrative network services",
        "scope": "ansible"
    },
    "Configure Meraki management interfaces": {
        "prefix": [
            "cisco.meraki.meraki_management_interface",
            "Configure Meraki management interfaces"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_management_interface:",
            "    auth_key: ${2:string}",
            "    host: ${3:api.meraki.com}",
            "    internal_error_retry_time: ${4:60}",
            "    net_id: ${5:string}",
            "    net_name: ${6:string}",
            "    org_id: ${7:string}",
            "    org_name: ${8:string}",
            "    output_format: ${9|snakecase,camelcase|}",
            "    output_level: ${10|normal,debug|}",
            "    rate_limit_retry_time: ${11:165}",
            "    serial: ${12:string}",
            "    state: ${13|query,absent,present|}",
            "    timeout: ${14:30}",
            "    use_https: ${15|true,false|}",
            "    use_proxy: ${16|false,true|}",
            "    validate_certs: ${17|true,false|}",
            "$0"
        ],
        "description": "Configure Meraki management interfaces",
        "scope": "ansible"
    },
    "Manage MR access point layer 3 firewalls in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_mr_l3_firewall",
            "Manage MR access point layer 3 firewalls in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mr_l3_firewall:",
            "    allow_lan_access: ${2|true,false|}",
            "    auth_key: ${3:string}",
            "    host: ${4:api.meraki.com}",
            "    internal_error_retry_time: ${5:60}",
            "    net_id: ${6:string}",
            "    net_name: ${7:string}",
            "    number: ${8:string}",
            "    org_id: ${9:string}",
            "    org_name: ${10:string}",
            "    output_format: ${11|snakecase,camelcase|}",
            "    output_level: ${12|normal,debug|}",
            "    rate_limit_retry_time: ${13:165}",
            "    rules:",
            "      - ${14:element}",
            "    ssid_name: ${15:string}",
            "    state: ${16|present,query|}",
            "    timeout: ${17:30}",
            "    use_https: ${18|true,false|}",
            "    use_proxy: ${19|false,true|}",
            "    validate_certs: ${20|true,false|}",
            "$0"
        ],
        "description": "Manage MR access point layer 3 firewalls in the Meraki cloud",
        "scope": "ansible"
    },
    "Manage MR access point layer 7 firewalls in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_mr_l7_firewall",
            "Manage MR access point layer 7 firewalls in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mr_l7_firewall:",
            "    auth_key: ${2:string}",
            "    categories: ${3|false,true|}",
            "    host: ${4:api.meraki.com}",
            "    internal_error_retry_time: ${5:60}",
            "    net_id: ${6:string}",
            "    net_name: ${7:string}",
            "    number: ${8:string}",
            "    org_id: ${9:string}",
            "    org_name: ${10:string}",
            "    output_format: ${11|snakecase,camelcase|}",
            "    output_level: ${12|normal,debug|}",
            "    rate_limit_retry_time: ${13:165}",
            "    rules:",
            "      - ${14:element}",
            "    ssid_name: ${15:string}",
            "    state: ${16|present,query|}",
            "    timeout: ${17:30}",
            "    use_https: ${18|true,false|}",
            "    use_proxy: ${19|false,true|}",
            "    validate_certs: ${20|true,false|}",
            "$0"
        ],
        "description": "Manage MR access point layer 7 firewalls in the Meraki cloud",
        "scope": "ansible"
    },
    "Manage device radio settings for Meraki wireless networks": {
        "prefix": [
            "cisco.meraki.meraki_mr_radio",
            "Manage device radio settings for Meraki wireless networks"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mr_radio:",
            "    auth_key: ${2:string}",
            "    host: ${4:api.meraki.com}",
            "    internal_error_retry_time: ${5:60}",
            "    net_id: ${6:string}",
            "    net_name: ${7:string}",
            "    org_id: ${8:string}",
            "    org_name: ${9:string}",
            "    output_format: ${10|snakecase,camelcase|}",
            "    output_level: ${11|normal,debug|}",
            "    rate_limit_retry_time: ${12:165}",
            "    rf_profile_id: ${13:string}",
            "    rf_profile_name: ${14:string}",
            "    serial: ${15:string}",
            "    state: ${16|present,query|}",
            "    timeout: ${17:30}",
            "    use_https: ${19|true,false|}",
            "    use_proxy: ${20|false,true|}",
            "    validate_certs: ${21|true,false|}",
            "$0"
        ],
        "description": "Manage device radio settings for Meraki wireless networks",
        "scope": "ansible"
    },
    "Manage RF profiles for Meraki wireless networks": {
        "prefix": [
            "cisco.meraki.meraki_mr_rf_profile",
            "Manage RF profiles for Meraki wireless networks"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mr_rf_profile:",
            "    auth_key: ${3:string}",
            "    band_selection_type: ${4:string}",
            "    client_balancing_enabled: ${5|false,true|}",
            "    host: ${7:api.meraki.com}",
            "    internal_error_retry_time: ${8:60}",
            "    min_bitrate_type: ${9:string}",
            "    name: ${10:string}",
            "    net_id: ${11:string}",
            "    net_name: ${12:string}",
            "    org_id: ${13:string}",
            "    org_name: ${14:string}",
            "    output_format: ${15|snakecase,camelcase|}",
            "    output_level: ${16|normal,debug|}",
            "    profile_id: ${17:string}",
            "    rate_limit_retry_time: ${18:165}",
            "    state: ${19|present,query,absent|}",
            "    timeout: ${20:30}",
            "    use_https: ${22|true,false|}",
            "    use_proxy: ${23|false,true|}",
            "    validate_certs: ${24|true,false|}",
            "$0"
        ],
        "description": "Manage RF profiles for Meraki wireless networks",
        "scope": "ansible"
    },
    "Manage general settings for Meraki wireless networks": {
        "prefix": [
            "cisco.meraki.meraki_mr_settings",
            "Manage general settings for Meraki wireless networks"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mr_settings:",
            "    auth_key: ${2:string}",
            "    host: ${3:api.meraki.com}",
            "    internal_error_retry_time: ${4:60}",
            "    ipv6_bridge_enabled: ${5|false,true|}",
            "    led_lights_on: ${6|false,true|}",
            "    location_analytics_enabled: ${7|false,true|}",
            "    meshing_enabled: ${8|false,true|}",
            "    net_id: ${9:string}",
            "    net_name: ${10:string}",
            "    org_id: ${11:string}",
            "    org_name: ${12:string}",
            "    output_format: ${13|snakecase,camelcase|}",
            "    output_level: ${14|normal,debug|}",
            "    rate_limit_retry_time: ${15:165}",
            "    state: ${16|present,query|}",
            "    timeout: ${17:30}",
            "    upgrade_strategy: ${18:string}",
            "    use_https: ${19|true,false|}",
            "    use_proxy: ${20|false,true|}",
            "    validate_certs: ${21|true,false|}",
            "$0"
        ],
        "description": "Manage general settings for Meraki wireless networks",
        "scope": "ansible"
    },
    "Manage wireless SSIDs in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_mr_ssid",
            "Manage wireless SSIDs in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mr_ssid:",
            "    ap_availability_tags:",
            "      - ${2:element}",
            "    ap_tags_vlan_ids:",
            "      - ${3:element}",
            "    auth_key: ${4:string}",
            "    auth_mode: ${5:string}",
            "    available_on_all_aps: ${6|false,true|}",
            "    band_selection: ${7:string}",
            "    concentrator_network_id: ${8:string}",
            "    default_vlan_id: ${9:int}",
            "    enabled: ${10|false,true|}",
            "    encryption_mode: ${11:string}",
            "    enterprise_admin_access: ${12:string}",
            "    host: ${13:api.meraki.com}",
            "    internal_error_retry_time: ${14:60}",
            "    ip_assignment_mode: ${15:string}",
            "    lan_isolation_enabled: ${16|false,true|}",
            "    name: ${18:string}",
            "    net_id: ${19:string}",
            "    net_name: ${20:string}",
            "    number: ${21:int}",
            "    org_id: ${22:string}",
            "    org_name: ${23:string}",
            "    output_format: ${24|snakecase,camelcase|}",
            "    output_level: ${25|normal,debug|}",
            "    per_client_bandwidth_limit_down: ${26:int}",
            "    per_client_bandwidth_limit_up: ${27:int}",
            "    psk: ${28:string}",
            "    radius_accounting_enabled: ${29|false,true|}",
            "    radius_accounting_servers:",
            "      - ${30:element}",
            "    radius_coa_enabled: ${31|false,true|}",
            "    radius_failover_policy: ${32:string}",
            "    radius_load_balancing_policy: ${33:string}",
            "    radius_proxy_enabled: ${34|false,true|}",
            "    radius_servers:",
            "      - ${35:element}",
            "    rate_limit_retry_time: ${36:165}",
            "    splash_guest_sponsor_domains:",
            "      - ${37:element}",
            "    splash_page: ${38:string}",
            "    state: ${39|present,absent,query|}",
            "    timeout: ${40:30}",
            "    use_https: ${41|true,false|}",
            "    use_proxy: ${42|false,true|}",
            "    use_vlan_tagging: ${43|false,true|}",
            "    validate_certs: ${44|true,false|}",
            "    visible: ${45|false,true|}",
            "    vlan_id: ${46:int}",
            "    walled_garden_enabled: ${47|false,true|}",
            "    walled_garden_ranges:",
            "      - ${48:element}",
            "    wpa_encryption_mode: ${49:string}",
            "$0"
        ],
        "description": "Manage wireless SSIDs in the Meraki cloud",
        "scope": "ansible"
    },
    "Manage access lists for Meraki switches in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_ms_access_list",
            "Manage access lists for Meraki switches in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_ms_access_list:",
            "    auth_key: ${2:string}",
            "    host: ${3:api.meraki.com}",
            "    internal_error_retry_time: ${4:60}",
            "    net_id: ${5:string}",
            "    net_name: ${6:string}",
            "    org_id: ${7:string}",
            "    org_name: ${8:string}",
            "    output_format: ${9|snakecase,camelcase|}",
            "    output_level: ${10|normal,debug|}",
            "    rate_limit_retry_time: ${11:165}",
            "    rules:",
            "      - ${12:element}",
            "    state: ${13|query,absent,present|}",
            "    timeout: ${14:30}",
            "    use_https: ${15|true,false|}",
            "    use_proxy: ${16|false,true|}",
            "    validate_certs: ${17|true,false|}",
            "$0"
        ],
        "description": "Manage access lists for Meraki switches in the Meraki cloud",
        "scope": "ansible"
    },
    "Manage Switch Access Policies in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_ms_access_policies",
            "Manage Switch Access Policies in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_ms_access_policies:",
            "    access_policy_type: ${2:string}",
            "    auth_key: ${3:string}",
            "    auth_method: ${4:string}",
            "    data_vlan_id: ${5:int}",
            "    guest_vlan: ${6:int}",
            "    host: ${7:api.meraki.com}",
            "    host_mode: ${8:string}",
            "    internal_error_retry_time: ${9:60}",
            "    name: ${10:string}",
            "    net_id: ${11:string}",
            "    net_name: ${12:string}",
            "    number: ${13:int}",
            "    org_id: ${14:string}",
            "    org_name: ${15:string}",
            "    output_format: ${16|snakecase,camelcase|}",
            "    output_level: ${17|normal,debug|}",
            "    radius_accounting_enabled: ${18|false,true|}",
            "    radius_accounting_servers:",
            "      - ${19:element}",
            "    radius_attribute_group_policy_name: ${20|,Filter-Id|}",
            "    radius_coa_enabled: ${21|false,true|}",
            "    radius_servers:",
            "      - ${22:element}",
            "    radius_testing: ${23|true,false|}",
            "    rate_limit_retry_time: ${24:165}",
            "    state: ${25|present,absent,query|}",
            "    suspend_port_bounce: ${26|false,true|}",
            "    systems_management_enrollment: ${27|false,true|}",
            "    timeout: ${28:30}",
            "    use_https: ${29|true,false|}",
            "    use_proxy: ${30|false,true|}",
            "    validate_certs: ${31|true,false|}",
            "    voice_vlan_clients: ${32|true,false|}",
            "    voice_vlan_id: ${33:int}",
            "$0"
        ],
        "description": "Manage Switch Access Policies in the Meraki cloud",
        "scope": "ansible"
    },
    "Manage routed interfaces on MS switches": {
        "prefix": [
            "cisco.meraki.meraki_ms_stack_l3_interface",
            "Manage routed interfaces on MS switches"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_ms_stack_l3_interface:",
            "    auth_key: ${2:string}",
            "    default_gateway: ${3:string}",
            "    host: ${4:api.meraki.com}",
            "    interface_id: ${5:string}",
            "    interface_ip: ${6:string}",
            "    internal_error_retry_time: ${7:60}",
            "    multicast_routing: ${8:string}",
            "    name: ${9:string}",
            "    net_id: ${10:string}",
            "    net_name: ${11:string}",
            "    org_id: ${12:string}",
            "    org_name: ${13:string}",
            "    output_format: ${15|snakecase,camelcase|}",
            "    output_level: ${16|normal,debug|}",
            "    rate_limit_retry_time: ${17:165}",
            "    stack_id: ${18:string}",
            "    state: ${19|present,query,absent|}",
            "    subnet: ${20:string}",
            "    timeout: ${21:30}",
            "    use_https: ${22|true,false|}",
            "    use_proxy: ${23|false,true|}",
            "    validate_certs: ${24|true,false|}",
            "    vlan_id: ${25:int}",
            "$0"
        ],
        "description": "Manage routed interfaces on MS switches",
        "scope": "ansible"
    },
    "Manage link aggregations on MS switches": {
        "prefix": [
            "cisco.meraki.meraki_ms_link_aggregation",
            "Manage link aggregations on MS switches"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_ms_link_aggregation:",
            "    auth_key: ${2:string}",
            "    host: ${3:api.meraki.com}",
            "    internal_error_retry_time: ${4:60}",
            "    lag_id: ${5:string}",
            "    net_id: ${6:string}",
            "    net_name: ${7:string}",
            "    org_id: ${8:string}",
            "    org_name: ${9:string}",
            "    output_format: ${10|snakecase,camelcase|}",
            "    output_level: ${11|normal,debug|}",
            "    rate_limit_retry_time: ${12:165}",
            "    state: ${13|present,absent,query|}",
            "    switch_ports:",
            "      - ${14:element}",
            "    timeout: ${15:30}",
            "    use_https: ${16|true,false|}",
            "    use_proxy: ${17|false,true|}",
            "    validate_certs: ${18|true,false|}",
            "$0"
        ],
        "description": "Manage link aggregations on MS switches",
        "scope": "ansible"
    },
    "Manage OSPF configuration on MS switches": {
        "prefix": [
            "cisco.meraki.meraki_ms_ospf",
            "Manage OSPF configuration on MS switches"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_ms_ospf:",
            "    areas:",
            "      - ${2:element}",
            "    auth_key: ${3:string}",
            "    dead_timer: ${4:int}",
            "    enabled: ${5|false,true|}",
            "    hello_timer: ${6:int}",
            "    host: ${7:api.meraki.com}",
            "    internal_error_retry_time: ${8:60}",
            "    md5_authentication_enabled: ${9|false,true|}",
            "    net_id: ${11:string}",
            "    net_name: ${12:string}",
            "    org_id: ${13:string}",
            "    org_name: ${14:string}",
            "    output_format: ${15|snakecase,camelcase|}",
            "    output_level: ${16|normal,debug|}",
            "    rate_limit_retry_time: ${17:165}",
            "    state: ${18|present,query|}",
            "    timeout: ${19:30}",
            "    use_https: ${20|true,false|}",
            "    use_proxy: ${21|false,true|}",
            "    validate_certs: ${22|true,false|}",
            "$0"
        ],
        "description": "Manage OSPF configuration on MS switches",
        "scope": "ansible"
    },
    "Modify switch stacking configuration in Meraki.": {
        "prefix": [
            "cisco.meraki.meraki_ms_stack",
            "Modify switch stacking configuration in Meraki."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_ms_stack:",
            "    auth_key: ${2:string}",
            "    host: ${3:api.meraki.com}",
            "    internal_error_retry_time: ${4:60}",
            "    name: ${5:string}",
            "    net_id: ${6:string}",
            "    net_name: ${7:string}",
            "    org_id: ${8:string}",
            "    org_name: ${9:string}",
            "    output_format: ${10|snakecase,camelcase|}",
            "    output_level: ${11|normal,debug|}",
            "    rate_limit_retry_time: ${12:165}",
            "    serials:",
            "      - ${13:element}",
            "    stack_id: ${14:string}",
            "    state: ${15|present,query,absent|}",
            "    timeout: ${16:30}",
            "    use_https: ${17|true,false|}",
            "    use_proxy: ${18|false,true|}",
            "    validate_certs: ${19|true,false|}",
            "$0"
        ],
        "description": "Modify switch stacking configuration in Meraki.",
        "scope": "ansible"
    },
    "Manage storm control configuration on a switch in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_ms_storm_control",
            "Manage storm control configuration on a switch in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_ms_storm_control:",
            "    auth_key: ${2:string}",
            "    broadcast_threshold: ${3:int}",
            "    host: ${4:api.meraki.com}",
            "    internal_error_retry_time: ${5:60}",
            "    multicast_threshold: ${6:int}",
            "    net_id: ${7:string}",
            "    net_name: ${8:string}",
            "    org_id: ${9:string}",
            "    org_name: ${10:string}",
            "    output_format: ${11|snakecase,camelcase|}",
            "    output_level: ${12|normal,debug|}",
            "    rate_limit_retry_time: ${13:165}",
            "    state: ${14|query,present|}",
            "    timeout: ${15:30}",
            "    unknown_unicast_threshold: ${16:int}",
            "    use_https: ${17|true,false|}",
            "    use_proxy: ${18|false,true|}",
            "    validate_certs: ${19|true,false|}",
            "$0"
        ],
        "description": "Manage storm control configuration on a switch in the Meraki cloud",
        "scope": "ansible"
    },
    "Manage switchports on a switch in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_ms_switchport",
            "Manage switchports on a switch in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_ms_switchport:",
            "    access_policy_number: ${2:int}",
            "    access_policy_type: ${3:string}",
            "    allowed_vlans:",
            "      - ${4:element}",
            "    auth_key: ${5:string}",
            "    enabled: ${6|true,false|}",
            "    flexible_stacking_enabled: ${7|false,true|}",
            "    host: ${8:api.meraki.com}",
            "    internal_error_retry_time: ${9:60}",
            "    isolation_enabled: ${10|false,true|}",
            "    link_negotiation: ${11|Autonegotiate,100Megabit(auto),100Megabitfullduplex(forced)|}",
            "    name: ${13:string}",
            "    number: ${14:string}",
            "    org_id: ${15:string}",
            "    org_name: ${16:string}",
            "    output_format: ${17|snakecase,camelcase|}",
            "    output_level: ${18|normal,debug|}",
            "    poe_enabled: ${19|true,false|}",
            "    rate_limit_retry_time: ${20:165}",
            "    rstp_enabled: ${21|true,false|}",
            "    serial: ${22:string}",
            "    state: ${23|query,present|}",
            "    sticky_mac_allow_list_limit: ${25:int}",
            "    stp_guard: ${26|disabled,rootguard,bpduguard,loopguard|}",
            "    tags:",
            "      - ${27:element}",
            "    timeout: ${28:30}",
            "    type: ${29|access,trunk|}",
            "    use_https: ${30|true,false|}",
            "    use_proxy: ${31|false,true|}",
            "    validate_certs: ${32|true,false|}",
            "    vlan: ${33:int}",
            "    voice_vlan: ${34:int}",
            "    voice_vlan_state: ${35|present,absent|}",
            "$0"
        ],
        "description": "Manage switchports on a switch in the Meraki cloud",
        "scope": "ansible"
    },
    "Edit Meraki MX content filtering policies": {
        "prefix": [
            "cisco.meraki.meraki_mx_content_filtering",
            "Edit Meraki MX content filtering policies"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mx_content_filtering:",
            "    allowed_urls:",
            "      - ${2:element}",
            "    auth_key: ${3:string}",
            "    blocked_categories:",
            "      - ${4:element}",
            "    blocked_urls:",
            "      - ${5:element}",
            "    category_list_size: ${6:string}",
            "    host: ${7:api.meraki.com}",
            "    internal_error_retry_time: ${8:60}",
            "    net_id: ${9:string}",
            "    net_name: ${10:string}",
            "    org_id: ${11:string}",
            "    org_name: ${12:string}",
            "    output_format: ${13|snakecase,camelcase|}",
            "    output_level: ${14|normal,debug|}",
            "    rate_limit_retry_time: ${15:165}",
            "    state: ${16|present,query|}",
            "    subset: ${17:string}",
            "    timeout: ${18:30}",
            "    use_https: ${19|true,false|}",
            "    use_proxy: ${20|false,true|}",
            "    validate_certs: ${21|true,false|}",
            "$0"
        ],
        "description": "Edit Meraki MX content filtering policies",
        "scope": "ansible"
    },
    "Manage intrustion prevention in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_mx_intrusion_prevention",
            "Manage intrustion prevention in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mx_intrusion_prevention:",
            "    allowed_rules:",
            "      - ${2:element}",
            "    auth_key: ${3:string}",
            "    host: ${4:api.meraki.com}",
            "    ids_rulesets: ${5:string}",
            "    internal_error_retry_time: ${6:60}",
            "    mode: ${7:string}",
            "    net_id: ${8:string}",
            "    net_name: ${9:string}",
            "    org_id: ${10:string}",
            "    org_name: ${11:string}",
            "    output_format: ${12|snakecase,camelcase|}",
            "    output_level: ${13|normal,debug|}",
            "    rate_limit_retry_time: ${15:165}",
            "    state: ${16|present,absent,query|}",
            "    timeout: ${17:30}",
            "    use_https: ${18|true,false|}",
            "    use_proxy: ${19|false,true|}",
            "    validate_certs: ${20|true,false|}",
            "$0"
        ],
        "description": "Manage intrustion prevention in the Meraki cloud",
        "scope": "ansible"
    },
    "Configure MX layer 2 interfaces": {
        "prefix": [
            "cisco.meraki.meraki_mx_l2_interface",
            "Configure MX layer 2 interfaces"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mx_l2_interface:",
            "    access_policy: ${2:string}",
            "    allowed_vlans: ${3:string}",
            "    auth_key: ${4:string}",
            "    drop_untagged_traffic: ${5|false,true|}",
            "    enabled: ${6|false,true|}",
            "    host: ${7:api.meraki.com}",
            "    internal_error_retry_time: ${8:60}",
            "    net_id: ${9:string}",
            "    net_name: ${10:string}",
            "    number: ${11:int}",
            "    org_id: ${12:string}",
            "    org_name: ${13:string}",
            "    output_format: ${14|snakecase,camelcase|}",
            "    output_level: ${15|normal,debug|}",
            "    port_type: ${16:string}",
            "    rate_limit_retry_time: ${17:165}",
            "    state: ${18|present,query|}",
            "    timeout: ${19:30}",
            "    use_https: ${20|true,false|}",
            "    use_proxy: ${21|false,true|}",
            "    validate_certs: ${22|true,false|}",
            "    vlan: ${23:int}",
            "$0"
        ],
        "description": "Configure MX layer 2 interfaces",
        "scope": "ansible"
    },
    "Manage MX appliance layer 3 firewalls in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_mx_l3_firewall",
            "Manage MX appliance layer 3 firewalls in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mx_l3_firewall:",
            "    auth_key: ${2:string}",
            "    host: ${3:api.meraki.com}",
            "    internal_error_retry_time: ${4:60}",
            "    net_id: ${5:string}",
            "    net_name: ${6:string}",
            "    org_id: ${7:string}",
            "    org_name: ${8:string}",
            "    output_format: ${9|snakecase,camelcase|}",
            "    output_level: ${10|normal,debug|}",
            "    rate_limit_retry_time: ${11:165}",
            "    rules:",
            "      - ${12:element}",
            "    state: ${13|present,query|}",
            "    syslog_default_rule: ${14|false,true|}",
            "    timeout: ${15:30}",
            "    use_https: ${16|true,false|}",
            "    use_proxy: ${17|false,true|}",
            "    validate_certs: ${18|true,false|}",
            "$0"
        ],
        "description": "Manage MX appliance layer 3 firewalls in the Meraki cloud",
        "scope": "ansible"
    },
    "Manage MX appliance layer 7 firewalls in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_mx_l7_firewall",
            "Manage MX appliance layer 7 firewalls in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mx_l7_firewall:",
            "    auth_key: ${2:string}",
            "    categories: ${3|false,true|}",
            "    host: ${4:api.meraki.com}",
            "    internal_error_retry_time: ${5:60}",
            "    net_id: ${6:string}",
            "    net_name: ${7:string}",
            "    org_id: ${8:string}",
            "    org_name: ${9:string}",
            "    output_format: ${10|snakecase,camelcase|}",
            "    output_level: ${11|normal,debug|}",
            "    rate_limit_retry_time: ${12:165}",
            "    rules:",
            "      - ${13:element}",
            "    state: ${14|present,query|}",
            "    timeout: ${15:30}",
            "    use_https: ${16|true,false|}",
            "    use_proxy: ${17|false,true|}",
            "    validate_certs: ${18|true,false|}",
            "$0"
        ],
        "description": "Manage MX appliance layer 7 firewalls in the Meraki cloud",
        "scope": "ansible"
    },
    "Manage Malware Protection in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_mx_malware",
            "Manage Malware Protection in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mx_malware:",
            "    allowed_files:",
            "      - ${2:element}",
            "    allowed_urls:",
            "      - ${3:element}",
            "    auth_key: ${4:string}",
            "    host: ${5:api.meraki.com}",
            "    internal_error_retry_time: ${6:60}",
            "    mode: ${7:string}",
            "    net_id: ${8:string}",
            "    net_name: ${9:string}",
            "    org_id: ${10:string}",
            "    org_name: ${11:string}",
            "    output_format: ${12|snakecase,camelcase|}",
            "    output_level: ${13|normal,debug|}",
            "    rate_limit_retry_time: ${14:165}",
            "    state: ${15|query,absent,present|}",
            "    timeout: ${16:30}",
            "    use_https: ${17|true,false|}",
            "    use_proxy: ${18|false,true|}",
            "    validate_certs: ${19|true,false|}",
            "$0"
        ],
        "description": "Manage Malware Protection in the Meraki cloud",
        "scope": "ansible"
    },
    "Manage NAT rules in Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_mx_nat",
            "Manage NAT rules in Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mx_nat:",
            "    auth_key: ${2:string}",
            "    host: ${3:api.meraki.com}",
            "    internal_error_retry_time: ${4:60}",
            "    net_id: ${5:string}",
            "    net_name: ${6:string}",
            "    one_to_many:",
            "      - ${7:element}",
            "    one_to_one:",
            "      - ${8:element}",
            "    org_id: ${9:string}",
            "    org_name: ${10:string}",
            "    output_format: ${11|snakecase,camelcase|}",
            "    output_level: ${12|normal,debug|}",
            "    port_forwarding:",
            "      - ${13:element}",
            "    rate_limit_retry_time: ${14:165}",
            "    state: ${15|present,query|}",
            "    subset:",
            "      - ${16:element}",
            "    timeout: ${17:30}",
            "    use_https: ${18|true,false|}",
            "    use_proxy: ${19|false,true|}",
            "    validate_certs: ${20|true,false|}",
            "$0"
        ],
        "description": "Manage NAT rules in Meraki cloud",
        "scope": "ansible"
    },
    "Manage VLAN settings for Meraki Networks": {
        "prefix": [
            "cisco.meraki.meraki_mx_network_vlan_settings",
            "Manage VLAN settings for Meraki Networks"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mx_network_vlan_settings:",
            "    auth_key: ${2:string}",
            "    host: ${3:api.meraki.com}",
            "    internal_error_retry_time: ${4:60}",
            "    net_id: ${5:string}",
            "    net_name: ${6:string}",
            "    org_id: ${7:string}",
            "    org_name: ${8:string}",
            "    output_format: ${9|snakecase,camelcase|}",
            "    output_level: ${10|normal,debug|}",
            "    rate_limit_retry_time: ${11:165}",
            "    state: ${12:string}",
            "    timeout: ${13:30}",
            "    use_https: ${14|true,false|}",
            "    use_proxy: ${15|false,true|}",
            "    validate_certs: ${16|true,false|}",
            "    vlans_enabled: ${17|false,true|}",
            "$0"
        ],
        "description": "Manage VLAN settings for Meraki Networks",
        "scope": "ansible"
    },
    "Manage MX appliance firewall rules for site-to-site VPNs": {
        "prefix": [
            "cisco.meraki.meraki_mx_site_to_site_firewall",
            "Manage MX appliance firewall rules for site-to-site VPNs"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mx_site_to_site_firewall:",
            "    auth_key: ${2:string}",
            "    host: ${3:api.meraki.com}",
            "    internal_error_retry_time: ${4:60}",
            "    org_id: ${5:string}",
            "    org_name: ${6:string}",
            "    output_format: ${7|snakecase,camelcase|}",
            "    output_level: ${8|normal,debug|}",
            "    rate_limit_retry_time: ${9:165}",
            "    rules:",
            "      - ${10:element}",
            "    state: ${11|present,query|}",
            "    syslog_default_rule: ${12|false,true|}",
            "    timeout: ${13:30}",
            "    use_https: ${14|true,false|}",
            "    use_proxy: ${15|false,true|}",
            "    validate_certs: ${16|true,false|}",
            "$0"
        ],
        "description": "Manage MX appliance firewall rules for site-to-site VPNs",
        "scope": "ansible"
    },
    "Manage AutoVPN connections in Meraki": {
        "prefix": [
            "cisco.meraki.meraki_mx_site_to_site_vpn",
            "Manage AutoVPN connections in Meraki"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mx_site_to_site_vpn:",
            "    auth_key: ${2:string}",
            "    host: ${3:api.meraki.com}",
            "    hubs:",
            "      - ${4:element}",
            "    internal_error_retry_time: ${5:60}",
            "    mode: ${6:string}",
            "    net_id: ${7:string}",
            "    net_name: ${8:string}",
            "    org_id: ${9:string}",
            "    org_name: ${10:string}",
            "    output_format: ${11|snakecase,camelcase|}",
            "    output_level: ${12|normal,debug|}",
            "    rate_limit_retry_time: ${13:165}",
            "    state: ${14|present,query|}",
            "    subnets:",
            "      - ${15:element}",
            "    timeout: ${16:30}",
            "    use_https: ${17|true,false|}",
            "    use_proxy: ${18|false,true|}",
            "    validate_certs: ${19|true,false|}",
            "$0"
        ],
        "description": "Manage AutoVPN connections in Meraki",
        "scope": "ansible"
    },
    "Manage static routes in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_mx_static_route",
            "Manage static routes in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mx_static_route:",
            "    auth_key: ${2:string}",
            "    enabled: ${3|false,true|}",
            "    fixed_ip_assignments:",
            "      - ${4:element}",
            "    gateway_ip: ${5:string}",
            "    gateway_vlan_id: ${6:int}",
            "    host: ${7:api.meraki.com}",
            "    internal_error_retry_time: ${8:60}",
            "    name: ${9:string}",
            "    net_id: ${10:string}",
            "    net_name: ${11:string}",
            "    org_id: ${12:string}",
            "    org_name: ${13:string}",
            "    output_format: ${14|snakecase,camelcase|}",
            "    output_level: ${15|normal,debug|}",
            "    rate_limit_retry_time: ${16:165}",
            "    reserved_ip_ranges:",
            "      - ${17:element}",
            "    route_id: ${18:string}",
            "    state: ${19|present,absent,query|}",
            "    subnet: ${20:string}",
            "    timeout: ${21:30}",
            "    use_https: ${22|true,false|}",
            "    use_proxy: ${23|false,true|}",
            "    validate_certs: ${24|true,false|}",
            "$0"
        ],
        "description": "Manage static routes in the Meraki cloud",
        "scope": "ansible"
    },
    "Manage third party (IPSec) VPN peers for MX devices": {
        "prefix": [
            "cisco.meraki.meraki_mx_third_party_vpn_peers",
            "Manage third party (IPSec) VPN peers for MX devices"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mx_third_party_vpn_peers:",
            "    auth_key: ${2:string}",
            "    host: ${3:api.meraki.com}",
            "    internal_error_retry_time: ${4:60}",
            "    org_id: ${5:string}",
            "    org_name: ${6:string}",
            "    output_format: ${7|snakecase,camelcase|}",
            "    output_level: ${8|normal,debug|}",
            "    peers:",
            "      - ${9:element}",
            "    rate_limit_retry_time: ${10:165}",
            "    state: ${11|query,absent,present|}",
            "    timeout: ${12:30}",
            "    use_https: ${13|true,false|}",
            "    use_proxy: ${14|false,true|}",
            "    validate_certs: ${15|true,false|}",
            "$0"
        ],
        "description": "Manage third party (IPSec) VPN peers for MX devices",
        "scope": "ansible"
    },
    "Manage uplinks on Meraki MX appliances": {
        "prefix": [
            "cisco.meraki.meraki_mx_uplink_bandwidth",
            "Manage uplinks on Meraki MX appliances"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mx_uplink_bandwidth:",
            "    auth_key: ${2:string}",
            "    host: ${4:api.meraki.com}",
            "    internal_error_retry_time: ${5:60}",
            "    net_id: ${6:string}",
            "    net_name: ${7:string}",
            "    org_id: ${8:string}",
            "    org_name: ${9:string}",
            "    output_format: ${10|snakecase,camelcase|}",
            "    output_level: ${11|normal,debug|}",
            "    rate_limit_retry_time: ${12:165}",
            "    state: ${13|query,absent,present|}",
            "    timeout: ${14:30}",
            "    use_https: ${15|true,false|}",
            "    use_proxy: ${16|false,true|}",
            "    validate_certs: ${17|true,false|}",
            "$0"
        ],
        "description": "Manage uplinks on Meraki MX appliances",
        "scope": "ansible"
    },
    "Manage VLANs in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_mx_vlan",
            "Manage VLANs in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_mx_vlan:",
            "    appliance_ip: ${2:string}",
            "    auth_key: ${3:string}",
            "    dhcp_boot_filename: ${4:string}",
            "    dhcp_boot_next_server: ${5:string}",
            "    dhcp_boot_options_enabled: ${6|false,true|}",
            "    dhcp_handling: ${7:string}",
            "    dhcp_lease_time: ${8:string}",
            "    dhcp_options:",
            "      - ${9:element}",
            "    dhcp_relay_server_ips:",
            "      - ${10:element}",
            "    dns_nameservers: ${11:string}",
            "    fixed_ip_assignments:",
            "      - ${12:element}",
            "    host: ${13:api.meraki.com}",
            "    internal_error_retry_time: ${14:60}",
            "    name: ${15:string}",
            "    net_id: ${16:string}",
            "    net_name: ${17:string}",
            "    org_id: ${18:string}",
            "    org_name: ${19:string}",
            "    output_format: ${20|snakecase,camelcase|}",
            "    output_level: ${21|normal,debug|}",
            "    rate_limit_retry_time: ${22:165}",
            "    reserved_ip_range:",
            "      - ${23:element}",
            "    state: ${24|query,absent,present|}",
            "    subnet: ${25:string}",
            "    timeout: ${26:30}",
            "    use_https: ${27|true,false|}",
            "    use_proxy: ${28|false,true|}",
            "    validate_certs: ${29|true,false|}",
            "    vlan_id: ${30:int}",
            "    vpn_nat_subnet: ${31:string}",
            "$0"
        ],
        "description": "Manage VLANs in the Meraki cloud",
        "scope": "ansible"
    },
    "Manage networks in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_network",
            "Manage networks in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_network:",
            "    auth_key: ${2:string}",
            "    copy_from_network_id: ${3:string}",
            "    enable_vlans: ${4|false,true|}",
            "    host: ${5:api.meraki.com}",
            "    internal_error_retry_time: ${6:60}",
            "    local_status_page_enabled: ${7|false,true|}",
            "    net_id: ${8:string}",
            "    net_name: ${9:string}",
            "    org_id: ${10:string}",
            "    org_name: ${11:string}",
            "    output_format: ${12|snakecase,camelcase|}",
            "    output_level: ${13|normal,debug|}",
            "    rate_limit_retry_time: ${14:165}",
            "    remote_status_page_enabled: ${15|false,true|}",
            "    state: ${16|present,absent,query|}",
            "    tags:",
            "      - ${17:element}",
            "    timeout: ${18:30}",
            "    timezone: ${19:string}",
            "    type:",
            "      - ${20:element}",
            "    use_https: ${21|true,false|}",
            "    use_proxy: ${22|false,true|}",
            "    validate_certs: ${23|true,false|}",
            "$0"
        ],
        "description": "Manage networks in the Meraki cloud",
        "scope": "ansible"
    },
    "Manage the settings of networks in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_network_settings",
            "Manage the settings of networks in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_network_settings:",
            "    auth_key: ${2:string}",
            "    host: ${3:api.meraki.com}",
            "    internal_error_retry_time: ${4:60}",
            "    local_status_page_enabled: ${6|false,true|}",
            "    net_id: ${7:string}",
            "    net_name: ${8:string}",
            "    org_id: ${9:string}",
            "    org_name: ${10:string}",
            "    output_format: ${11|snakecase,camelcase|}",
            "    output_level: ${12|normal,debug|}",
            "    rate_limit_retry_time: ${13:165}",
            "    remote_status_page_enabled: ${14|false,true|}",
            "    state: ${16|query,present|}",
            "    timeout: ${17:30}",
            "    use_https: ${18|true,false|}",
            "    use_proxy: ${19|false,true|}",
            "    validate_certs: ${20|true,false|}",
            "$0"
        ],
        "description": "Manage the settings of networks in the Meraki cloud",
        "scope": "ansible"
    },
    "Manage organizations in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_snmp",
            "Manage organizations in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_snmp:",
            "    access: ${2:string}",
            "    auth_key: ${3:string}",
            "    community_string: ${4:string}",
            "    host: ${5:api.meraki.com}",
            "    internal_error_retry_time: ${6:60}",
            "    net_id: ${7:string}",
            "    net_name: ${8:string}",
            "    org_id: ${9:string}",
            "    org_name: ${10:string}",
            "    output_format: ${11|snakecase,camelcase|}",
            "    output_level: ${12|normal,debug|}",
            "    peer_ips:",
            "      - ${13:element}",
            "    rate_limit_retry_time: ${14:165}",
            "    state: ${15|present,query|}",
            "    timeout: ${16:30}",
            "    use_https: ${17|true,false|}",
            "    use_proxy: ${18|false,true|}",
            "    users:",
            "      - ${19:element}",
            "    v2c_enabled: ${20|false,true|}",
            "    v3_auth_mode: ${21:string}",
            "    v3_auth_pass: ${22:string}",
            "    v3_enabled: ${23|false,true|}",
            "    v3_priv_mode: ${24:string}",
            "    v3_priv_pass: ${25:string}",
            "    validate_certs: ${26|true,false|}",
            "$0"
        ],
        "description": "Manage organizations in the Meraki cloud",
        "scope": "ansible"
    },
    "Manage syslog server settings in the Meraki cloud.": {
        "prefix": [
            "cisco.meraki.meraki_syslog",
            "Manage syslog server settings in the Meraki cloud."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_syslog:",
            "    auth_key: ${2:string}",
            "    host: ${3:api.meraki.com}",
            "    internal_error_retry_time: ${4:60}",
            "    net_id: ${5:string}",
            "    net_name: ${6:string}",
            "    org_id: ${7:string}",
            "    org_name: ${8:string}",
            "    output_format: ${9|snakecase,camelcase|}",
            "    output_level: ${10|normal,debug|}",
            "    rate_limit_retry_time: ${11:165}",
            "    servers:",
            "      - ${12:element}",
            "    state: ${13|present,query|}",
            "    timeout: ${14:30}",
            "    use_https: ${15|true,false|}",
            "    use_proxy: ${16|false,true|}",
            "    validate_certs: ${17|true,false|}",
            "$0"
        ],
        "description": "Manage syslog server settings in the Meraki cloud.",
        "scope": "ansible"
    },
    "Manage webhooks configured in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_webhook",
            "Manage webhooks configured in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_webhook:",
            "    auth_key: ${2:string}",
            "    host: ${3:api.meraki.com}",
            "    internal_error_retry_time: ${4:60}",
            "    name: ${5:string}",
            "    net_id: ${6:string}",
            "    net_name: ${7:string}",
            "    org_id: ${8:string}",
            "    org_name: ${9:string}",
            "    output_format: ${10|snakecase,camelcase|}",
            "    output_level: ${11|normal,debug|}",
            "    payload_template_id: ${12:string}",
            "    payload_template_name: ${13:string}",
            "    rate_limit_retry_time: ${14:165}",
            "    shared_secret: ${15:string}",
            "    state: ${16|query,absent,present|}",
            "    test: ${17:string}",
            "    test_id: ${18:string}",
            "    timeout: ${19:30}",
            "    url: ${20:string}",
            "    use_https: ${21|true,false|}",
            "    use_proxy: ${22|false,true|}",
            "    validate_certs: ${23|true,false|}",
            "    webhook_id: ${24:string}",
            "$0"
        ],
        "description": "Manage webhooks configured in the Meraki cloud",
        "scope": "ansible"
    },
    "Manage webhook payload templates for a network in the Meraki cloud": {
        "prefix": [
            "cisco.meraki.meraki_webhook_payload_template",
            "Manage webhook payload templates for a network in the Meraki cloud"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  cisco.meraki.meraki_webhook_payload_template:",
            "    auth_key: ${2:string}",
            "    body: ${3:string}",
            "    headers:",
            "      - ${4:element}",
            "    host: ${5:api.meraki.com}",
            "    internal_error_retry_time: ${6:60}",
            "    name: ${7:string}",
            "    net_id: ${8:string}",
            "    net_name: ${9:string}",
            "    org_id: ${10:string}",
            "    org_name: ${11:string}",
            "    output_format: ${12|snakecase,camelcase|}",
            "    output_level: ${13|normal,debug|}",
            "    rate_limit_retry_time: ${14:165}",
            "    state: ${15|query,absent,present|}",
            "    timeout: ${16:30}",
            "    use_https: ${17|true,false|}",
            "    use_proxy: ${18|false,true|}",
            "    validate_certs: ${19|true,false|}",
            "$0"
        ],
        "description": "Manage webhook payload templates for a network in the Meraki cloud",
        "scope": "ansible"
    }
}