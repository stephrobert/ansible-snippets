{
    "Create/Delete/Update Zabbix actions": {
        "prefix": [
            "community.zabbix.zabbix_action",
            "Create/Delete/Update Zabbix actions"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_action:",
            "    acknowledge_operations:",
            "      - ${4:element}",
            "    conditions:",
            "      - ${5:element}",
            "    http_login_password: ${12:string}",
            "    http_login_user: ${13:string}",
            "    login_password: ${14:string}",
            "    login_user: ${15:string}",
            "    operations:",
            "      - ${17:element}",
            "    pause_in_maintenance: ${18|true,false|}",
            "    recovery_operations:",
            "      - ${21:element}",
            "    server_url: ${22:string}",
            "    timeout: ${25:int}",
            "    validate_certs: ${26|false,true|}",
            "$0"
        ],
        "description": "Create/Delete/Update Zabbix actions",
        "scope": "ansible"
    },
    "Update Zabbix authentication": {
        "prefix": [
            "community.zabbix.zabbix_authentication",
            "Update Zabbix authentication"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_authentication:",
            "    authentication_type: ${2:string}",
            "    http_auth_enabled: ${3|false,true|}",
            "    http_case_sensitive: ${4|false,true|}",
            "    http_login_form: ${5:string}",
            "    http_login_password: ${6:string}",
            "    http_login_user: ${7:string}",
            "    http_strip_domains:",
            "      - ${8:element}",
            "    ldap_base_dn: ${9:string}",
            "    ldap_bind_dn: ${10:string}",
            "    ldap_bind_password: ${11:string}",
            "    ldap_case_sensitive: ${12|false,true|}",
            "    ldap_configured: ${13|false,true|}",
            "    ldap_host: ${14:string}",
            "    ldap_port: ${15:int}",
            "    ldap_search_attribute: ${16:string}",
            "    ldap_userdirectory: ${17:string}",
            "    login_password: ${18:string}",
            "    login_user: ${19:string}",
            "    passwd_check_rules:",
            "      - ${20:element}",
            "    passwd_min_length: ${21:int}",
            "    saml_auth_enabled: ${22|false,true|}",
            "    saml_case_sensitive: ${23|false,true|}",
            "    saml_encrypt_assertions: ${24|false,true|}",
            "    saml_encrypt_nameid: ${25|false,true|}",
            "    saml_idp_entityid: ${26:string}",
            "    saml_nameid_format: ${27:string}",
            "    saml_sign_assertions: ${28|false,true|}",
            "    saml_sign_authn_requests: ${29|false,true|}",
            "    saml_sign_logout_requests: ${30|false,true|}",
            "    saml_sign_logout_responses: ${31|false,true|}",
            "    saml_sign_messages: ${32|false,true|}",
            "    saml_slo_url: ${33:string}",
            "    saml_sp_entityid: ${34:string}",
            "    saml_sso_url: ${35:string}",
            "    saml_username_attribute: ${36:string}",
            "    server_url: ${37:string}",
            "    timeout: ${38:int}",
            "    validate_certs: ${39|false,true|}",
            "$0"
        ],
        "description": "Update Zabbix authentication",
        "scope": "ansible"
    },
    "Update Zabbix autoregistration": {
        "prefix": [
            "community.zabbix.zabbix_autoregister",
            "Update Zabbix autoregistration"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_autoregister:",
            "    http_login_password: ${2:string}",
            "    http_login_user: ${3:string}",
            "    login_password: ${4:string}",
            "    login_user: ${5:string}",
            "    server_url: ${6:string}",
            "    timeout: ${7:int}",
            "    tls_accept:",
            "      - ${8:element}",
            "    tls_psk: ${9:string}",
            "    tls_psk_identity: ${10:string}",
            "    validate_certs: ${11|false,true|}",
            "$0"
        ],
        "description": "Update Zabbix autoregistration",
        "scope": "ansible"
    },
    "Create/delete/update Zabbix discovery rules": {
        "prefix": [
            "community.zabbix.zabbix_discovery_rule",
            "Create/delete/update Zabbix discovery rules"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_discovery_rule:",
            "    dchecks:",
            "      - ${2:element}",
            "    delay: ${3:1h}",
            "    http_login_password: ${4:string}",
            "    http_login_user: ${5:string}",
            "    iprange:",
            "      - ${6:element}",
            "    login_password: ${7:string}",
            "    login_user: ${8:string}",
            "    name: ${9:string}",
            "    proxy: ${10:string}",
            "    server_url: ${11:string}",
            "    state: ${12|present,absent|}",
            "    status: ${13|enabled,disabled|}",
            "    timeout: ${14:int}",
            "    validate_certs: ${15|false,true|}",
            "$0"
        ],
        "description": "Create/delete/update Zabbix discovery rules",
        "scope": "ansible"
    },
    "Create/update/delete Zabbix Global macros": {
        "prefix": [
            "community.zabbix.zabbix_globalmacro",
            "Create/update/delete Zabbix Global macros"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_globalmacro:",
            "    force: ${2|true,false|}",
            "    http_login_password: ${3:string}",
            "    http_login_user: ${4:string}",
            "    login_password: ${5:string}",
            "    login_user: ${6:string}",
            "    macro_description: ${7:}",
            "    macro_name: ${8:string}",
            "    macro_type: ${9|text,secret,vault|}",
            "    macro_value: ${10:string}",
            "    server_url: ${11:string}",
            "    state: ${12|present,absent|}",
            "    timeout: ${13:int}",
            "    validate_certs: ${14|false,true|}",
            "$0"
        ],
        "description": "Create/update/delete Zabbix Global macros",
        "scope": "ansible"
    },
    "Create/delete Zabbix host groups": {
        "prefix": [
            "community.zabbix.zabbix_group",
            "Create/delete Zabbix host groups"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_group:",
            "    host_groups:",
            "      - ${2:element}",
            "    http_login_password: ${3:string}",
            "    http_login_user: ${4:string}",
            "    login_password: ${5:string}",
            "    login_user: ${6:string}",
            "    server_url: ${7:string}",
            "    state: ${8|present,absent|}",
            "    timeout: ${9:int}",
            "    validate_certs: ${10|false,true|}",
            "$0"
        ],
        "description": "Create/delete Zabbix host groups",
        "scope": "ansible"
    },
    "Gather information about Zabbix hostgroup": {
        "prefix": [
            "community.zabbix.zabbix_group_info",
            "Gather information about Zabbix hostgroup"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_group_info:",
            "    hostgroup_name:",
            "      - ${2:element}",
            "    http_login_password: ${3:string}",
            "    http_login_user: ${4:string}",
            "    login_password: ${5:string}",
            "    login_user: ${6:string}",
            "    server_url: ${7:string}",
            "    timeout: ${8:int}",
            "    validate_certs: ${9|false,true|}",
            "$0"
        ],
        "description": "Gather information about Zabbix hostgroup",
        "scope": "ansible"
    },
    "Create/update/delete Zabbix hosts": {
        "prefix": [
            "community.zabbix.zabbix_host",
            "Create/update/delete Zabbix hosts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_host:",
            "    ca_cert: ${2:string}",
            "    description: ${3:string}",
            "    force: ${4|true,false|}",
            "    host_groups:",
            "      - ${5:element}",
            "    host_name: ${6:string}",
            "    http_login_password: ${7:string}",
            "    http_login_user: ${8:string}",
            "    interfaces:",
            "      - ${9:element}",
            "    inventory_mode: ${10:string}",
            "    ipmi_authtype: ${12:int}",
            "    ipmi_password: ${13:string}",
            "    ipmi_privilege: ${14:int}",
            "    ipmi_username: ${15:string}",
            "    link_templates:",
            "      - ${16:element}",
            "    login_password: ${17:string}",
            "    login_user: ${18:string}",
            "    macros:",
            "      - ${19:element}",
            "    proxy: ${20:string}",
            "    server_url: ${21:string}",
            "    state: ${22|present,absent|}",
            "    status: ${23|enabled,disabled|}",
            "    tags:",
            "      - ${24:element}",
            "    timeout: ${25:int}",
            "    tls_accept: ${26:int}",
            "    tls_connect: ${27:int}",
            "    tls_psk: ${28:string}",
            "    tls_psk_identity: ${29:string}",
            "    tls_subject: ${30:string}",
            "    validate_certs: ${31|false,true|}",
            "    visible_name: ${32:string}",
            "$0"
        ],
        "description": "Create/update/delete Zabbix hosts",
        "scope": "ansible"
    },
    "Get all triggers about a Zabbix host": {
        "prefix": [
            "community.zabbix.zabbix_host_events_info",
            "Get all triggers about a Zabbix host"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_host_events_info:",
            "    host_id_type: ${2|hostname,visible_name,hostid|}",
            "    host_identifier: ${3:string}",
            "    http_login_password: ${4:string}",
            "    http_login_user: ${5:string}",
            "    login_password: ${6:string}",
            "    login_user: ${7:string}",
            "    server_url: ${8:string}",
            "    timeout: ${9:int}",
            "    trigger_severity: ${10|average,not_classified,information,warning,high,disaster|}",
            "    validate_certs: ${11|false,true|}",
            "$0"
        ],
        "description": "Get all triggers about a Zabbix host",
        "scope": "ansible"
    },
    "Gather information about Zabbix host": {
        "prefix": [
            "community.zabbix.zabbix_host_info",
            "Gather information about Zabbix host"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_host_info:",
            "    exact_match: ${2|false,true|}",
            "    host_inventory:",
            "      - ${3:element}",
            "    host_ip:",
            "      - ${4:element}",
            "    host_name: ${5:}",
            "    http_login_password: ${6:string}",
            "    http_login_user: ${7:string}",
            "    login_password: ${8:string}",
            "    login_user: ${9:string}",
            "    remove_duplicate: ${10|true,false|}",
            "    server_url: ${11:string}",
            "    timeout: ${12:int}",
            "    validate_certs: ${13|false,true|}",
            "$0"
        ],
        "description": "Gather information about Zabbix host",
        "scope": "ansible"
    },
    "Create/update/delete Zabbix host macros": {
        "prefix": [
            "community.zabbix.zabbix_hostmacro",
            "Create/update/delete Zabbix host macros"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_hostmacro:",
            "    force: ${2|true,false|}",
            "    host_name: ${3:string}",
            "    http_login_password: ${4:string}",
            "    http_login_user: ${5:string}",
            "    login_password: ${6:string}",
            "    login_user: ${7:string}",
            "    macro_name: ${8:string}",
            "    macro_type: ${9|text,secret,vault|}",
            "    macro_value: ${10:string}",
            "    server_url: ${11:string}",
            "    state: ${12|present,absent|}",
            "    timeout: ${13:int}",
            "    validate_certs: ${14|false,true|}",
            "$0"
        ],
        "description": "Create/update/delete Zabbix host macros",
        "scope": "ansible"
    },
    "Update Zabbix housekeeping": {
        "prefix": [
            "community.zabbix.zabbix_housekeeping",
            "Update Zabbix housekeeping"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_housekeeping:",
            "    compress_older: ${2:string}",
            "    compression_status: ${3|false,true|}",
            "    hk_audit: ${4:string}",
            "    hk_audit_mode: ${5|false,true|}",
            "    hk_events_autoreg: ${6:string}",
            "    hk_events_discovery: ${7:string}",
            "    hk_events_internal: ${8:string}",
            "    hk_events_mode: ${9|false,true|}",
            "    hk_events_service: ${10:string}",
            "    hk_events_trigger: ${11:string}",
            "    hk_history: ${12:string}",
            "    hk_history_global: ${13|false,true|}",
            "    hk_history_mode: ${14|false,true|}",
            "    hk_services: ${15:string}",
            "    hk_services_mode: ${16|false,true|}",
            "    hk_sessions: ${17:string}",
            "    hk_sessions_mode: ${18|false,true|}",
            "    hk_trends: ${19:string}",
            "    hk_trends_global: ${20|false,true|}",
            "    hk_trends_mode: ${21|false,true|}",
            "    http_login_password: ${22:string}",
            "    http_login_user: ${23:string}",
            "    login_password: ${24:string}",
            "    login_user: ${25:string}",
            "    server_url: ${26:string}",
            "    timeout: ${27:int}",
            "    validate_certs: ${28|false,true|}",
            "$0"
        ],
        "description": "Update Zabbix housekeeping",
        "scope": "ansible"
    },
    "Create Zabbix maintenance windows": {
        "prefix": [
            "community.zabbix.zabbix_maintenance",
            "Create Zabbix maintenance windows"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_maintenance:",
            "    collect_data: ${2|true,false|}",
            "    desc: ${3:Created by Ansible}",
            "    host_groups:",
            "      - ${4:element}",
            "    host_names:",
            "      - ${5:element}",
            "    http_login_password: ${6:string}",
            "    http_login_user: ${7:string}",
            "    login_password: ${8:string}",
            "    login_user: ${9:string}",
            "    minutes: ${10:10}",
            "    name: ${11:string}",
            "    server_url: ${12:string}",
            "    state: ${13|present,absent|}",
            "    tags:",
            "      - ${14:element}",
            "    timeout: ${15:int}",
            "    validate_certs: ${16|false,true|}",
            "    visible_name: ${17|true,false|}",
            "$0"
        ],
        "description": "Create Zabbix maintenance windows",
        "scope": "ansible"
    },
    "Create/update/delete Zabbix maps": {
        "prefix": [
            "community.zabbix.zabbix_map",
            "Create/update/delete Zabbix maps"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_map:",
            "    data: ${2:string}",
            "    default_image: ${3:string}",
            "    expand_problem: ${4|true,false|}",
            "    height: ${5:600}",
            "    highlight: ${6|true,false|}",
            "    http_login_password: ${7:string}",
            "    http_login_user: ${8:string}",
            "    label_type: ${9|name,label,ip,status,nothing,custom|}",
            "    login_password: ${10:string}",
            "    login_user: ${11:string}",
            "    margin: ${12:40}",
            "    name: ${13:string}",
            "    server_url: ${14:string}",
            "    state: ${15|present,absent|}",
            "    timeout: ${16:int}",
            "    validate_certs: ${17|false,true|}",
            "    width: ${18:800}",
            "$0"
        ],
        "description": "Create/update/delete Zabbix maps",
        "scope": "ansible"
    },
    "Create/Update/Delete Zabbix media types": {
        "prefix": [
            "community.zabbix.zabbix_mediatype",
            "Create/Update/Delete Zabbix media types"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_mediatype:",
            "    attempt_interval: ${2:10s}",
            "    description: ${3:}",
            "    event_menu: ${4|false,true|}",
            "    event_menu_name: ${5:string}",
            "    event_menu_url: ${6:string}",
            "    gsm_modem: ${7:string}",
            "    http_login_password: ${8:string}",
            "    http_login_user: ${9:string}",
            "    login_password: ${10:string}",
            "    login_user: ${11:string}",
            "    max_attempts: ${12:3}",
            "    max_sessions: ${13:1}",
            "    message_templates:",
            "      - ${14:element}",
            "    message_text_limit: ${15:string}",
            "    name: ${16:string}",
            "    password: ${17:string}",
            "    process_tags: ${18|false,true|}",
            "    script_name: ${19:string}",
            "    script_params:",
            "      - ${20:element}",
            "    server_url: ${21:string}",
            "    smtp_authentication: ${22|false,true|}",
            "    smtp_email: ${23:string}",
            "    smtp_helo: ${24:localhost}",
            "    smtp_security: ${25:string}",
            "    smtp_server: ${26:localhost}",
            "    smtp_server_port: ${27:25}",
            "    smtp_verify_host: ${28|false,true|}",
            "    smtp_verify_peer: ${29|false,true|}",
            "    state: ${30|present,absent|}",
            "    status: ${31|enabled,disabled|}",
            "    timeout: ${32:int}",
            "    type: ${33:string}",
            "    username: ${34:string}",
            "    validate_certs: ${35|false,true|}",
            "    webhook_params:",
            "      - ${36:element}",
            "    webhook_script: ${37:string}",
            "    webhook_timeout: ${38:30s}",
            "$0"
        ],
        "description": "Create/Update/Delete Zabbix media types",
        "scope": "ansible"
    },
    "Create/delete/get/update Zabbix proxies": {
        "prefix": [
            "community.zabbix.zabbix_proxy",
            "Create/delete/get/update Zabbix proxies"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_proxy:",
            "    ca_cert: ${2:string}",
            "    description: ${3:string}",
            "    http_login_password: ${4:string}",
            "    http_login_user: ${5:string}",
            "    login_password: ${7:string}",
            "    login_user: ${8:string}",
            "    proxy_address: ${9:string}",
            "    proxy_name: ${10:string}",
            "    server_url: ${11:string}",
            "    state: ${12|present,absent|}",
            "    status: ${13|active,passive|}",
            "    timeout: ${14:int}",
            "    tls_accept: ${15|no_encryption,PSK,certificate|}",
            "    tls_connect: ${16|no_encryption,PSK,certificate|}",
            "    tls_psk: ${17:string}",
            "    tls_psk_identity: ${18:string}",
            "    tls_subject: ${19:string}",
            "    validate_certs: ${20|false,true|}",
            "$0"
        ],
        "description": "Create/delete/get/update Zabbix proxies",
        "scope": "ansible"
    },
    "Gather information about Zabbix proxy": {
        "prefix": [
            "community.zabbix.zabbix_proxy_info",
            "Gather information about Zabbix proxy"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_proxy_info:",
            "    http_login_password: ${2:string}",
            "    http_login_user: ${3:string}",
            "    login_password: ${4:string}",
            "    login_user: ${5:string}",
            "    proxy_hosts: ${6|false,true|}",
            "    proxy_name: ${7:string}",
            "    server_url: ${8:string}",
            "    timeout: ${9:int}",
            "    validate_certs: ${10|false,true|}",
            "$0"
        ],
        "description": "Gather information about Zabbix proxy",
        "scope": "ansible"
    },
    "Create/update/delete Zabbix screens": {
        "prefix": [
            "community.zabbix.zabbix_screen",
            "Create/update/delete Zabbix screens"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_screen:",
            "    http_login_password: ${2:string}",
            "    http_login_user: ${3:string}",
            "    login_password: ${4:string}",
            "    login_user: ${5:string}",
            "    screens:",
            "      - ${6:element}",
            "    server_url: ${7:string}",
            "    timeout: ${8:int}",
            "    validate_certs: ${9|false,true|}",
            "$0"
        ],
        "description": "Create/update/delete Zabbix screens",
        "scope": "ansible"
    },
    "Create/update/delete Zabbix scripts": {
        "prefix": [
            "community.zabbix.zabbix_script",
            "Create/update/delete Zabbix scripts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_script:",
            "    authtype: ${2:string}",
            "    command: ${3:string}",
            "    confirmation: ${4:string}",
            "    description: ${5:string}",
            "    execute_on: ${6|zabbix_server_proxy,zabbix_agent,zabbix_server|}",
            "    host_access: ${7|read,write|}",
            "    host_group: ${8:all}",
            "    http_login_password: ${9:string}",
            "    http_login_user: ${10:string}",
            "    login_password: ${11:string}",
            "    login_user: ${12:string}",
            "    menu_path: ${13:string}",
            "    name: ${14:string}",
            "    parameters:",
            "      - ${15:element}",
            "    password: ${16:string}",
            "    port: ${17:string}",
            "    privatekey: ${18:string}",
            "    publickey: ${19:string}",
            "    scope: ${20|action_operation,manual_host_action,manual_event_action|}",
            "    script_timeout: ${21:30s}",
            "    script_type: ${22:string}",
            "    server_url: ${23:string}",
            "    state: ${24|present,absent|}",
            "    timeout: ${25:int}",
            "    user_group: ${26:all}",
            "    username: ${27:string}",
            "    validate_certs: ${28|false,true|}",
            "$0"
        ],
        "description": "Create/update/delete Zabbix scripts",
        "scope": "ansible"
    },
    "Create/update/delete Zabbix service": {
        "prefix": [
            "community.zabbix.zabbix_service",
            "Create/update/delete Zabbix service"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_service:",
            "    algorithm: ${2|one_child,no,all_children,status_to_ok,most_crit_if_all_children,most_crit_of_child_serv|}",
            "    calculate_sla: ${3|false,true|}",
            "    children:",
            "      - ${4:element}",
            "    description: ${5:string}",
            "    http_login_password: ${6:string}",
            "    http_login_user: ${7:string}",
            "    login_password: ${8:string}",
            "    login_user: ${9:string}",
            "    name: ${10:string}",
            "    parent: ${11:string}",
            "    parents:",
            "      - ${12:element}",
            "    problem_tags:",
            "      - ${13:element}",
            "    propagation_rule: ${14:as_is}",
            "    propagation_value: ${15:string}",
            "    server_url: ${16:string}",
            "    sortorder: ${18:string}",
            "    state: ${19|present,absent|}",
            "    status_rules:",
            "      - ${20:element}",
            "    tags:",
            "      - ${21:element}",
            "    timeout: ${22:int}",
            "    trigger_host: ${23:string}",
            "    trigger_name: ${24:string}",
            "    validate_certs: ${25|false,true|}",
            "    weight: ${26:0}",
            "$0"
        ],
        "description": "Create/update/delete Zabbix service",
        "scope": "ansible"
    },
    "Create/update/delete/dump Zabbix template": {
        "prefix": [
            "community.zabbix.zabbix_template",
            "Create/update/delete/dump Zabbix template"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_template:",
            "    clear_templates:",
            "      - ${2:element}",
            "    dump_format: ${3|json,xml|}",
            "    http_login_password: ${4:string}",
            "    http_login_user: ${5:string}",
            "    link_templates:",
            "      - ${6:element}",
            "    login_password: ${7:string}",
            "    login_user: ${8:string}",
            "    macros:",
            "      - ${9:element}",
            "    omit_date: ${10|false,true|}",
            "    server_url: ${11:string}",
            "    state: ${12|present,absent,dump|}",
            "    tags:",
            "      - ${13:element}",
            "    template_groups:",
            "      - ${14:element}",
            "    template_name: ${16:string}",
            "    template_xml: ${17:string}",
            "    timeout: ${18:int}",
            "    validate_certs: ${19|false,true|}",
            "$0"
        ],
        "description": "Create/update/delete/dump Zabbix template",
        "scope": "ansible"
    },
    "Gather information about Zabbix template": {
        "prefix": [
            "community.zabbix.zabbix_template_info",
            "Gather information about Zabbix template"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_template_info:",
            "    format: ${2|json,xml,yaml,none|}",
            "    http_login_password: ${3:string}",
            "    http_login_user: ${4:string}",
            "    login_password: ${5:string}",
            "    login_user: ${6:string}",
            "    omit_date: ${7|false,true|}",
            "    server_url: ${8:string}",
            "    template_name: ${9:string}",
            "    timeout: ${10:int}",
            "    validate_certs: ${11|false,true|}",
            "$0"
        ],
        "description": "Gather information about Zabbix template",
        "scope": "ansible"
    },
    "Create/update/delete Zabbix users": {
        "prefix": [
            "community.zabbix.zabbix_user",
            "Create/update/delete Zabbix users"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_user:",
            "    after_login_url: ${2:string}",
            "    autologin: ${3|false,true|}",
            "    autologout: ${4:string}",
            "    http_login_password: ${5:string}",
            "    http_login_user: ${6:string}",
            "    lang: ${7:string}",
            "    login_password: ${8:string}",
            "    login_user: ${9:string}",
            "    name: ${10:string}",
            "    override_passwd: ${11|false,true|}",
            "    passwd: ${12:string}",
            "    refresh: ${13:string}",
            "    role_name: ${14:string}",
            "    rows_per_page: ${15:string}",
            "    server_url: ${16:string}",
            "    state: ${17|present,absent|}",
            "    surname: ${18:string}",
            "    theme: ${19:string}",
            "    timeout: ${20:int}",
            "    timezone: ${21:string}",
            "    type: ${22:string}",
            "    user_medias:",
            "      - ${23:element}",
            "    username: ${24:string}",
            "    usrgrps:",
            "      - ${25:element}",
            "    validate_certs: ${26|false,true|}",
            "$0"
        ],
        "description": "Create/update/delete Zabbix users",
        "scope": "ansible"
    },
    "Create/update/delete Zabbix user directories": {
        "prefix": [
            "community.zabbix.zabbix_user_directory",
            "Create/update/delete Zabbix user directories"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_user_directory:",
            "    base_dn: ${2:string}",
            "    bind_dn: ${3:}",
            "    bind_password: ${4:string}",
            "    description: ${5:}",
            "    host: ${6:string}",
            "    http_login_password: ${7:string}",
            "    http_login_user: ${8:string}",
            "    login_password: ${9:string}",
            "    login_user: ${10:string}",
            "    name: ${11:string}",
            "    port: ${12:int}",
            "    search_attribute: ${13:string}",
            "    search_filter: ${14:(%{attr}=%{user})}",
            "    server_url: ${15:string}",
            "    start_tls: ${16:0}",
            "    state: ${17|present,absent|}",
            "    timeout: ${18:int}",
            "    validate_certs: ${19|false,true|}",
            "$0"
        ],
        "description": "Create/update/delete Zabbix user directories",
        "scope": "ansible"
    },
    "Gather information about Zabbix user": {
        "prefix": [
            "community.zabbix.zabbix_user_info",
            "Gather information about Zabbix user"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_user_info:",
            "    http_login_password: ${2:string}",
            "    http_login_user: ${3:string}",
            "    login_password: ${4:string}",
            "    login_user: ${5:string}",
            "    server_url: ${6:string}",
            "    timeout: ${7:int}",
            "    username: ${8:string}",
            "    validate_certs: ${9|false,true|}",
            "$0"
        ],
        "description": "Gather information about Zabbix user",
        "scope": "ansible"
    },
    "Adds or removes zabbix roles": {
        "prefix": [
            "community.zabbix.zabbix_user_role",
            "Adds or removes zabbix roles"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_user_role:",
            "    http_login_password: ${2:string}",
            "    http_login_user: ${3:string}",
            "    login_password: ${4:string}",
            "    login_user: ${5:string}",
            "    name: ${6:string}",
            "    server_url: ${8:string}",
            "    state: ${9|present,absent|}",
            "    timeout: ${10:int}",
            "    type: ${11|User,Admin,SuperAdmin|}",
            "    validate_certs: ${12|false,true|}",
            "$0"
        ],
        "description": "Adds or removes zabbix roles",
        "scope": "ansible"
    },
    "Create/delete/update Zabbix user groups": {
        "prefix": [
            "community.zabbix.zabbix_usergroup",
            "Create/delete/update Zabbix user groups"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_usergroup:",
            "    debug_mode: ${2|disabled,enabled|}",
            "    gui_access: ${3|default,internal,LDAP,disable|}",
            "    http_login_password: ${4:string}",
            "    http_login_user: ${5:string}",
            "    login_password: ${6:string}",
            "    login_user: ${7:string}",
            "    name: ${8:string}",
            "    rights:",
            "      - ${9:element}",
            "    server_url: ${10:string}",
            "    state: ${11|present,absent|}",
            "    status: ${12|enabled,disabled|}",
            "    tag_filters:",
            "      - ${13:element}",
            "    timeout: ${14:int}",
            "    validate_certs: ${15|false,true|}",
            "$0"
        ],
        "description": "Create/delete/update Zabbix user groups",
        "scope": "ansible"
    },
    "Create/update/delete Zabbix value maps": {
        "prefix": [
            "community.zabbix.zabbix_valuemap",
            "Create/update/delete Zabbix value maps"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  community.zabbix.zabbix_valuemap:",
            "    http_login_password: ${2:string}",
            "    http_login_user: ${3:string}",
            "    login_password: ${4:string}",
            "    login_user: ${5:string}",
            "    mappings:",
            "      - ${6:element}",
            "    name: ${7:string}",
            "    server_url: ${8:string}",
            "    state: ${9|present,absent|}",
            "    timeout: ${10:int}",
            "    validate_certs: ${11|false,true|}",
            "$0"
        ],
        "description": "Create/update/delete Zabbix value maps",
        "scope": "ansible"
    }
}