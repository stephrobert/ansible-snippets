{
    "Manages accounts on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_account",
            "Manages accounts on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_account:",
            "    account_type: ${2|user,root_admin,domain_admin|}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    domain: ${9:ROOT}",
            "    email: ${10:string}",
            "    first_name: ${11:string}",
            "    last_name: ${12:string}",
            "    ldap_domain: ${13:string}",
            "    ldap_type: ${14|GROUP,OU|}",
            "    name: ${15:string}",
            "    network_domain: ${16:string}",
            "    password: ${17:string}",
            "    poll_async: ${18|true,false|}",
            "    role: ${19:string}",
            "    state: ${20|present,absent,enabled,disabled,locked,unlocked|}",
            "    timezone: ${21:string}",
            "    username: ${22:string}",
            "$0"
        ],
        "description": "Manages accounts on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages affinity groups on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_affinitygroup",
            "Manages affinity groups on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_affinitygroup:",
            "    account: ${2:string}",
            "    affinity_type: ${3:string}",
            "    api_http_method: ${4|get,post|}",
            "    api_key: ${5:string}",
            "    api_secret: ${6:string}",
            "    api_timeout: ${7:10}",
            "    api_url: ${8:string}",
            "    api_verify_ssl_cert: ${9:string}",
            "    description: ${10:string}",
            "    domain: ${11:string}",
            "    name: ${12:string}",
            "    poll_async: ${13|true,false|}",
            "    project: ${14:string}",
            "    state: ${15|present,absent|}",
            "$0"
        ],
        "description": "Manages affinity groups on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages host clusters on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_cluster",
            "Manages host clusters on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_cluster:",
            "    api_http_method: ${2|get,post|}",
            "    api_key: ${3:string}",
            "    api_secret: ${4:string}",
            "    api_timeout: ${5:10}",
            "    api_url: ${6:string}",
            "    api_verify_ssl_cert: ${7:string}",
            "    cluster_type: ${8:string}",
            "    guest_vswitch_name: ${9:string}",
            "    guest_vswitch_type: ${10:string}",
            "    hypervisor: ${11:string}",
            "    name: ${12:string}",
            "    ovm3_cluster: ${13:string}",
            "    ovm3_pool: ${14:string}",
            "    ovm3_vip: ${15:string}",
            "    password: ${16:string}",
            "    pod: ${17:string}",
            "    public_vswitch_name: ${18:string}",
            "    public_vswitch_type: ${19:string}",
            "    state: ${20|present,absent,disabled,enabled|}",
            "    url: ${21:string}",
            "    username: ${22:string}",
            "    vms_ip_address: ${23:string}",
            "    vms_password: ${24:string}",
            "    vms_username: ${25:string}",
            "    zone: ${26:string}",
            "$0"
        ],
        "description": "Manages host clusters on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages configuration on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_configuration",
            "Manages configuration on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_configuration:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    cluster: ${9:string}",
            "    domain: ${10:ROOT}",
            "    name: ${11:string}",
            "    storage: ${12:string}",
            "    value: ${13:string}",
            "    zone: ${14:string}",
            "$0"
        ],
        "description": "Manages configuration on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages disk offerings on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_disk_offering",
            "Manages disk offerings on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_disk_offering:",
            "    api_http_method: ${2|get,post|}",
            "    api_key: ${3:string}",
            "    api_secret: ${4:string}",
            "    api_timeout: ${5:10}",
            "    api_url: ${6:string}",
            "    api_verify_ssl_cert: ${7:string}",
            "    bytes_read_rate: ${8:int}",
            "    bytes_write_rate: ${9:int}",
            "    customized: ${10|false,true|}",
            "    disk_size: ${11:int}",
            "    display_offering: ${12|false,true|}",
            "    display_text: ${13:string}",
            "    domain: ${14:string}",
            "    hypervisor_snapshot_reserve: ${15:int}",
            "    iops_max: ${16:int}",
            "    iops_min: ${17:int}",
            "    iops_read_rate: ${18:int}",
            "    iops_write_rate: ${19:int}",
            "    name: ${20:string}",
            "    provisioning_type: ${21:string}",
            "    state: ${22|present,absent|}",
            "    storage_tags:",
            "      - ${23:element}",
            "    storage_type: ${24:string}",
            "$0"
        ],
        "description": "Manages disk offerings on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages domains on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_domain",
            "Manages domains on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_domain:",
            "    api_http_method: ${2|get,post|}",
            "    api_key: ${3:string}",
            "    api_secret: ${4:string}",
            "    api_timeout: ${5:10}",
            "    api_url: ${6:string}",
            "    api_verify_ssl_cert: ${7:string}",
            "    clean_up: ${8|false,true|}",
            "    network_domain: ${9:string}",
            "    path: ${10:string}",
            "    poll_async: ${11|true,false|}",
            "    state: ${12|present,absent|}",
            "$0"
        ],
        "description": "Manages domains on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Gather facts on instances of Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_facts",
            "Gather facts on instances of Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_facts:",
            "    filter: ${2:string}",
            "    meta_data_host: ${3:string}",
            "$0"
        ],
        "description": "Gather facts on instances of Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages firewall rules on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_firewall",
            "Manages firewall rules on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_firewall:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    cidrs:",
            "      - ${9:element}",
            "    domain: ${10:string}",
            "    end_port: ${11:int}",
            "    icmp_code: ${12:int}",
            "    icmp_type: ${13:int}",
            "    ip_address: ${14:string}",
            "    network: ${15:string}",
            "    poll_async: ${16|true,false|}",
            "    project: ${17:string}",
            "    protocol: ${18|tcp,udp,icmp,all|}",
            "    start_port: ${19:int}",
            "    state: ${20|present,absent|}",
            "    tags:",
            "      - ${21:element}",
            "    type: ${22|ingress,egress|}",
            "    zone: ${23:string}",
            "$0"
        ],
        "description": "Manages firewall rules on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages hosts on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_host",
            "Manages hosts on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_host:",
            "    allocation_state: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    cluster: ${9:string}",
            "    host_tags:",
            "      - ${10:element}",
            "    hypervisor: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    pod: ${14:string}",
            "    state: ${15|present,absent|}",
            "    url: ${16:string}",
            "    username: ${17:string}",
            "    zone: ${18:string}",
            "$0"
        ],
        "description": "Manages hosts on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages CloudStack Image Stores.": {
        "prefix": [
            "ngine_io.cloudstack.cs_image_store",
            "Manages CloudStack Image Stores."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_image_store:",
            "    api_http_method: ${2|get,post|}",
            "    api_key: ${3:string}",
            "    api_secret: ${4:string}",
            "    api_timeout: ${5:10}",
            "    api_url: ${6:string}",
            "    api_verify_ssl_cert: ${7:string}",
            "    force_recreate: ${8|false,true|}",
            "    name: ${9:string}",
            "    provider: ${10:string}",
            "    state: ${11|present,absent|}",
            "    url: ${12:string}",
            "    zone: ${13:string}",
            "$0"
        ],
        "description": "Manages CloudStack Image Stores.",
        "scope": "ansible"
    },
    "Manages instances and virtual machines on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_instance",
            "Manages instances and virtual machines on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_instance:",
            "    account: ${2:string}",
            "    affinity_groups:",
            "      - ${3:element}",
            "    allow_root_disk_shrink: ${4|false,true|}",
            "    api_http_method: ${5|get,post|}",
            "    api_key: ${6:string}",
            "    api_secret: ${7:string}",
            "    api_timeout: ${8:10}",
            "    api_url: ${9:string}",
            "    api_verify_ssl_cert: ${10:string}",
            "    cluster: ${11:string}",
            "    cpu: ${12:int}",
            "    cpu_speed: ${13:int}",
            "    disk_offering: ${15:string}",
            "    disk_size: ${16:int}",
            "    display_name: ${17:string}",
            "    domain: ${18:string}",
            "    force: ${19|false,true|}",
            "    group: ${20:string}",
            "    host: ${21:string}",
            "    hypervisor: ${22:string}",
            "    ip6_address: ${23:string}",
            "    ip_address: ${24:string}",
            "    ip_to_networks:",
            "      - ${25:element}",
            "    iso: ${26:string}",
            "    keyboard: ${27:string}",
            "    memory: ${28:int}",
            "    name: ${29:string}",
            "    networks:",
            "      - ${30:element}",
            "    pod: ${31:string}",
            "    poll_async: ${32|true,false|}",
            "    project: ${33:string}",
            "    root_disk_size: ${34:int}",
            "    security_groups:",
            "      - ${35:element}",
            "    service_offering: ${36:string}",
            "    ssh_key: ${37:string}",
            "    state: ${38|present,deployed,started,stopped,restarted,restored,destroyed,expunged,absent|}",
            "    tags:",
            "      - ${39:element}",
            "    template: ${40:string}",
            "    template_filter: ${41|executable,all,featured,self,selfexecutable,sharedexecutable,community|}",
            "    user_data: ${42:string}",
            "    zone: ${43:string}",
            "$0"
        ],
        "description": "Manages instances and virtual machines on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Gathering information from the API of instances from Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_instance_info",
            "Gathering information from the API of instances from Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_instance_info:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    domain: ${9:string}",
            "    host: ${10:string}",
            "    name: ${11:string}",
            "    project: ${12:string}",
            "$0"
        ],
        "description": "Gathering information from the API of instances from Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages NICs of an instance on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_instance_nic",
            "Manages NICs of an instance on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_instance_nic:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    domain: ${9:string}",
            "    ip_address: ${10:string}",
            "    network: ${11:string}",
            "    poll_async: ${12|true,false|}",
            "    project: ${13:string}",
            "    state: ${14|present,absent|}",
            "    vm: ${15:string}",
            "    vpc: ${16:string}",
            "    zone: ${17:string}",
            "$0"
        ],
        "description": "Manages NICs of an instance on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages secondary IPs of an instance on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_instance_nic_secondaryip",
            "Manages secondary IPs of an instance on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_instance_nic_secondaryip:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    domain: ${9:string}",
            "    network: ${10:string}",
            "    poll_async: ${11|true,false|}",
            "    project: ${12:string}",
            "    state: ${13|present,absent|}",
            "    vm: ${14:string}",
            "    vm_guest_ip: ${15:string}",
            "    vpc: ${16:string}",
            "    zone: ${17:string}",
            "$0"
        ],
        "description": "Manages secondary IPs of an instance on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Allows resetting VM the default passwords on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_instance_password_reset",
            "Allows resetting VM the default passwords on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_instance_password_reset:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    domain: ${9:string}",
            "    poll_async: ${10|true,false|}",
            "    project: ${11:string}",
            "    vm: ${12:string}",
            "    zone: ${13:string}",
            "$0"
        ],
        "description": "Allows resetting VM the default passwords on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages instance groups on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_instancegroup",
            "Manages instance groups on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_instancegroup:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    domain: ${9:string}",
            "    name: ${10:string}",
            "    project: ${11:string}",
            "    state: ${12|present,absent|}",
            "$0"
        ],
        "description": "Manages instance groups on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages public IP address associations on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_ip_address",
            "Manages public IP address associations on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_ip_address:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    domain: ${9:string}",
            "    ip_address: ${10:string}",
            "    network: ${11:string}",
            "    poll_async: ${12|true,false|}",
            "    project: ${13:string}",
            "    state: ${14|present,absent|}",
            "    tags:",
            "      - ${15:element}",
            "    vpc: ${16:string}",
            "    zone: ${17:string}",
            "$0"
        ],
        "description": "Manages public IP address associations on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages ISO images on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_iso",
            "Manages ISO images on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_iso:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    bootable: ${9|false,true|}",
            "    checksum: ${10:string}",
            "    cross_zones: ${11|false,true|}",
            "    display_text: ${12:string}",
            "    domain: ${13:string}",
            "    is_dynamically_scalable: ${14|false,true|}",
            "    is_featured: ${15|false,true|}",
            "    is_public: ${16|false,true|}",
            "    is_ready: ${17|false,true|}",
            "    iso_filter: ${18|self,featured,selfexecutable,sharedexecutable,executable,community|}",
            "    name: ${19:string}",
            "    os_type: ${20:string}",
            "    poll_async: ${21|true,false|}",
            "    project: ${22:string}",
            "    state: ${23|present,absent|}",
            "    tags:",
            "      - ${24:element}",
            "    url: ${25:string}",
            "    zone: ${26:string}",
            "$0"
        ],
        "description": "Manages ISO images on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages load balancer rules on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_loadbalancer_rule",
            "Manages load balancer rules on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_loadbalancer_rule:",
            "    account: ${2:string}",
            "    algorithm: ${3|source,roundrobin,leastconn|}",
            "    api_http_method: ${4|get,post|}",
            "    api_key: ${5:string}",
            "    api_secret: ${6:string}",
            "    api_timeout: ${7:10}",
            "    api_url: ${8:string}",
            "    api_verify_ssl_cert: ${9:string}",
            "    cidr: ${10:string}",
            "    description: ${11:string}",
            "    domain: ${12:string}",
            "    ip_address: ${13:string}",
            "    name: ${14:string}",
            "    network: ${15:string}",
            "    open_firewall: ${16|false,true|}",
            "    poll_async: ${17|true,false|}",
            "    private_port: ${18:int}",
            "    project: ${19:string}",
            "    protocol: ${20:string}",
            "    public_port: ${21:int}",
            "    state: ${22|present,absent|}",
            "    tags:",
            "      - ${23:element}",
            "    vpc: ${24:string}",
            "    zone: ${25:string}",
            "$0"
        ],
        "description": "Manages load balancer rules on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages load balancer rule members on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_loadbalancer_rule_member",
            "Manages load balancer rule members on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_loadbalancer_rule_member:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    domain: ${9:string}",
            "    ip_address: ${10:string}",
            "    name: ${11:string}",
            "    poll_async: ${12|true,false|}",
            "    project: ${13:string}",
            "    state: ${14|present,absent|}",
            "    vms:",
            "      - ${15:element}",
            "    zone: ${16:string}",
            "$0"
        ],
        "description": "Manages load balancer rule members on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages networks on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_network",
            "Manages networks on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_network:",
            "    account: ${2:string}",
            "    acl: ${3:string}",
            "    acl_type: ${4:string}",
            "    api_http_method: ${5|get,post|}",
            "    api_key: ${6:string}",
            "    api_secret: ${7:string}",
            "    api_timeout: ${8:10}",
            "    api_url: ${9:string}",
            "    api_verify_ssl_cert: ${10:string}",
            "    cidr_ipv6: ${11:string}",
            "    clean_up: ${12|false,true|}",
            "    display_text: ${13:string}",
            "    domain: ${14:string}",
            "    end_ip: ${15:string}",
            "    end_ipv6: ${16:string}",
            "    gateway: ${17:string}",
            "    gateway_ipv6: ${18:string}",
            "    isolated_pvlan: ${19:string}",
            "    name: ${20:string}",
            "    netmask: ${21:string}",
            "    network_domain: ${22:string}",
            "    network_offering: ${23:string}",
            "    poll_async: ${24|true,false|}",
            "    project: ${25:string}",
            "    start_ip: ${26:string}",
            "    start_ipv6: ${27:string}",
            "    state: ${28|present,absent,restarted|}",
            "    subdomain_access: ${29|false,true|}",
            "    tags:",
            "      - ${30:element}",
            "    vlan: ${31:string}",
            "    vpc: ${32:string}",
            "    zone: ${33:string}",
            "$0"
        ],
        "description": "Manages networks on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages network access control lists (ACL) on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_network_acl",
            "Manages network access control lists (ACL) on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_network_acl:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    description: ${9:string}",
            "    domain: ${10:string}",
            "    name: ${11:string}",
            "    poll_async: ${12|true,false|}",
            "    project: ${13:string}",
            "    state: ${14|present,absent|}",
            "    vpc: ${15:string}",
            "    zone: ${16:string}",
            "$0"
        ],
        "description": "Manages network access control lists (ACL) on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages network access control list (ACL) rules on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_network_acl_rule",
            "Manages network access control list (ACL) rules on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_network_acl_rule:",
            "    account: ${2:string}",
            "    action_policy: ${3|allow,deny|}",
            "    api_http_method: ${4|get,post|}",
            "    api_key: ${5:string}",
            "    api_secret: ${6:string}",
            "    api_timeout: ${7:10}",
            "    api_url: ${8:string}",
            "    api_verify_ssl_cert: ${9:string}",
            "    cidrs:",
            "      - ${10:element}",
            "    domain: ${11:string}",
            "    end_port: ${12:int}",
            "    icmp_code: ${13:int}",
            "    icmp_type: ${14:int}",
            "    network_acl: ${15:string}",
            "    poll_async: ${16|true,false|}",
            "    project: ${17:string}",
            "    protocol: ${18|tcp,udp,icmp,all,by_number|}",
            "    protocol_number: ${19:int}",
            "    rule_position: ${20:int}",
            "    start_port: ${21:int}",
            "    state: ${22|present,absent|}",
            "    tags:",
            "      - ${23:element}",
            "    traffic_type: ${24|ingress,egress|}",
            "    vpc: ${25:string}",
            "    zone: ${26:string}",
            "$0"
        ],
        "description": "Manages network access control list (ACL) rules on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages network offerings on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_network_offering",
            "Manages network offerings on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_network_offering:",
            "    api_http_method: ${2|get,post|}",
            "    api_key: ${3:string}",
            "    api_secret: ${4:string}",
            "    api_timeout: ${5:10}",
            "    api_url: ${6:string}",
            "    api_verify_ssl_cert: ${7:string}",
            "    availability: ${8:string}",
            "    conserve_mode: ${9|false,true|}",
            "    details:",
            "      - ${10:element}",
            "    display_text: ${11:string}",
            "    domains:",
            "      - ${12:element}",
            "    egress_default_policy: ${13:string}",
            "    for_vpc: ${14|false,true|}",
            "    guest_ip_type: ${15:string}",
            "    keepalive_enabled: ${16|false,true|}",
            "    max_connections: ${17:int}",
            "    name: ${18:string}",
            "    network_rate: ${19:int}",
            "    persistent: ${20|false,true|}",
            "    service_capabilities:",
            "      - ${21:element}",
            "    service_offering: ${22:string}",
            "    service_providers:",
            "      - ${23:element}",
            "    specify_ip_ranges: ${24|false,true|}",
            "    specify_vlan: ${25|false,true|}",
            "    state: ${26|present,enabled,disabled,absent|}",
            "    supported_services:",
            "      - ${27:element}",
            "    tags:",
            "      - ${28:element}",
            "    traffic_type: ${29:Guest}",
            "    zones:",
            "      - ${30:element}",
            "$0"
        ],
        "description": "Manages network offerings on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages physical networks on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_physical_network",
            "Manages physical networks on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_physical_network:",
            "    api_http_method: ${2|get,post|}",
            "    api_key: ${3:string}",
            "    api_secret: ${4:string}",
            "    api_timeout: ${5:10}",
            "    api_url: ${6:string}",
            "    api_verify_ssl_cert: ${7:string}",
            "    broadcast_domain_range: ${8:string}",
            "    domain: ${9:string}",
            "    isolation_method: ${10:string}",
            "    name: ${11:string}",
            "    network_speed: ${12:string}",
            "    nsps_disabled:",
            "      - ${13:element}",
            "    nsps_enabled:",
            "      - ${14:element}",
            "    poll_async: ${15|true,false|}",
            "    state: ${16|present,absent,disabled,enabled|}",
            "    tags: ${17:string}",
            "    vlan: ${18:string}",
            "    zone: ${19:string}",
            "$0"
        ],
        "description": "Manages physical networks on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages pods on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_pod",
            "Manages pods on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_pod:",
            "    api_http_method: ${2|get,post|}",
            "    api_key: ${3:string}",
            "    api_secret: ${4:string}",
            "    api_timeout: ${5:10}",
            "    api_url: ${6:string}",
            "    api_verify_ssl_cert: ${7:string}",
            "    end_ip: ${8:string}",
            "    gateway: ${9:string}",
            "    id: ${10:string}",
            "    name: ${11:string}",
            "    netmask: ${12:string}",
            "    start_ip: ${13:string}",
            "    state: ${14|present,enabled,disabled,absent|}",
            "    zone: ${15:string}",
            "$0"
        ],
        "description": "Manages pods on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages port forwarding rules on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_portforward",
            "Manages port forwarding rules on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_portforward:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    domain: ${9:string}",
            "    ip_address: ${10:string}",
            "    network: ${11:string}",
            "    open_firewall: ${12|false,true|}",
            "    poll_async: ${13|true,false|}",
            "    private_end_port: ${14:int}",
            "    private_port: ${15:int}",
            "    project: ${16:string}",
            "    protocol: ${17|tcp,udp|}",
            "    public_end_port: ${18:int}",
            "    public_port: ${19:int}",
            "    state: ${20|present,absent|}",
            "    tags:",
            "      - ${21:element}",
            "    vm: ${22:string}",
            "    vm_guest_ip: ${23:string}",
            "    vpc: ${24:string}",
            "    zone: ${25:string}",
            "$0"
        ],
        "description": "Manages port forwarding rules on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages projects on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_project",
            "Manages projects on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_project:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    display_text: ${9:string}",
            "    domain: ${10:string}",
            "    name: ${11:string}",
            "    poll_async: ${12|true,false|}",
            "    state: ${13|present,absent,active,suspended|}",
            "    tags:",
            "      - ${14:element}",
            "$0"
        ],
        "description": "Manages projects on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages regions on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_region",
            "Manages regions on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_region:",
            "    api_http_method: ${2|get,post|}",
            "    api_key: ${3:string}",
            "    api_secret: ${4:string}",
            "    api_timeout: ${5:10}",
            "    api_url: ${6:string}",
            "    api_verify_ssl_cert: ${7:string}",
            "    endpoint: ${8:string}",
            "    id: ${9:int}",
            "    name: ${10:string}",
            "    state: ${11|present,absent|}",
            "$0"
        ],
        "description": "Manages regions on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages resource limits on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_resourcelimit",
            "Manages resource limits on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_resourcelimit:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    domain: ${9:string}",
            "    limit: ${10:-1}",
            "    project: ${11:string}",
            "    resource_type: ${12:string}",
            "$0"
        ],
        "description": "Manages resource limits on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages user roles on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_role",
            "Manages user roles on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_role:",
            "    api_http_method: ${2|get,post|}",
            "    api_key: ${3:string}",
            "    api_secret: ${4:string}",
            "    api_timeout: ${5:10}",
            "    api_url: ${6:string}",
            "    api_verify_ssl_cert: ${7:string}",
            "    description: ${8:string}",
            "    name: ${9:string}",
            "    role_type: ${10|User,DomainAdmin,ResourceAdmin,Admin|}",
            "    state: ${11|present,absent|}",
            "    uuid: ${12:string}",
            "$0"
        ],
        "description": "Manages user roles on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages role permissions on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_role_permission",
            "Manages role permissions on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_role_permission:",
            "    api_http_method: ${2|get,post|}",
            "    api_key: ${3:string}",
            "    api_secret: ${4:string}",
            "    api_timeout: ${5:10}",
            "    api_url: ${6:string}",
            "    api_verify_ssl_cert: ${7:string}",
            "    description: ${8:string}",
            "    name: ${9:string}",
            "    parent: ${10:string}",
            "    permission: ${11|deny,allow|}",
            "    role: ${12:string}",
            "    state: ${13|present,absent|}",
            "$0"
        ],
        "description": "Manages role permissions on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages routers on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_router",
            "Manages routers on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_router:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    domain: ${9:string}",
            "    name: ${10:string}",
            "    poll_async: ${11|true,false|}",
            "    project: ${12:string}",
            "    service_offering: ${13:string}",
            "    state: ${14|present,absent,started,stopped,restarted|}",
            "    zone: ${15:string}",
            "$0"
        ],
        "description": "Manages routers on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages security groups on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_securitygroup",
            "Manages security groups on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_securitygroup:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    description: ${9:string}",
            "    domain: ${10:string}",
            "    name: ${11:string}",
            "    project: ${12:string}",
            "    state: ${13|present,absent|}",
            "$0"
        ],
        "description": "Manages security groups on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages security group rules on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_securitygroup_rule",
            "Manages security group rules on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_securitygroup_rule:",
            "    api_http_method: ${2|get,post|}",
            "    api_key: ${3:string}",
            "    api_secret: ${4:string}",
            "    api_timeout: ${5:10}",
            "    api_url: ${6:string}",
            "    api_verify_ssl_cert: ${7:string}",
            "    cidr: ${8:0.0.0.0/0}",
            "    end_port: ${9:int}",
            "    icmp_code: ${10:int}",
            "    icmp_type: ${11:int}",
            "    poll_async: ${12|true,false|}",
            "    project: ${13:string}",
            "    protocol: ${14|tcp,udp,icmp,ah,esp,gre|}",
            "    security_group: ${15:string}",
            "    start_port: ${16:int}",
            "    state: ${17|present,absent|}",
            "    type: ${18|ingress,egress|}",
            "    user_security_group: ${19:string}",
            "$0"
        ],
        "description": "Manages security group rules on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages service offerings on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_service_offering",
            "Manages service offerings on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_service_offering:",
            "    api_http_method: ${2|get,post|}",
            "    api_key: ${3:string}",
            "    api_secret: ${4:string}",
            "    api_timeout: ${5:10}",
            "    api_url: ${6:string}",
            "    api_verify_ssl_cert: ${7:string}",
            "    cpu_number: ${8:int}",
            "    cpu_speed: ${9:int}",
            "    deployment_planner: ${10:string}",
            "    disk_bytes_read_rate: ${11:int}",
            "    disk_bytes_write_rate: ${12:int}",
            "    disk_iops_max: ${13:int}",
            "    disk_iops_min: ${14:int}",
            "    disk_iops_read_rate: ${15:int}",
            "    disk_iops_write_rate: ${16:int}",
            "    display_text: ${17:string}",
            "    domain: ${18:string}",
            "    host_tags:",
            "      - ${19:element}",
            "    hypervisor_snapshot_reserve: ${20:int}",
            "    is_customized: ${21|false,true|}",
            "    is_iops_customized: ${22|false,true|}",
            "    is_system: ${23|false,true|}",
            "    is_volatile: ${24|false,true|}",
            "    limit_cpu_usage: ${25|false,true|}",
            "    memory: ${26:int}",
            "    name: ${27:string}",
            "    network_rate: ${28:int}",
            "    offer_ha: ${29|false,true|}",
            "    provisioning_type: ${30:string}",
            "    service_offering_details:",
            "      - ${31:element}",
            "    state: ${32|present,absent|}",
            "    storage_tags:",
            "      - ${33:element}",
            "    storage_type: ${34:string}",
            "    system_vm_type: ${35:string}",
            "$0"
        ],
        "description": "Manages service offerings on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages volume snapshot policies on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_snapshot_policy",
            "Manages volume snapshot policies on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_snapshot_policy:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    device_id: ${9:int}",
            "    domain: ${10:string}",
            "    interval_type: ${11|daily,hourly,weekly,monthly|}",
            "    max_snaps: ${12:8}",
            "    project: ${13:string}",
            "    schedule: ${14:string}",
            "    state: ${15|present,absent|}",
            "    time_zone: ${16:UTC}",
            "    vm: ${17:string}",
            "    volume: ${18:string}",
            "    volume_type: ${19:string}",
            "    vpc: ${20:string}",
            "$0"
        ],
        "description": "Manages volume snapshot policies on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages SSH keys on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_sshkeypair",
            "Manages SSH keys on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_sshkeypair:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    domain: ${9:string}",
            "    name: ${10:string}",
            "    project: ${11:string}",
            "    public_key: ${12:string}",
            "    state: ${13|present,absent|}",
            "$0"
        ],
        "description": "Manages SSH keys on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages static NATs on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_staticnat",
            "Manages static NATs on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_staticnat:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    domain: ${9:string}",
            "    ip_address: ${10:string}",
            "    network: ${11:string}",
            "    poll_async: ${12|true,false|}",
            "    project: ${13:string}",
            "    state: ${14|present,absent|}",
            "    vm: ${15:string}",
            "    vm_guest_ip: ${16:string}",
            "    vpc: ${17:string}",
            "    zone: ${18:string}",
            "$0"
        ],
        "description": "Manages static NATs on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages Primary Storage Pools on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_storage_pool",
            "Manages Primary Storage Pools on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_storage_pool:",
            "    allocation_state: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    capacity_bytes: ${9:int}",
            "    capacity_iops: ${10:int}",
            "    cluster: ${11:string}",
            "    hypervisor: ${12:string}",
            "    managed: ${13|false,true|}",
            "    name: ${14:string}",
            "    pod: ${15:string}",
            "    provider: ${16:DefaultPrimary}",
            "    scope: ${17:string}",
            "    state: ${18|present,absent|}",
            "    storage_tags:",
            "      - ${19:element}",
            "    storage_url: ${20:string}",
            "    zone: ${21:string}",
            "$0"
        ],
        "description": "Manages Primary Storage Pools on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages templates on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_template",
            "Manages templates on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_template:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    bits: ${9:64}",
            "    checksum: ${10:string}",
            "    cross_zones: ${11|false,true|}",
            "    details: ${12:string}",
            "    display_text: ${13:string}",
            "    domain: ${14:string}",
            "    format: ${15:string}",
            "    hypervisor: ${16:string}",
            "    is_dynamically_scalable: ${17|false,true|}",
            "    is_extractable: ${18|false,true|}",
            "    is_featured: ${19|false,true|}",
            "    is_public: ${20|false,true|}",
            "    is_routing: ${21|false,true|}",
            "    mode: ${22|http_download,ftp_upload|}",
            "    name: ${23:string}",
            "    os_type: ${24:string}",
            "    password_enabled: ${25|false,true|}",
            "    poll_async: ${26|true,false|}",
            "    project: ${27:string}",
            "    requires_hvm: ${28|false,true|}",
            "    snapshot: ${29:string}",
            "    sshkey_enabled: ${30|false,true|}",
            "    state: ${31|present,absent,extracted|}",
            "    tags:",
            "      - ${32:element}",
            "    template_filter: ${33|self,all,featured,selfexecutable,sharedexecutable,executable,community|}",
            "    template_find_options:",
            "      - ${34:element}",
            "    template_tag: ${35:string}",
            "    url: ${36:string}",
            "    vm: ${37:string}",
            "    zone: ${38:string}",
            "$0"
        ],
        "description": "Manages templates on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages traffic types on CloudStack Physical Networks": {
        "prefix": [
            "ngine_io.cloudstack.cs_traffic_type",
            "Manages traffic types on CloudStack Physical Networks"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_traffic_type:",
            "    api_http_method: ${2|get,post|}",
            "    api_key: ${3:string}",
            "    api_secret: ${4:string}",
            "    api_timeout: ${5:10}",
            "    api_url: ${6:string}",
            "    api_verify_ssl_cert: ${7:string}",
            "    hyperv_networklabel: ${8:string}",
            "    isolation_method: ${9:string}",
            "    kvm_networklabel: ${10:string}",
            "    ovm3_networklabel: ${11:string}",
            "    physical_network: ${12:string}",
            "    poll_async: ${13|true,false|}",
            "    state: ${14|present,absent|}",
            "    traffic_type: ${15:string}",
            "    vlan: ${16:string}",
            "    vmware_networklabel: ${17:string}",
            "    xen_networklabel: ${18:string}",
            "    zone: ${19:string}",
            "$0"
        ],
        "description": "Manages traffic types on CloudStack Physical Networks",
        "scope": "ansible"
    },
    "Manages users on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_user",
            "Manages users on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_user:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    domain: ${9:ROOT}",
            "    email: ${10:string}",
            "    first_name: ${11:string}",
            "    keys_registered: ${12|false,true|}",
            "    last_name: ${13:string}",
            "    password: ${14:string}",
            "    poll_async: ${15|true,false|}",
            "    state: ${16|present,absent,enabled,disabled,locked,unlocked|}",
            "    timezone: ${17:string}",
            "    username: ${18:string}",
            "$0"
        ],
        "description": "Manages users on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages VLAN IP ranges on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_vlan_ip_range",
            "Manages VLAN IP ranges on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_vlan_ip_range:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    cidr_ipv6: ${9:string}",
            "    domain: ${10:string}",
            "    end_ip: ${11:string}",
            "    end_ipv6: ${12:string}",
            "    for_system_vms: ${13|false,true|}",
            "    for_virtual_network: ${14|false,true|}",
            "    gateway: ${15:string}",
            "    gateway_ipv6: ${16:string}",
            "    netmask: ${17:string}",
            "    network: ${18:string}",
            "    physical_network: ${19:string}",
            "    pod: ${20:string}",
            "    project: ${21:string}",
            "    start_ip: ${22:string}",
            "    start_ipv6: ${23:string}",
            "    state: ${24|present,absent|}",
            "    vlan: ${25:string}",
            "    zone: ${26:string}",
            "$0"
        ],
        "description": "Manages VLAN IP ranges on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages VM snapshots on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_vmsnapshot",
            "Manages VM snapshots on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_vmsnapshot:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    description: ${9:string}",
            "    domain: ${10:string}",
            "    name: ${11:string}",
            "    poll_async: ${12|true,false|}",
            "    project: ${13:string}",
            "    snapshot_memory: ${14|false,true|}",
            "    state: ${15|present,absent,revert|}",
            "    tags:",
            "      - ${16:element}",
            "    vm: ${17:string}",
            "    zone: ${18:string}",
            "$0"
        ],
        "description": "Manages VM snapshots on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages volumes on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_volume",
            "Manages volumes on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_volume:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    custom_id: ${9:string}",
            "    device_id: ${10:int}",
            "    disk_offering: ${11:string}",
            "    display_volume: ${12|false,true|}",
            "    domain: ${13:string}",
            "    force: ${14|false,true|}",
            "    format: ${15:string}",
            "    max_iops: ${16:int}",
            "    min_iops: ${17:int}",
            "    mode: ${18|http_download,ftp_upload|}",
            "    name: ${19:string}",
            "    poll_async: ${20|true,false|}",
            "    project: ${21:string}",
            "    shrink_ok: ${22|false,true|}",
            "    size: ${23:int}",
            "    snapshot: ${24:string}",
            "    state: ${25|present,absent,attached,detached,extracted,uploaded|}",
            "    tags:",
            "      - ${26:element}",
            "    url: ${27:string}",
            "    vm: ${28:string}",
            "    zone: ${29:string}",
            "$0"
        ],
        "description": "Manages volumes on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages VPCs on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_vpc",
            "Manages VPCs on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_vpc:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    cidr: ${9:string}",
            "    clean_up: ${10|false,true|}",
            "    display_text: ${11:string}",
            "    domain: ${12:string}",
            "    name: ${13:string}",
            "    network_domain: ${14:string}",
            "    poll_async: ${15|true,false|}",
            "    project: ${16:string}",
            "    state: ${17|present,absent,stopped,restarted|}",
            "    tags:",
            "      - ${18:element}",
            "    vpc_offering: ${19:string}",
            "    zone: ${20:string}",
            "$0"
        ],
        "description": "Manages VPCs on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages vpc offerings on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_vpc_offering",
            "Manages vpc offerings on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_vpc_offering:",
            "    api_http_method: ${2|get,post|}",
            "    api_key: ${3:string}",
            "    api_secret: ${4:string}",
            "    api_timeout: ${5:10}",
            "    api_url: ${6:string}",
            "    api_verify_ssl_cert: ${7:string}",
            "    display_text: ${8:string}",
            "    name: ${9:string}",
            "    poll_async: ${10|true,false|}",
            "    service_capabilities:",
            "      - ${11:element}",
            "    service_offering: ${12:string}",
            "    service_providers:",
            "      - ${13:element}",
            "    state: ${14|present,enabled,disabled,absent|}",
            "    supported_services:",
            "      - ${15:element}",
            "$0"
        ],
        "description": "Manages vpc offerings on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages site-to-site VPN connections on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_vpn_connection",
            "Manages site-to-site VPN connections on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_vpn_connection:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    domain: ${9:string}",
            "    force: ${10|false,true|}",
            "    passive: ${11|false,true|}",
            "    poll_async: ${12|true,false|}",
            "    project: ${13:string}",
            "    state: ${14|present,absent|}",
            "    vpc: ${15:string}",
            "    vpn_customer_gateway: ${16:string}",
            "    zone: ${17:string}",
            "$0"
        ],
        "description": "Manages site-to-site VPN connections on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages site-to-site VPN customer gateway configurations on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_vpn_customer_gateway",
            "Manages site-to-site VPN customer gateway configurations on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_vpn_customer_gateway:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    cidrs:",
            "      - ${9:element}",
            "    domain: ${10:string}",
            "    dpd: ${11|false,true|}",
            "    esp_lifetime: ${12:int}",
            "    esp_policy: ${13:string}",
            "    force_encap: ${14|false,true|}",
            "    gateway: ${15:string}",
            "    ike_lifetime: ${16:int}",
            "    ike_policy: ${17:string}",
            "    ipsec_psk: ${18:string}",
            "    name: ${19:string}",
            "    poll_async: ${20|true,false|}",
            "    project: ${21:string}",
            "    state: ${22|present,absent|}",
            "$0"
        ],
        "description": "Manages site-to-site VPN customer gateway configurations on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages site-to-site VPN gateways on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_vpn_gateway",
            "Manages site-to-site VPN gateways on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_vpn_gateway:",
            "    account: ${2:string}",
            "    api_http_method: ${3|get,post|}",
            "    api_key: ${4:string}",
            "    api_secret: ${5:string}",
            "    api_timeout: ${6:10}",
            "    api_url: ${7:string}",
            "    api_verify_ssl_cert: ${8:string}",
            "    domain: ${9:string}",
            "    poll_async: ${10|true,false|}",
            "    project: ${11:string}",
            "    state: ${12|present,absent|}",
            "    vpc: ${13:string}",
            "    zone: ${14:string}",
            "$0"
        ],
        "description": "Manages site-to-site VPN gateways on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Manages zones on Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_zone",
            "Manages zones on Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_zone:",
            "    api_http_method: ${2|get,post|}",
            "    api_key: ${3:string}",
            "    api_secret: ${4:string}",
            "    api_timeout: ${5:10}",
            "    api_url: ${6:string}",
            "    api_verify_ssl_cert: ${7:string}",
            "    dhcp_provider: ${8:string}",
            "    dns1: ${9:string}",
            "    dns1_ipv6: ${10:string}",
            "    dns2: ${11:string}",
            "    dns2_ipv6: ${12:string}",
            "    domain: ${13:string}",
            "    guest_cidr_address: ${14:string}",
            "    id: ${15:string}",
            "    internal_dns1: ${16:string}",
            "    internal_dns2: ${17:string}",
            "    local_storage_enabled: ${18|false,true|}",
            "    name: ${19:string}",
            "    network_domain: ${20:string}",
            "    network_type: ${21|Basic,Advanced|}",
            "    securitygroups_enabled: ${22|false,true|}",
            "    state: ${23|present,enabled,disabled,absent|}",
            "$0"
        ],
        "description": "Manages zones on Apache CloudStack based clouds.",
        "scope": "ansible"
    },
    "Gathering information about zones from Apache CloudStack based clouds.": {
        "prefix": [
            "ngine_io.cloudstack.cs_zone_info",
            "Gathering information about zones from Apache CloudStack based clouds."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ngine_io.cloudstack.cs_zone_info:",
            "    api_http_method: ${2|get,post|}",
            "    api_key: ${3:string}",
            "    api_secret: ${4:string}",
            "    api_timeout: ${5:10}",
            "    api_url: ${6:string}",
            "    api_verify_ssl_cert: ${7:string}",
            "    zone: ${8:string}",
            "$0"
        ],
        "description": "Gathering information about zones from Apache CloudStack based clouds.",
        "scope": "ansible"
    }
}