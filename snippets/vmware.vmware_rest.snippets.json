{
    "Set enabled state of the console-based controlled CLI (TTY1).": {
        "prefix": [
            "vmware.vmware_rest.appliance_access_consolecli",
            "Set enabled state of the console-based controlled CLI (TTY1)."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_access_consolecli:",
            "    enabled: ${2|false,true|}",
            "    state: ${4|set|}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "$0"
        ],
        "description": "Set enabled state of the console-based controlled CLI (TTY1).",
        "scope": "ansible"
    },
    "Get enabled state of the console-based controlled CLI (TTY1).": {
        "prefix": [
            "vmware.vmware_rest.appliance_access_consolecli_info",
            "Get enabled state of the console-based controlled CLI (TTY1)."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_access_consolecli_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get enabled state of the console-based controlled CLI (TTY1).",
        "scope": "ansible"
    },
    "Set enabled state of Direct Console User Interface (DCUI TTY2).": {
        "prefix": [
            "vmware.vmware_rest.appliance_access_dcui",
            "Set enabled state of Direct Console User Interface (DCUI TTY2)."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_access_dcui:",
            "    enabled: ${2|false,true|}",
            "    state: ${4|set|}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "$0"
        ],
        "description": "Set enabled state of Direct Console User Interface (DCUI TTY2).",
        "scope": "ansible"
    },
    "Get enabled state of Direct Console User Interface (DCUI TTY2).": {
        "prefix": [
            "vmware.vmware_rest.appliance_access_dcui_info",
            "Get enabled state of Direct Console User Interface (DCUI TTY2)."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_access_dcui_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get enabled state of Direct Console User Interface (DCUI TTY2).",
        "scope": "ansible"
    },
    "Set enabled state of BASH, that is, access to BASH from within the controlled CLI.": {
        "prefix": [
            "vmware.vmware_rest.appliance_access_shell",
            "Set enabled state of BASH, that is, access to BASH from within the controlled CLI."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_access_shell:",
            "    enabled: ${2|false,true|}",
            "    state: ${4|set|}",
            "    timeout: ${5:int}",
            "    vcenter_hostname: ${6:string}",
            "    vcenter_password: ${7:string}",
            "    vcenter_rest_log_file: ${8:string}",
            "    vcenter_username: ${9:string}",
            "    vcenter_validate_certs: ${10|true,false|}",
            "$0"
        ],
        "description": "Set enabled state of BASH, that is, access to BASH from within the controlled CLI.",
        "scope": "ansible"
    },
    "Get enabled state of BASH, that is, access to BASH from within the controlled CLI.": {
        "prefix": [
            "vmware.vmware_rest.appliance_access_shell_info",
            "Get enabled state of BASH, that is, access to BASH from within the controlled CLI."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_access_shell_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get enabled state of BASH, that is, access to BASH from within the controlled CLI.",
        "scope": "ansible"
    },
    "Set enabled state of the SSH-based controlled CLI.": {
        "prefix": [
            "vmware.vmware_rest.appliance_access_ssh",
            "Set enabled state of the SSH-based controlled CLI."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_access_ssh:",
            "    enabled: ${2|false,true|}",
            "    state: ${4|set|}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "$0"
        ],
        "description": "Set enabled state of the SSH-based controlled CLI.",
        "scope": "ansible"
    },
    "Get enabled state of the SSH-based controlled CLI.": {
        "prefix": [
            "vmware.vmware_rest.appliance_access_ssh_info",
            "Get enabled state of the SSH-based controlled CLI."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_access_ssh_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get enabled state of the SSH-based controlled CLI.",
        "scope": "ansible"
    },
    "Get health status of applmgmt services.": {
        "prefix": [
            "vmware.vmware_rest.appliance_health_applmgmt_info",
            "Get health status of applmgmt services."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_health_applmgmt_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get health status of applmgmt services.",
        "scope": "ansible"
    },
    "Returns the health status of the database.": {
        "prefix": [
            "vmware.vmware_rest.appliance_health_database_info",
            "Returns the health status of the database."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_health_database_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Returns the health status of the database.",
        "scope": "ansible"
    },
    "Get database storage health.": {
        "prefix": [
            "vmware.vmware_rest.appliance_health_databasestorage_info",
            "Get database storage health."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_health_databasestorage_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get database storage health.",
        "scope": "ansible"
    },
    "Get load health.": {
        "prefix": [
            "vmware.vmware_rest.appliance_health_load_info",
            "Get load health."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_health_load_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get load health.",
        "scope": "ansible"
    },
    "Get memory health.": {
        "prefix": [
            "vmware.vmware_rest.appliance_health_mem_info",
            "Get memory health."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_health_mem_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get memory health.",
        "scope": "ansible"
    },
    "Get information on available software updates available in the remote vSphere Update Manager repository": {
        "prefix": [
            "vmware.vmware_rest.appliance_health_softwarepackages_info",
            "Get information on available software updates available in the remote vSphere Update Manager repository"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_health_softwarepackages_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get information on available software updates available in the remote vSphere Update Manager repository",
        "scope": "ansible"
    },
    "Get storage health.": {
        "prefix": [
            "vmware.vmware_rest.appliance_health_storage_info",
            "Get storage health."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_health_storage_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get storage health.",
        "scope": "ansible"
    },
    "Get swap health.": {
        "prefix": [
            "vmware.vmware_rest.appliance_health_swap_info",
            "Get swap health."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_health_swap_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get swap health.",
        "scope": "ansible"
    },
    "Get overall health of system.": {
        "prefix": [
            "vmware.vmware_rest.appliance_health_system_info",
            "Get overall health of system."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_health_system_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get overall health of system.",
        "scope": "ansible"
    },
    "Exports the desired profile specification.": {
        "prefix": [
            "vmware.vmware_rest.appliance_infraprofile_configs",
            "Exports the desired profile specification."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_infraprofile_configs:",
            "    description: ${2:string}",
            "    encryption_key: ${3:string}",
            "    profiles:",
            "      - ${4:element}",
            "    state: ${6:string}",
            "    vcenter_hostname: ${7:string}",
            "    vcenter_password: ${8:string}",
            "    vcenter_rest_log_file: ${9:string}",
            "    vcenter_username: ${10:string}",
            "    vcenter_validate_certs: ${11|true,false|}",
            "$0"
        ],
        "description": "Exports the desired profile specification.",
        "scope": "ansible"
    },
    "List all the profiles which are registered.": {
        "prefix": [
            "vmware.vmware_rest.appliance_infraprofile_configs_info",
            "List all the profiles which are registered."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_infraprofile_configs_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "List all the profiles which are registered.",
        "scope": "ansible"
    },
    "Set the global password policy.": {
        "prefix": [
            "vmware.vmware_rest.appliance_localaccounts_globalpolicy",
            "Set the global password policy."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_localaccounts_globalpolicy:",
            "    max_days: ${2:int}",
            "    min_days: ${3:int}",
            "    state: ${5|set|}",
            "    vcenter_hostname: ${6:string}",
            "    vcenter_password: ${7:string}",
            "    vcenter_rest_log_file: ${8:string}",
            "    vcenter_username: ${9:string}",
            "    vcenter_validate_certs: ${10|true,false|}",
            "    warn_days: ${11:int}",
            "$0"
        ],
        "description": "Set the global password policy.",
        "scope": "ansible"
    },
    "Get the global password policy.": {
        "prefix": [
            "vmware.vmware_rest.appliance_localaccounts_globalpolicy_info",
            "Get the global password policy."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_localaccounts_globalpolicy_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get the global password policy.",
        "scope": "ansible"
    },
    "Get the local user account information.": {
        "prefix": [
            "vmware.vmware_rest.appliance_localaccounts_info",
            "Get the local user account information."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_localaccounts_info:",
            "    username: ${3:string}",
            "    vcenter_hostname: ${4:string}",
            "    vcenter_password: ${5:string}",
            "    vcenter_rest_log_file: ${6:string}",
            "    vcenter_username: ${7:string}",
            "    vcenter_validate_certs: ${8|true,false|}",
            "$0"
        ],
        "description": "Get the local user account information.",
        "scope": "ansible"
    },
    "Get monitored item info": {
        "prefix": [
            "vmware.vmware_rest.appliance_monitoring_info",
            "Get monitored item info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_monitoring_info:",
            "    stat_id: ${3:string}",
            "    vcenter_hostname: ${4:string}",
            "    vcenter_password: ${5:string}",
            "    vcenter_rest_log_file: ${6:string}",
            "    vcenter_username: ${7:string}",
            "    vcenter_validate_certs: ${8|true,false|}",
            "$0"
        ],
        "description": "Get monitored item info",
        "scope": "ansible"
    },
    "Get monitoring data.": {
        "prefix": [
            "vmware.vmware_rest.appliance_monitoring_query",
            "Get monitoring data."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_monitoring_query:",
            "    end_time: ${2:string}",
            "    function: ${3:string}",
            "    interval: ${4:string}",
            "    names:",
            "      - ${5:element}",
            "    start_time: ${7:string}",
            "    vcenter_hostname: ${8:string}",
            "    vcenter_password: ${9:string}",
            "    vcenter_rest_log_file: ${10:string}",
            "    vcenter_username: ${11:string}",
            "    vcenter_validate_certs: ${12|true,false|}",
            "$0"
        ],
        "description": "Get monitoring data.",
        "scope": "ansible"
    },
    "Reset and restarts network configuration on all interfaces, also this will renew the DHCP lease for DHCP IP address.": {
        "prefix": [
            "vmware.vmware_rest.appliance_networking",
            "Reset and restarts network configuration on all interfaces, also this will renew the DHCP lease for DHCP IP address."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_networking:",
            "    ipv6_enabled: ${2|false,true|}",
            "    state: ${4|present,reset|}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "$0"
        ],
        "description": "Reset and restarts network configuration on all interfaces, also this will renew the DHCP lease for DHCP IP address.",
        "scope": "ansible"
    },
    "Set DNS search domains.": {
        "prefix": [
            "vmware.vmware_rest.appliance_networking_dns_domains",
            "Set DNS search domains."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_networking_dns_domains:",
            "    domain: ${2:string}",
            "    domains:",
            "      - ${3:element}",
            "    state: ${5|set,add|}",
            "    vcenter_hostname: ${6:string}",
            "    vcenter_password: ${7:string}",
            "    vcenter_rest_log_file: ${8:string}",
            "    vcenter_username: ${9:string}",
            "    vcenter_validate_certs: ${10|true,false|}",
            "$0"
        ],
        "description": "Set DNS search domains.",
        "scope": "ansible"
    },
    "Get list of DNS search domains.": {
        "prefix": [
            "vmware.vmware_rest.appliance_networking_dns_domains_info",
            "Get list of DNS search domains."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_networking_dns_domains_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get list of DNS search domains.",
        "scope": "ansible"
    },
    "Set the Fully Qualified Domain Name.": {
        "prefix": [
            "vmware.vmware_rest.appliance_networking_dns_hostname",
            "Set the Fully Qualified Domain Name."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_networking_dns_hostname:",
            "    name: ${2:string}",
            "    state: ${4|set,test|}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "$0"
        ],
        "description": "Set the Fully Qualified Domain Name.",
        "scope": "ansible"
    },
    "Get the Fully Qualified Doman Name.": {
        "prefix": [
            "vmware.vmware_rest.appliance_networking_dns_hostname_info",
            "Get the Fully Qualified Doman Name."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_networking_dns_hostname_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get the Fully Qualified Doman Name.",
        "scope": "ansible"
    },
    "Set the DNS server configuration": {
        "prefix": [
            "vmware.vmware_rest.appliance_networking_dns_servers",
            "Set the DNS server configuration"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_networking_dns_servers:",
            "    mode: ${2:string}",
            "    server: ${3:string}",
            "    servers:",
            "      - ${4:element}",
            "    state: ${6|set,add,test|}",
            "    vcenter_hostname: ${7:string}",
            "    vcenter_password: ${8:string}",
            "    vcenter_rest_log_file: ${9:string}",
            "    vcenter_username: ${10:string}",
            "    vcenter_validate_certs: ${11|true,false|}",
            "$0"
        ],
        "description": "Set the DNS server configuration",
        "scope": "ansible"
    },
    "Get DNS server configuration.": {
        "prefix": [
            "vmware.vmware_rest.appliance_networking_dns_servers_info",
            "Get DNS server configuration."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_networking_dns_servers_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get DNS server configuration.",
        "scope": "ansible"
    },
    "Set the ordered list of firewall rules to allow or deny traffic from one or more incoming IP addresses": {
        "prefix": [
            "vmware.vmware_rest.appliance_networking_firewall_inbound",
            "Set the ordered list of firewall rules to allow or deny traffic from one or more incoming IP addresses"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_networking_firewall_inbound:",
            "    rules:",
            "      - ${2:element}",
            "    state: ${4|set|}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "$0"
        ],
        "description": "Set the ordered list of firewall rules to allow or deny traffic from one or more incoming IP addresses",
        "scope": "ansible"
    },
    "Get the ordered list of firewall rules": {
        "prefix": [
            "vmware.vmware_rest.appliance_networking_firewall_inbound_info",
            "Get the ordered list of firewall rules"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_networking_firewall_inbound_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get the ordered list of firewall rules",
        "scope": "ansible"
    },
    "Get Networking information for all configured interfaces.": {
        "prefix": [
            "vmware.vmware_rest.appliance_networking_info",
            "Get Networking information for all configured interfaces."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_networking_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get Networking information for all configured interfaces.",
        "scope": "ansible"
    },
    "Get information about a particular network interface.": {
        "prefix": [
            "vmware.vmware_rest.appliance_networking_interfaces_info",
            "Get information about a particular network interface."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_networking_interfaces_info:",
            "    interface_name: ${2:string}",
            "    vcenter_hostname: ${4:string}",
            "    vcenter_password: ${5:string}",
            "    vcenter_rest_log_file: ${6:string}",
            "    vcenter_username: ${7:string}",
            "    vcenter_validate_certs: ${8|true,false|}",
            "$0"
        ],
        "description": "Get information about a particular network interface.",
        "scope": "ansible"
    },
    "Set IPv4 network configuration for specific network interface.": {
        "prefix": [
            "vmware.vmware_rest.appliance_networking_interfaces_ipv4",
            "Set IPv4 network configuration for specific network interface."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_networking_interfaces_ipv4:",
            "    address: ${2:string}",
            "    default_gateway: ${3:string}",
            "    interface_name: ${4:string}",
            "    mode: ${5:string}",
            "    prefix: ${6:int}",
            "    state: ${8|set|}",
            "    vcenter_hostname: ${9:string}",
            "    vcenter_password: ${10:string}",
            "    vcenter_rest_log_file: ${11:string}",
            "    vcenter_username: ${12:string}",
            "    vcenter_validate_certs: ${13|true,false|}",
            "$0"
        ],
        "description": "Set IPv4 network configuration for specific network interface.",
        "scope": "ansible"
    },
    "Get IPv4 network configuration for specific NIC.": {
        "prefix": [
            "vmware.vmware_rest.appliance_networking_interfaces_ipv4_info",
            "Get IPv4 network configuration for specific NIC."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_networking_interfaces_ipv4_info:",
            "    interface_name: ${2:string}",
            "    vcenter_hostname: ${4:string}",
            "    vcenter_password: ${5:string}",
            "    vcenter_rest_log_file: ${6:string}",
            "    vcenter_username: ${7:string}",
            "    vcenter_validate_certs: ${8|true,false|}",
            "$0"
        ],
        "description": "Get IPv4 network configuration for specific NIC.",
        "scope": "ansible"
    },
    "Set IPv6 network configuration for specific interface.": {
        "prefix": [
            "vmware.vmware_rest.appliance_networking_interfaces_ipv6",
            "Set IPv6 network configuration for specific interface."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_networking_interfaces_ipv6:",
            "    addresses:",
            "      - ${2:element}",
            "    autoconf: ${3|false,true|}",
            "    default_gateway: ${4:string}",
            "    dhcp: ${5|false,true|}",
            "    interface_name: ${6:string}",
            "    state: ${8|set|}",
            "    vcenter_hostname: ${9:string}",
            "    vcenter_password: ${10:string}",
            "    vcenter_rest_log_file: ${11:string}",
            "    vcenter_username: ${12:string}",
            "    vcenter_validate_certs: ${13|true,false|}",
            "$0"
        ],
        "description": "Set IPv6 network configuration for specific interface.",
        "scope": "ansible"
    },
    "Get IPv6 network configuration for specific interface.": {
        "prefix": [
            "vmware.vmware_rest.appliance_networking_interfaces_ipv6_info",
            "Get IPv6 network configuration for specific interface."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_networking_interfaces_ipv6_info:",
            "    interface_name: ${2:string}",
            "    vcenter_hostname: ${4:string}",
            "    vcenter_password: ${5:string}",
            "    vcenter_rest_log_file: ${6:string}",
            "    vcenter_username: ${7:string}",
            "    vcenter_validate_certs: ${8|true,false|}",
            "$0"
        ],
        "description": "Get IPv6 network configuration for specific interface.",
        "scope": "ansible"
    },
    "Sets servers for which no proxy configuration should be applied": {
        "prefix": [
            "vmware.vmware_rest.appliance_networking_noproxy",
            "Sets servers for which no proxy configuration should be applied"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_networking_noproxy:",
            "    servers:",
            "      - ${2:element}",
            "    state: ${4|set|}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "$0"
        ],
        "description": "Sets servers for which no proxy configuration should be applied",
        "scope": "ansible"
    },
    "Returns servers for which no proxy configuration will be applied.": {
        "prefix": [
            "vmware.vmware_rest.appliance_networking_noproxy_info",
            "Returns servers for which no proxy configuration will be applied."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_networking_noproxy_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Returns servers for which no proxy configuration will be applied.",
        "scope": "ansible"
    },
    "Configures which proxy server to use for the specified protocol": {
        "prefix": [
            "vmware.vmware_rest.appliance_networking_proxy",
            "Configures which proxy server to use for the specified protocol"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_networking_proxy:",
            "    enabled: ${3|false,true|}",
            "    host: ${4:string}",
            "    password: ${5:string}",
            "    port: ${6:int}",
            "    protocol: ${7:string}",
            "    server: ${8:string}",
            "    state: ${10|set,absent,test|}",
            "    username: ${11:string}",
            "    vcenter_hostname: ${12:string}",
            "    vcenter_password: ${13:string}",
            "    vcenter_rest_log_file: ${14:string}",
            "    vcenter_username: ${15:string}",
            "    vcenter_validate_certs: ${16|true,false|}",
            "$0"
        ],
        "description": "Configures which proxy server to use for the specified protocol",
        "scope": "ansible"
    },
    "Gets the proxy configuration for a specific protocol.": {
        "prefix": [
            "vmware.vmware_rest.appliance_networking_proxy_info",
            "Gets the proxy configuration for a specific protocol."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_networking_proxy_info:",
            "    protocol: ${2:string}",
            "    vcenter_hostname: ${4:string}",
            "    vcenter_password: ${5:string}",
            "    vcenter_rest_log_file: ${6:string}",
            "    vcenter_username: ${7:string}",
            "    vcenter_validate_certs: ${8|true,false|}",
            "$0"
        ],
        "description": "Gets the proxy configuration for a specific protocol.",
        "scope": "ansible"
    },
    "Set NTP servers": {
        "prefix": [
            "vmware.vmware_rest.appliance_ntp",
            "Set NTP servers"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_ntp:",
            "    servers:",
            "      - ${2:element}",
            "    state: ${4|set,test|}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "$0"
        ],
        "description": "Set NTP servers",
        "scope": "ansible"
    },
    "Get the NTP configuration status": {
        "prefix": [
            "vmware.vmware_rest.appliance_ntp_info",
            "Get the NTP configuration status"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_ntp_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get the NTP configuration status",
        "scope": "ansible"
    },
    "Restarts a service": {
        "prefix": [
            "vmware.vmware_rest.appliance_services",
            "Restarts a service"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_services:",
            "    service: ${2:string}",
            "    state: ${4:string}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "$0"
        ],
        "description": "Restarts a service",
        "scope": "ansible"
    },
    "Returns the state of a service.": {
        "prefix": [
            "vmware.vmware_rest.appliance_vmon_service_info",
            "Returns the state of a service."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_vmon_service_info:",
            "    service: ${2:string}",
            "    vcenter_hostname: ${4:string}",
            "    vcenter_password: ${5:string}",
            "    vcenter_rest_log_file: ${6:string}",
            "    vcenter_username: ${7:string}",
            "    vcenter_validate_certs: ${8|true,false|}",
            "$0"
        ],
        "description": "Returns the state of a service.",
        "scope": "ansible"
    },
    "Cancel pending shutdown action.": {
        "prefix": [
            "vmware.vmware_rest.appliance_shutdown",
            "Cancel pending shutdown action."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_shutdown:",
            "    delay: ${2:int}",
            "    reason: ${3:string}",
            "    state: ${5:string}",
            "    vcenter_hostname: ${6:string}",
            "    vcenter_password: ${7:string}",
            "    vcenter_rest_log_file: ${8:string}",
            "    vcenter_username: ${9:string}",
            "    vcenter_validate_certs: ${10|true,false|}",
            "$0"
        ],
        "description": "Cancel pending shutdown action.",
        "scope": "ansible"
    },
    "Get details about the pending shutdown action.": {
        "prefix": [
            "vmware.vmware_rest.appliance_shutdown_info",
            "Get details about the pending shutdown action."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_shutdown_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get details about the pending shutdown action.",
        "scope": "ansible"
    },
    "Enable/Disable Global FIPS mode for the appliance": {
        "prefix": [
            "vmware.vmware_rest.appliance_system_globalfips",
            "Enable/Disable Global FIPS mode for the appliance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_system_globalfips:",
            "    enabled: ${2|false,true|}",
            "    state: ${4|present|}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "$0"
        ],
        "description": "Enable/Disable Global FIPS mode for the appliance",
        "scope": "ansible"
    },
    "Get current appliance FIPS settings.": {
        "prefix": [
            "vmware.vmware_rest.appliance_system_globalfips_info",
            "Get current appliance FIPS settings."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_system_globalfips_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get current appliance FIPS settings.",
        "scope": "ansible"
    },
    "Resize all partitions to 100 percent of disk size.": {
        "prefix": [
            "vmware.vmware_rest.appliance_system_storage",
            "Resize all partitions to 100 percent of disk size."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_system_storage:",
            "    state: ${3:string}",
            "    vcenter_hostname: ${4:string}",
            "    vcenter_password: ${5:string}",
            "    vcenter_rest_log_file: ${6:string}",
            "    vcenter_username: ${7:string}",
            "    vcenter_validate_certs: ${8|true,false|}",
            "$0"
        ],
        "description": "Resize all partitions to 100 percent of disk size.",
        "scope": "ansible"
    },
    "Get disk to partition mapping.": {
        "prefix": [
            "vmware.vmware_rest.appliance_system_storage_info",
            "Get disk to partition mapping."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_system_storage_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get disk to partition mapping.",
        "scope": "ansible"
    },
    "Get system time.": {
        "prefix": [
            "vmware.vmware_rest.appliance_system_time_info",
            "Get system time."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_system_time_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get system time.",
        "scope": "ansible"
    },
    "Set time zone.": {
        "prefix": [
            "vmware.vmware_rest.appliance_system_time_timezone",
            "Set time zone."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_system_time_timezone:",
            "    name: ${2:string}",
            "    state: ${4|set|}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "$0"
        ],
        "description": "Set time zone.",
        "scope": "ansible"
    },
    "Get time zone.": {
        "prefix": [
            "vmware.vmware_rest.appliance_system_time_timezone_info",
            "Get time zone."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_system_time_timezone_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get time zone.",
        "scope": "ansible"
    },
    "Get the version.": {
        "prefix": [
            "vmware.vmware_rest.appliance_system_version_info",
            "Get the version."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_system_version_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get the version.",
        "scope": "ansible"
    },
    "Set time synchronization mode.": {
        "prefix": [
            "vmware.vmware_rest.appliance_timesync",
            "Set time synchronization mode."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_timesync:",
            "    mode: ${2:string}",
            "    state: ${4|set|}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "$0"
        ],
        "description": "Set time synchronization mode.",
        "scope": "ansible"
    },
    "Get time synchronization mode.": {
        "prefix": [
            "vmware.vmware_rest.appliance_timesync_info",
            "Get time synchronization mode."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_timesync_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Get time synchronization mode.",
        "scope": "ansible"
    },
    "Gets the current status of the appliance update.": {
        "prefix": [
            "vmware.vmware_rest.appliance_update_info",
            "Gets the current status of the appliance update."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_update_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Gets the current status of the appliance update.",
        "scope": "ansible"
    },
    "Lists details of services managed by vMon.": {
        "prefix": [
            "vmware.vmware_rest.appliance_vmon_service",
            "Lists details of services managed by vMon."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.appliance_vmon_service:",
            "    service: ${2:string}",
            "    startup_type: ${4:string}",
            "    state: ${5|present,list_details,restart,start,stop|}",
            "    vcenter_hostname: ${6:string}",
            "    vcenter_password: ${7:string}",
            "    vcenter_rest_log_file: ${8:string}",
            "    vcenter_username: ${9:string}",
            "    vcenter_validate_certs: ${10|true,false|}",
            "$0"
        ],
        "description": "Lists details of services managed by vMon.",
        "scope": "ansible"
    },
    "Updates the configuration": {
        "prefix": [
            "vmware.vmware_rest.content_configuration",
            "Updates the configuration"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.content_configuration:",
            "    automatic_sync_enabled: ${2|false,true|}",
            "    automatic_sync_start_hour: ${3:int}",
            "    automatic_sync_stop_hour: ${4:int}",
            "    maximum_concurrent_item_syncs: ${5:int}",
            "    state: ${7|present|}",
            "    vcenter_hostname: ${8:string}",
            "    vcenter_password: ${9:string}",
            "    vcenter_rest_log_file: ${10:string}",
            "    vcenter_username: ${11:string}",
            "    vcenter_validate_certs: ${12|true,false|}",
            "$0"
        ],
        "description": "Updates the configuration",
        "scope": "ansible"
    },
    "Retrieves the current configuration values.": {
        "prefix": [
            "vmware.vmware_rest.content_configuration_info",
            "Retrieves the current configuration values."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.content_configuration_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "$0"
        ],
        "description": "Retrieves the current configuration values.",
        "scope": "ansible"
    },
    "Returns the {@link ItemModel} with the given identifier.": {
        "prefix": [
            "vmware.vmware_rest.content_library_item_info",
            "Returns the {@link ItemModel} with the given identifier."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.content_library_item_info:",
            "    library_id: ${2:string}",
            "    library_item_id: ${3:string}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "$0"
        ],
        "description": "Returns the {@link ItemModel} with the given identifier.",
        "scope": "ansible"
    },
    "Creates a new local library.": {
        "prefix": [
            "vmware.vmware_rest.content_locallibrary",
            "Creates a new local library."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.content_locallibrary:",
            "    client_token: ${2:string}",
            "    creation_time: ${3:string}",
            "    description: ${4:string}",
            "    id: ${5:string}",
            "    last_modified_time: ${6:string}",
            "    last_sync_time: ${7:string}",
            "    library_id: ${8:string}",
            "    name: ${9:string}",
            "    server_guid: ${12:string}",
            "    state: ${14|present,absent,publish|}",
            "    storage_backings:",
            "      - ${15:element}",
            "    subscriptions:",
            "      - ${17:element}",
            "    type: ${18:string}",
            "    vcenter_hostname: ${19:string}",
            "    vcenter_password: ${20:string}",
            "    vcenter_rest_log_file: ${21:string}",
            "    vcenter_username: ${22:string}",
            "    vcenter_validate_certs: ${23|true,false|}",
            "    version: ${24:string}",
            "$0"
        ],
        "description": "Creates a new local library.",
        "scope": "ansible"
    },
    "Returns a given local library.": {
        "prefix": [
            "vmware.vmware_rest.content_locallibrary_info",
            "Returns a given local library."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.content_locallibrary_info:",
            "    library_id: ${2:string}",
            "    vcenter_hostname: ${4:string}",
            "    vcenter_password: ${5:string}",
            "    vcenter_rest_log_file: ${6:string}",
            "    vcenter_username: ${7:string}",
            "    vcenter_validate_certs: ${8|true,false|}",
            "$0"
        ],
        "description": "Returns a given local library.",
        "scope": "ansible"
    },
    "Creates a new subscribed library": {
        "prefix": [
            "vmware.vmware_rest.content_subscribedlibrary",
            "Creates a new subscribed library"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.content_subscribedlibrary:",
            "    client_token: ${2:string}",
            "    creation_time: ${3:string}",
            "    description: ${4:string}",
            "    id: ${5:string}",
            "    last_modified_time: ${6:string}",
            "    last_sync_time: ${7:string}",
            "    library_id: ${8:string}",
            "    name: ${9:string}",
            "    server_guid: ${12:string}",
            "    state: ${14|present,absent,evict,probe,sync|}",
            "    storage_backings:",
            "      - ${15:element}",
            "    type: ${17:string}",
            "    vcenter_hostname: ${18:string}",
            "    vcenter_password: ${19:string}",
            "    vcenter_rest_log_file: ${20:string}",
            "    vcenter_username: ${21:string}",
            "    vcenter_validate_certs: ${22|true,false|}",
            "    version: ${23:string}",
            "$0"
        ],
        "description": "Creates a new subscribed library",
        "scope": "ansible"
    },
    "Returns a given subscribed library.": {
        "prefix": [
            "vmware.vmware_rest.content_subscribedlibrary_info",
            "Returns a given subscribed library."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.content_subscribedlibrary_info:",
            "    library_id: ${2:string}",
            "    vcenter_hostname: ${4:string}",
            "    vcenter_password: ${5:string}",
            "    vcenter_rest_log_file: ${6:string}",
            "    vcenter_username: ${7:string}",
            "    vcenter_validate_certs: ${8|true,false|}",
            "$0"
        ],
        "description": "Returns a given subscribed library.",
        "scope": "ansible"
    },
    "Retrieves information about the cluster corresponding to {@param.name cluster}.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_cluster_info",
            "Retrieves information about the cluster corresponding to {@param.name cluster}."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_cluster_info:",
            "    cluster: ${2:string}",
            "    clusters:",
            "      - ${3:element}",
            "    datacenters:",
            "      - ${4:element}",
            "    folders:",
            "      - ${5:element}",
            "    names:",
            "      - ${6:element}",
            "    vcenter_hostname: ${8:string}",
            "    vcenter_password: ${9:string}",
            "    vcenter_rest_log_file: ${10:string}",
            "    vcenter_username: ${11:string}",
            "    vcenter_validate_certs: ${12|true,false|}",
            "$0"
        ],
        "description": "Retrieves information about the cluster corresponding to {@param.name cluster}.",
        "scope": "ansible"
    },
    "Create a new datacenter in the vCenter inventory": {
        "prefix": [
            "vmware.vmware_rest.vcenter_datacenter",
            "Create a new datacenter in the vCenter inventory"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_datacenter:",
            "    datacenter: ${2:string}",
            "    folder: ${3:string}",
            "    force: ${4|false,true|}",
            "    name: ${5:string}",
            "    state: ${7|present,absent|}",
            "    vcenter_hostname: ${8:string}",
            "    vcenter_password: ${9:string}",
            "    vcenter_rest_log_file: ${10:string}",
            "    vcenter_username: ${11:string}",
            "    vcenter_validate_certs: ${12|true,false|}",
            "$0"
        ],
        "description": "Create a new datacenter in the vCenter inventory",
        "scope": "ansible"
    },
    "Retrieves information about the datacenter corresponding to {@param.name datacenter}.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_datacenter_info",
            "Retrieves information about the datacenter corresponding to {@param.name datacenter}."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_datacenter_info:",
            "    datacenter: ${2:string}",
            "    datacenters:",
            "      - ${3:element}",
            "    folders:",
            "      - ${4:element}",
            "    names:",
            "      - ${5:element}",
            "    vcenter_hostname: ${7:string}",
            "    vcenter_password: ${8:string}",
            "    vcenter_rest_log_file: ${9:string}",
            "    vcenter_username: ${10:string}",
            "    vcenter_validate_certs: ${11|true,false|}",
            "$0"
        ],
        "description": "Retrieves information about the datacenter corresponding to {@param.name datacenter}.",
        "scope": "ansible"
    },
    "Retrieves information about the datastore indicated by {@param.name datastore}.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_datastore_info",
            "Retrieves information about the datastore indicated by {@param.name datastore}."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_datastore_info:",
            "    datacenters:",
            "      - ${2:element}",
            "    datastore: ${3:string}",
            "    datastores:",
            "      - ${4:element}",
            "    folders:",
            "      - ${5:element}",
            "    names:",
            "      - ${6:element}",
            "    types:",
            "      - ${8:element}",
            "    vcenter_hostname: ${9:string}",
            "    vcenter_password: ${10:string}",
            "    vcenter_rest_log_file: ${11:string}",
            "    vcenter_username: ${12:string}",
            "    vcenter_validate_certs: ${13|true,false|}",
            "$0"
        ],
        "description": "Retrieves information about the datastore indicated by {@param.name datastore}.",
        "scope": "ansible"
    },
    "Returns information about at most 1000 visible (subject to permission checks) folders in vCenter matching the {@link FilterSpec}.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_folder_info",
            "Returns information about at most 1000 visible (subject to permission checks) folders in vCenter matching the {@link FilterSpec}."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_folder_info:",
            "    datacenters:",
            "      - ${2:element}",
            "    folders:",
            "      - ${3:element}",
            "    names:",
            "      - ${4:element}",
            "    parent_folders:",
            "      - ${5:element}",
            "    type: ${7:string}",
            "    vcenter_hostname: ${8:string}",
            "    vcenter_password: ${9:string}",
            "    vcenter_rest_log_file: ${10:string}",
            "    vcenter_username: ${11:string}",
            "    vcenter_validate_certs: ${12|true,false|}",
            "$0"
        ],
        "description": "Returns information about at most 1000 visible (subject to permission checks) folders in vCenter matching the {@link FilterSpec}.",
        "scope": "ansible"
    },
    "Add a new standalone host in the vCenter inventory": {
        "prefix": [
            "vmware.vmware_rest.vcenter_host",
            "Add a new standalone host in the vCenter inventory"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_host:",
            "    folder: ${2:string}",
            "    force_add: ${3|false,true|}",
            "    host: ${4:string}",
            "    hostname: ${5:string}",
            "    password: ${6:string}",
            "    port: ${7:int}",
            "    state: ${9|present,absent,connect,disconnect|}",
            "    thumbprint: ${10:string}",
            "    thumbprint_verification: ${11:string}",
            "    user_name: ${12:string}",
            "    vcenter_hostname: ${13:string}",
            "    vcenter_password: ${14:string}",
            "    vcenter_rest_log_file: ${15:string}",
            "    vcenter_username: ${16:string}",
            "    vcenter_validate_certs: ${17|true,false|}",
            "$0"
        ],
        "description": "Add a new standalone host in the vCenter inventory",
        "scope": "ansible"
    },
    "Returns information about at most 2500 visible (subject to permission checks) hosts in vCenter matching the {@link FilterSpec}.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_host_info",
            "Returns information about at most 2500 visible (subject to permission checks) hosts in vCenter matching the {@link FilterSpec}."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_host_info:",
            "    clusters:",
            "      - ${2:element}",
            "    connection_states:",
            "      - ${3:element}",
            "    datacenters:",
            "      - ${4:element}",
            "    folders:",
            "      - ${5:element}",
            "    hosts:",
            "      - ${6:element}",
            "    names:",
            "      - ${7:element}",
            "    standalone: ${9|false,true|}",
            "    vcenter_hostname: ${10:string}",
            "    vcenter_password: ${11:string}",
            "    vcenter_rest_log_file: ${12:string}",
            "    vcenter_username: ${13:string}",
            "    vcenter_validate_certs: ${14|true,false|}",
            "$0"
        ],
        "description": "Returns information about at most 2500 visible (subject to permission checks) hosts in vCenter matching the {@link FilterSpec}.",
        "scope": "ansible"
    },
    "Returns information about at most 1000 visible (subject to permission checks) networks in vCenter matching the {@link FilterSpec}.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_network_info",
            "Returns information about at most 1000 visible (subject to permission checks) networks in vCenter matching the {@link FilterSpec}."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_network_info:",
            "    datacenters:",
            "      - ${2:element}",
            "    folders:",
            "      - ${3:element}",
            "    names:",
            "      - ${4:element}",
            "    networks:",
            "      - ${5:element}",
            "    types:",
            "      - ${7:element}",
            "    vcenter_hostname: ${8:string}",
            "    vcenter_password: ${9:string}",
            "    vcenter_rest_log_file: ${10:string}",
            "    vcenter_username: ${11:string}",
            "    vcenter_validate_certs: ${12|true,false|}",
            "$0"
        ],
        "description": "Returns information about at most 1000 visible (subject to permission checks) networks in vCenter matching the {@link FilterSpec}.",
        "scope": "ansible"
    },
    "Creates a library item in content library from a virtual machine or virtual appliance": {
        "prefix": [
            "vmware.vmware_rest.vcenter_ovf_libraryitem",
            "Creates a library item in content library from a virtual machine or virtual appliance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_ovf_libraryitem:",
            "    client_token: ${2:string}",
            "    ovf_library_item_id: ${5:string}",
            "    state: ${8|present,deploy,filter|}",
            "    vcenter_hostname: ${10:string}",
            "    vcenter_password: ${11:string}",
            "    vcenter_rest_log_file: ${12:string}",
            "    vcenter_username: ${13:string}",
            "    vcenter_validate_certs: ${14|true,false|}",
            "$0"
        ],
        "description": "Creates a library item in content library from a virtual machine or virtual appliance",
        "scope": "ansible"
    },
    "Creates a resource pool.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_resourcepool",
            "Creates a resource pool."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_resourcepool:",
            "    name: ${4:string}",
            "    parent: ${5:string}",
            "    resource_pool: ${6:string}",
            "    state: ${8|present,absent|}",
            "    vcenter_hostname: ${9:string}",
            "    vcenter_password: ${10:string}",
            "    vcenter_rest_log_file: ${11:string}",
            "    vcenter_username: ${12:string}",
            "    vcenter_validate_certs: ${13|true,false|}",
            "$0"
        ],
        "description": "Creates a resource pool.",
        "scope": "ansible"
    },
    "Retrieves information about the resource pool indicated by {@param.name resourcePool}.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_resourcepool_info",
            "Retrieves information about the resource pool indicated by {@param.name resourcePool}."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_resourcepool_info:",
            "    clusters:",
            "      - ${2:element}",
            "    datacenters:",
            "      - ${3:element}",
            "    hosts:",
            "      - ${4:element}",
            "    names:",
            "      - ${5:element}",
            "    parent_resource_pools:",
            "      - ${6:element}",
            "    resource_pool: ${7:string}",
            "    resource_pools:",
            "      - ${8:element}",
            "    vcenter_hostname: ${10:string}",
            "    vcenter_password: ${11:string}",
            "    vcenter_rest_log_file: ${12:string}",
            "    vcenter_username: ${13:string}",
            "    vcenter_validate_certs: ${14|true,false|}",
            "$0"
        ],
        "description": "Retrieves information about the resource pool indicated by {@param.name resourcePool}.",
        "scope": "ansible"
    },
    "Returns information about at most 1024 visible (subject to permission checks) storage solicies availabe in vCenter": {
        "prefix": [
            "vmware.vmware_rest.vcenter_storage_policies_info",
            "Returns information about at most 1024 visible (subject to permission checks) storage solicies availabe in vCenter"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_storage_policies_info:",
            "    policies:",
            "      - ${2:element}",
            "    vcenter_hostname: ${4:string}",
            "    vcenter_password: ${5:string}",
            "    vcenter_rest_log_file: ${6:string}",
            "    vcenter_username: ${7:string}",
            "    vcenter_validate_certs: ${8|true,false|}",
            "$0"
        ],
        "description": "Returns information about at most 1024 visible (subject to permission checks) storage solicies availabe in vCenter",
        "scope": "ansible"
    },
    "Creates a virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm",
            "Creates a virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm:",
            "    bios_uuid: ${2:string}",
            "    boot_devices:",
            "      - ${4:element}",
            "    cdroms:",
            "      - ${5:element}",
            "    datastore: ${7:string}",
            "    datastore_path: ${8:string}",
            "    disconnect_all_nics: ${9|false,true|}",
            "    disks:",
            "      - ${10:element}",
            "    disks_to_remove:",
            "      - ${11:element}",
            "    floppies:",
            "      - ${13:element}",
            "    guest_OS: ${14:string}",
            "    hardware_version: ${16:string}",
            "    name: ${18:string}",
            "    nics:",
            "      - ${19:element}",
            "    parallel_ports:",
            "      - ${21:element}",
            "    path: ${23:string}",
            "    power_on: ${25|false,true|}",
            "    sata_adapters:",
            "      - ${26:element}",
            "    scsi_adapters:",
            "      - ${27:element}",
            "    serial_ports:",
            "      - ${28:element}",
            "    source: ${31:string}",
            "    state: ${32|present,absent,clone,instant_clone,register,relocate,unregister|}",
            "    vcenter_hostname: ${34:string}",
            "    vcenter_password: ${35:string}",
            "    vcenter_rest_log_file: ${36:string}",
            "    vcenter_username: ${37:string}",
            "    vcenter_validate_certs: ${38|true,false|}",
            "    vm: ${39:string}",
            "$0"
        ],
        "description": "Creates a virtual machine.",
        "scope": "ansible"
    },
    "Applies a customization specification on the virtual machine": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_guest_customization",
            "Applies a customization specification on the virtual machine"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_guest_customization:",
            "    interfaces:",
            "      - ${4:element}",
            "    vcenter_hostname: ${6:string}",
            "    vcenter_password: ${7:string}",
            "    vcenter_rest_log_file: ${8:string}",
            "    vcenter_username: ${9:string}",
            "    vcenter_validate_certs: ${10|true,false|}",
            "    vm: ${11:string}",
            "$0"
        ],
        "description": "Applies a customization specification on the virtual machine",
        "scope": "ansible"
    },
    "Creates a directory in the guest operating system": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_guest_filesystem_directories",
            "Creates a directory in the guest operating system"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_guest_filesystem_directories:",
            "    create_parents: ${2|false,true|}",
            "    new_path: ${4:string}",
            "    parent_path: ${5:string}",
            "    path: ${6:string}",
            "    prefix: ${7:string}",
            "    recursive: ${8|false,true|}",
            "    state: ${10|present,absent,create_temporary,move|}",
            "    suffix: ${11:string}",
            "    vcenter_hostname: ${12:string}",
            "    vcenter_password: ${13:string}",
            "    vcenter_rest_log_file: ${14:string}",
            "    vcenter_username: ${15:string}",
            "    vcenter_validate_certs: ${16|true,false|}",
            "    vm: ${17:string}",
            "$0"
        ],
        "description": "Creates a directory in the guest operating system",
        "scope": "ansible"
    },
    "Return information about the guest.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_guest_identity_info",
            "Return information about the guest."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_guest_identity_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "    vm: ${8:string}",
            "$0"
        ],
        "description": "Return information about the guest.",
        "scope": "ansible"
    },
    "Returns details of the local file systems in the guest operating system.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_guest_localfilesystem_info",
            "Returns details of the local file systems in the guest operating system."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_guest_localfilesystem_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "    vm: ${8:string}",
            "$0"
        ],
        "description": "Returns details of the local file systems in the guest operating system.",
        "scope": "ansible"
    },
    "Returns information about the network configuration in the guest operating system.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_guest_networking_info",
            "Returns information about the network configuration in the guest operating system."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_guest_networking_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "    vm: ${8:string}",
            "$0"
        ],
        "description": "Returns information about the network configuration in the guest operating system.",
        "scope": "ansible"
    },
    "Returns information about the networking interfaces in the guest operating system.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_guest_networking_interfaces_info",
            "Returns information about the networking interfaces in the guest operating system."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_guest_networking_interfaces_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "    vm: ${8:string}",
            "$0"
        ],
        "description": "Returns information about the networking interfaces in the guest operating system.",
        "scope": "ansible"
    },
    "Returns information about network routing in the guest operating system.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_guest_networking_routes_info",
            "Returns information about network routing in the guest operating system."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_guest_networking_routes_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "    vm: ${8:string}",
            "$0"
        ],
        "description": "Returns information about network routing in the guest operating system.",
        "scope": "ansible"
    },
    "Get information about the guest operation status.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_guest_operations_info",
            "Get information about the guest operation status."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_guest_operations_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "    vm: ${8:string}",
            "$0"
        ],
        "description": "Get information about the guest operation status.",
        "scope": "ansible"
    },
    "Issues a request to the guest operating system asking it to perform a soft shutdown, standby (suspend) or soft reboot": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_guest_power",
            "Issues a request to the guest operating system asking it to perform a soft shutdown, standby (suspend) or soft reboot"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_guest_power:",
            "    state: ${3:string}",
            "    vcenter_hostname: ${4:string}",
            "    vcenter_password: ${5:string}",
            "    vcenter_rest_log_file: ${6:string}",
            "    vcenter_username: ${7:string}",
            "    vcenter_validate_certs: ${8|true,false|}",
            "    vm: ${9:string}",
            "$0"
        ],
        "description": "Issues a request to the guest operating system asking it to perform a soft shutdown, standby (suspend) or soft reboot",
        "scope": "ansible"
    },
    "Returns information about the guest operating system power state.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_guest_power_info",
            "Returns information about the guest operating system power state."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_guest_power_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "    vm: ${8:string}",
            "$0"
        ],
        "description": "Returns information about the guest operating system power state.",
        "scope": "ansible"
    },
    "Updates the virtual hardware settings of a virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware",
            "Updates the virtual hardware settings of a virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware:",
            "    state: ${3|present,upgrade|}",
            "    upgrade_policy: ${4:string}",
            "    upgrade_version: ${5:string}",
            "    vcenter_hostname: ${6:string}",
            "    vcenter_password: ${7:string}",
            "    vcenter_rest_log_file: ${8:string}",
            "    vcenter_username: ${9:string}",
            "    vcenter_validate_certs: ${10|true,false|}",
            "    version: ${11:string}",
            "    vm: ${12:string}",
            "$0"
        ],
        "description": "Updates the virtual hardware settings of a virtual machine.",
        "scope": "ansible"
    },
    "Adds a virtual SATA adapter to the virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_adapter_sata",
            "Adds a virtual SATA adapter to the virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_adapter_sata:",
            "    adapter: ${2:string}",
            "    bus: ${3:int}",
            "    label: ${4:string}",
            "    pci_slot_number: ${5:int}",
            "    state: ${7|present,absent|}",
            "    type: ${8:string}",
            "    vcenter_hostname: ${9:string}",
            "    vcenter_password: ${10:string}",
            "    vcenter_rest_log_file: ${11:string}",
            "    vcenter_username: ${12:string}",
            "    vcenter_validate_certs: ${13|true,false|}",
            "    vm: ${14:string}",
            "$0"
        ],
        "description": "Adds a virtual SATA adapter to the virtual machine.",
        "scope": "ansible"
    },
    "Returns information about a virtual SATA adapter.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_adapter_sata_info",
            "Returns information about a virtual SATA adapter."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_adapter_sata_info:",
            "    adapter: ${2:string}",
            "    label: ${3:string}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "    vm: ${10:string}",
            "$0"
        ],
        "description": "Returns information about a virtual SATA adapter.",
        "scope": "ansible"
    },
    "Adds a virtual SCSI adapter to the virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_adapter_scsi",
            "Adds a virtual SCSI adapter to the virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_adapter_scsi:",
            "    adapter: ${2:string}",
            "    bus: ${3:int}",
            "    label: ${4:string}",
            "    pci_slot_number: ${5:int}",
            "    sharing: ${7:string}",
            "    state: ${8|present,absent|}",
            "    type: ${9:string}",
            "    vcenter_hostname: ${10:string}",
            "    vcenter_password: ${11:string}",
            "    vcenter_rest_log_file: ${12:string}",
            "    vcenter_username: ${13:string}",
            "    vcenter_validate_certs: ${14|true,false|}",
            "    vm: ${15:string}",
            "$0"
        ],
        "description": "Adds a virtual SCSI adapter to the virtual machine.",
        "scope": "ansible"
    },
    "Returns information about a virtual SCSI adapter.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_adapter_scsi_info",
            "Returns information about a virtual SCSI adapter."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_adapter_scsi_info:",
            "    adapter: ${2:string}",
            "    label: ${3:string}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "    vm: ${10:string}",
            "$0"
        ],
        "description": "Returns information about a virtual SCSI adapter.",
        "scope": "ansible"
    },
    "Updates the boot-related settings of a virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_boot",
            "Updates the boot-related settings of a virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_boot:",
            "    delay: ${2:int}",
            "    efi_legacy_boot: ${3|false,true|}",
            "    enter_setup_mode: ${4|false,true|}",
            "    network_protocol: ${5:string}",
            "    retry: ${6|false,true|}",
            "    retry_delay: ${7:int}",
            "    state: ${9|present|}",
            "    type: ${10:string}",
            "    vcenter_hostname: ${11:string}",
            "    vcenter_password: ${12:string}",
            "    vcenter_rest_log_file: ${13:string}",
            "    vcenter_username: ${14:string}",
            "    vcenter_validate_certs: ${15|true,false|}",
            "    vm: ${16:string}",
            "$0"
        ],
        "description": "Updates the boot-related settings of a virtual machine.",
        "scope": "ansible"
    },
    "Sets the virtual devices that will be used to boot the virtual machine": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_boot_device",
            "Sets the virtual devices that will be used to boot the virtual machine"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_boot_device:",
            "    devices:",
            "      - ${2:element}",
            "    state: ${4|set|}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "    vm: ${10:string}",
            "$0"
        ],
        "description": "Sets the virtual devices that will be used to boot the virtual machine",
        "scope": "ansible"
    },
    "Returns an ordered list of boot devices for the virtual machine": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_boot_device_info",
            "Returns an ordered list of boot devices for the virtual machine"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_boot_device_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "    vm: ${8:string}",
            "$0"
        ],
        "description": "Returns an ordered list of boot devices for the virtual machine",
        "scope": "ansible"
    },
    "Returns the boot-related settings of a virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_boot_info",
            "Returns the boot-related settings of a virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_boot_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "    vm: ${8:string}",
            "$0"
        ],
        "description": "Returns the boot-related settings of a virtual machine.",
        "scope": "ansible"
    },
    "Adds a virtual CD-ROM device to the virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_cdrom",
            "Adds a virtual CD-ROM device to the virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_cdrom:",
            "    allow_guest_control: ${2|false,true|}",
            "    cdrom: ${4:string}",
            "    label: ${6:string}",
            "    start_connected: ${9|false,true|}",
            "    state: ${10|present,absent,connect,disconnect|}",
            "    type: ${11:string}",
            "    vcenter_hostname: ${12:string}",
            "    vcenter_password: ${13:string}",
            "    vcenter_rest_log_file: ${14:string}",
            "    vcenter_username: ${15:string}",
            "    vcenter_validate_certs: ${16|true,false|}",
            "    vm: ${17:string}",
            "$0"
        ],
        "description": "Adds a virtual CD-ROM device to the virtual machine.",
        "scope": "ansible"
    },
    "Returns information about a virtual CD-ROM device.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_cdrom_info",
            "Returns information about a virtual CD-ROM device."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_cdrom_info:",
            "    cdrom: ${2:string}",
            "    label: ${3:string}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "    vm: ${10:string}",
            "$0"
        ],
        "description": "Returns information about a virtual CD-ROM device.",
        "scope": "ansible"
    },
    "Updates the CPU-related settings of a virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_cpu",
            "Updates the CPU-related settings of a virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_cpu:",
            "    cores_per_socket: ${2:int}",
            "    count: ${3:int}",
            "    hot_add_enabled: ${4|false,true|}",
            "    hot_remove_enabled: ${5|false,true|}",
            "    state: ${7|present|}",
            "    vcenter_hostname: ${8:string}",
            "    vcenter_password: ${9:string}",
            "    vcenter_rest_log_file: ${10:string}",
            "    vcenter_username: ${11:string}",
            "    vcenter_validate_certs: ${12|true,false|}",
            "    vm: ${13:string}",
            "$0"
        ],
        "description": "Updates the CPU-related settings of a virtual machine.",
        "scope": "ansible"
    },
    "Returns the CPU-related settings of a virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_cpu_info",
            "Returns the CPU-related settings of a virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_cpu_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "    vm: ${8:string}",
            "$0"
        ],
        "description": "Returns the CPU-related settings of a virtual machine.",
        "scope": "ansible"
    },
    "Adds a virtual disk to the virtual machine": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_disk",
            "Adds a virtual disk to the virtual machine"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_disk:",
            "    disk: ${3:string}",
            "    label: ${5:string}",
            "    state: ${10|present,absent|}",
            "    type: ${11:string}",
            "    vcenter_hostname: ${12:string}",
            "    vcenter_password: ${13:string}",
            "    vcenter_rest_log_file: ${14:string}",
            "    vcenter_username: ${15:string}",
            "    vcenter_validate_certs: ${16|true,false|}",
            "    vm: ${17:string}",
            "$0"
        ],
        "description": "Adds a virtual disk to the virtual machine",
        "scope": "ansible"
    },
    "Returns information about a virtual disk.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_disk_info",
            "Returns information about a virtual disk."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_disk_info:",
            "    disk: ${2:string}",
            "    label: ${3:string}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "    vm: ${10:string}",
            "$0"
        ],
        "description": "Returns information about a virtual disk.",
        "scope": "ansible"
    },
    "Adds a virtual Ethernet adapter to the virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_ethernet",
            "Adds a virtual Ethernet adapter to the virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_ethernet:",
            "    allow_guest_control: ${2|false,true|}",
            "    label: ${4:string}",
            "    mac_address: ${5:string}",
            "    mac_type: ${6:string}",
            "    nic: ${7:string}",
            "    pci_slot_number: ${8:int}",
            "    start_connected: ${10|false,true|}",
            "    state: ${11|present,absent,connect,disconnect|}",
            "    type: ${12:string}",
            "    upt_compatibility_enabled: ${13|false,true|}",
            "    vcenter_hostname: ${14:string}",
            "    vcenter_password: ${15:string}",
            "    vcenter_rest_log_file: ${16:string}",
            "    vcenter_username: ${17:string}",
            "    vcenter_validate_certs: ${18|true,false|}",
            "    vm: ${19:string}",
            "    wake_on_lan_enabled: ${20|false,true|}",
            "$0"
        ],
        "description": "Adds a virtual Ethernet adapter to the virtual machine.",
        "scope": "ansible"
    },
    "Returns information about a virtual Ethernet adapter.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_ethernet_info",
            "Returns information about a virtual Ethernet adapter."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_ethernet_info:",
            "    label: ${2:string}",
            "    nic: ${3:string}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "    vm: ${10:string}",
            "$0"
        ],
        "description": "Returns information about a virtual Ethernet adapter.",
        "scope": "ansible"
    },
    "Adds a virtual floppy drive to the virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_floppy",
            "Adds a virtual floppy drive to the virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_floppy:",
            "    allow_guest_control: ${2|false,true|}",
            "    floppy: ${4:string}",
            "    label: ${5:string}",
            "    start_connected: ${7|false,true|}",
            "    state: ${8|present,absent,connect,disconnect|}",
            "    vcenter_hostname: ${9:string}",
            "    vcenter_password: ${10:string}",
            "    vcenter_rest_log_file: ${11:string}",
            "    vcenter_username: ${12:string}",
            "    vcenter_validate_certs: ${13|true,false|}",
            "    vm: ${14:string}",
            "$0"
        ],
        "description": "Adds a virtual floppy drive to the virtual machine.",
        "scope": "ansible"
    },
    "Returns information about a virtual floppy drive.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_floppy_info",
            "Returns information about a virtual floppy drive."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_floppy_info:",
            "    floppy: ${2:string}",
            "    label: ${3:string}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "    vm: ${10:string}",
            "$0"
        ],
        "description": "Returns information about a virtual floppy drive.",
        "scope": "ansible"
    },
    "Returns the virtual hardware settings of a virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_info",
            "Returns the virtual hardware settings of a virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "    vm: ${8:string}",
            "$0"
        ],
        "description": "Returns the virtual hardware settings of a virtual machine.",
        "scope": "ansible"
    },
    "Updates the memory-related settings of a virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_memory",
            "Updates the memory-related settings of a virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_memory:",
            "    hot_add_enabled: ${2|false,true|}",
            "    size_MiB: ${4:int}",
            "    state: ${5|present|}",
            "    vcenter_hostname: ${6:string}",
            "    vcenter_password: ${7:string}",
            "    vcenter_rest_log_file: ${8:string}",
            "    vcenter_username: ${9:string}",
            "    vcenter_validate_certs: ${10|true,false|}",
            "    vm: ${11:string}",
            "$0"
        ],
        "description": "Updates the memory-related settings of a virtual machine.",
        "scope": "ansible"
    },
    "Returns the memory-related settings of a virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_memory_info",
            "Returns the memory-related settings of a virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_memory_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "    vm: ${8:string}",
            "$0"
        ],
        "description": "Returns the memory-related settings of a virtual machine.",
        "scope": "ansible"
    },
    "Adds a virtual parallel port to the virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_parallel",
            "Adds a virtual parallel port to the virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_parallel:",
            "    allow_guest_control: ${2|false,true|}",
            "    label: ${4:string}",
            "    port: ${5:string}",
            "    start_connected: ${7|false,true|}",
            "    state: ${8|present,absent,connect,disconnect|}",
            "    vcenter_hostname: ${9:string}",
            "    vcenter_password: ${10:string}",
            "    vcenter_rest_log_file: ${11:string}",
            "    vcenter_username: ${12:string}",
            "    vcenter_validate_certs: ${13|true,false|}",
            "    vm: ${14:string}",
            "$0"
        ],
        "description": "Adds a virtual parallel port to the virtual machine.",
        "scope": "ansible"
    },
    "Returns information about a virtual parallel port.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_parallel_info",
            "Returns information about a virtual parallel port."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_parallel_info:",
            "    label: ${2:string}",
            "    port: ${3:string}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "    vm: ${10:string}",
            "$0"
        ],
        "description": "Returns information about a virtual parallel port.",
        "scope": "ansible"
    },
    "Adds a virtual serial port to the virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_serial",
            "Adds a virtual serial port to the virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_serial:",
            "    allow_guest_control: ${2|false,true|}",
            "    label: ${4:string}",
            "    port: ${5:string}",
            "    start_connected: ${7|false,true|}",
            "    state: ${8|present,absent,connect,disconnect|}",
            "    vcenter_hostname: ${9:string}",
            "    vcenter_password: ${10:string}",
            "    vcenter_rest_log_file: ${11:string}",
            "    vcenter_username: ${12:string}",
            "    vcenter_validate_certs: ${13|true,false|}",
            "    vm: ${14:string}",
            "    yield_on_poll: ${15|false,true|}",
            "$0"
        ],
        "description": "Adds a virtual serial port to the virtual machine.",
        "scope": "ansible"
    },
    "Returns information about a virtual serial port.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_hardware_serial_info",
            "Returns information about a virtual serial port."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_hardware_serial_info:",
            "    label: ${2:string}",
            "    port: ${3:string}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "    vm: ${10:string}",
            "$0"
        ],
        "description": "Returns information about a virtual serial port.",
        "scope": "ansible"
    },
    "Returns information about a virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_info",
            "Returns information about a virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_info:",
            "    clusters:",
            "      - ${2:element}",
            "    datacenters:",
            "      - ${3:element}",
            "    folders:",
            "      - ${4:element}",
            "    hosts:",
            "      - ${5:element}",
            "    names:",
            "      - ${6:element}",
            "    power_states:",
            "      - ${7:element}",
            "    resource_pools:",
            "      - ${8:element}",
            "    vcenter_hostname: ${10:string}",
            "    vcenter_password: ${11:string}",
            "    vcenter_rest_log_file: ${12:string}",
            "    vcenter_username: ${13:string}",
            "    vcenter_validate_certs: ${14|true,false|}",
            "    vm: ${15:string}",
            "    vms:",
            "      - ${16:element}",
            "$0"
        ],
        "description": "Returns information about a virtual machine.",
        "scope": "ansible"
    },
    "Returns the information about the library item associated with the virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_libraryitem_info",
            "Returns the information about the library item associated with the virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_libraryitem_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "    vm: ${8:string}",
            "$0"
        ],
        "description": "Returns the information about the library item associated with the virtual machine.",
        "scope": "ansible"
    },
    "Operate a boot, hard shutdown, hard reset or hard suspend on a guest.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_power",
            "Operate a boot, hard shutdown, hard reset or hard suspend on a guest."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_power:",
            "    state: ${3:string}",
            "    vcenter_hostname: ${4:string}",
            "    vcenter_password: ${5:string}",
            "    vcenter_rest_log_file: ${6:string}",
            "    vcenter_username: ${7:string}",
            "    vcenter_validate_certs: ${8|true,false|}",
            "    vm: ${9:string}",
            "$0"
        ],
        "description": "Operate a boot, hard shutdown, hard reset or hard suspend on a guest.",
        "scope": "ansible"
    },
    "Returns the power state information of a virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_power_info",
            "Returns the power state information of a virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_power_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "    vm: ${8:string}",
            "$0"
        ],
        "description": "Returns the power state information of a virtual machine.",
        "scope": "ansible"
    },
    "Updates the storage policy configuration of a virtual machine and/or its associated virtual hard disks.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_storage_policy",
            "Updates the storage policy configuration of a virtual machine and/or its associated virtual hard disks."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_storage_policy:",
            "    state: ${4|present|}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "    vm: ${10:string}",
            "$0"
        ],
        "description": "Updates the storage policy configuration of a virtual machine and/or its associated virtual hard disks.",
        "scope": "ansible"
    },
    "Returns the storage policy Compliance {@link Info} of a virtual machine after explicitly re-computing compliance check.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_storage_policy_compliance",
            "Returns the storage policy Compliance {@link Info} of a virtual machine after explicitly re-computing compliance check."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_storage_policy_compliance:",
            "    disks:",
            "      - ${2:element}",
            "    state: ${4:string}",
            "    vcenter_hostname: ${5:string}",
            "    vcenter_password: ${6:string}",
            "    vcenter_rest_log_file: ${7:string}",
            "    vcenter_username: ${8:string}",
            "    vcenter_validate_certs: ${9|true,false|}",
            "    vm: ${10:string}",
            "    vm_home: ${11|false,true|}",
            "$0"
        ],
        "description": "Returns the storage policy Compliance {@link Info} of a virtual machine after explicitly re-computing compliance check.",
        "scope": "ansible"
    },
    "Returns the cached storage policy compliance information of a virtual machine.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_storage_policy_compliance_info",
            "Returns the cached storage policy compliance information of a virtual machine."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_storage_policy_compliance_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "    vm: ${8:string}",
            "$0"
        ],
        "description": "Returns the cached storage policy compliance information of a virtual machine.",
        "scope": "ansible"
    },
    "Returns Information about Storage Policy associated with a virtual machine's home directory and/or its virtual hard disks.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_storage_policy_info",
            "Returns Information about Storage Policy associated with a virtual machine&#39;s home directory and/or its virtual hard disks."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_storage_policy_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "    vm: ${8:string}",
            "$0"
        ],
        "description": "Returns Information about Storage Policy associated with a virtual machine&#39;s home directory and/or its virtual hard disks.",
        "scope": "ansible"
    },
    "Update the properties of VMware Tools.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_tools",
            "Update the properties of VMware Tools."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_tools:",
            "    command_line_options: ${2:string}",
            "    state: ${4|present,upgrade|}",
            "    upgrade_policy: ${5:string}",
            "    vcenter_hostname: ${6:string}",
            "    vcenter_password: ${7:string}",
            "    vcenter_rest_log_file: ${8:string}",
            "    vcenter_username: ${9:string}",
            "    vcenter_validate_certs: ${10|true,false|}",
            "    vm: ${11:string}",
            "$0"
        ],
        "description": "Update the properties of VMware Tools.",
        "scope": "ansible"
    },
    "Get the properties of VMware Tools.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_tools_info",
            "Get the properties of VMware Tools."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_tools_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "    vm: ${8:string}",
            "$0"
        ],
        "description": "Get the properties of VMware Tools.",
        "scope": "ansible"
    },
    "Connects the VMware Tools CD installer as a CD-ROM for the guest operating system": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_tools_installer",
            "Connects the VMware Tools CD installer as a CD-ROM for the guest operating system"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_tools_installer:",
            "    state: ${3:string}",
            "    vcenter_hostname: ${4:string}",
            "    vcenter_password: ${5:string}",
            "    vcenter_rest_log_file: ${6:string}",
            "    vcenter_username: ${7:string}",
            "    vcenter_validate_certs: ${8|true,false|}",
            "    vm: ${9:string}",
            "$0"
        ],
        "description": "Connects the VMware Tools CD installer as a CD-ROM for the guest operating system",
        "scope": "ansible"
    },
    "Get information about the VMware Tools installer.": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vm_tools_installer_info",
            "Get information about the VMware Tools installer."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vm_tools_installer_info:",
            "    vcenter_hostname: ${3:string}",
            "    vcenter_password: ${4:string}",
            "    vcenter_rest_log_file: ${5:string}",
            "    vcenter_username: ${6:string}",
            "    vcenter_validate_certs: ${7|true,false|}",
            "    vm: ${8:string}",
            "$0"
        ],
        "description": "Get information about the VMware Tools installer.",
        "scope": "ansible"
    },
    "Creates a library item in content library from a virtual machine": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vmtemplate_libraryitems",
            "Creates a library item in content library from a virtual machine"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vmtemplate_libraryitems:",
            "    description: ${2:string}",
            "    library: ${7:string}",
            "    name: ${8:string}",
            "    powered_on: ${10|false,true|}",
            "    source_vm: ${12:string}",
            "    state: ${13|present,deploy|}",
            "    template_library_item: ${14:string}",
            "    vcenter_hostname: ${15:string}",
            "    vcenter_password: ${16:string}",
            "    vcenter_rest_log_file: ${17:string}",
            "    vcenter_username: ${18:string}",
            "    vcenter_validate_certs: ${19|true,false|}",
            "$0"
        ],
        "description": "Creates a library item in content library from a virtual machine",
        "scope": "ansible"
    },
    "Returns information about a virtual machine template contained in the library item specified by {@param.name templateLibraryItem}": {
        "prefix": [
            "vmware.vmware_rest.vcenter_vmtemplate_libraryitems_info",
            "Returns information about a virtual machine template contained in the library item specified by {@param.name templateLibraryItem}"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  vmware.vmware_rest.vcenter_vmtemplate_libraryitems_info:",
            "    template_library_item: ${3:string}",
            "    vcenter_hostname: ${4:string}",
            "    vcenter_password: ${5:string}",
            "    vcenter_rest_log_file: ${6:string}",
            "    vcenter_username: ${7:string}",
            "    vcenter_validate_certs: ${8|true,false|}",
            "$0"
        ],
        "description": "Returns information about a virtual machine template contained in the library item specified by {@param.name templateLibraryItem}",
        "scope": "ansible"
    }
}