{
    "Get Azure Account facts (output of az account show)": {
        "prefix": [
            "azure.azcollection.azure_rm_account_info",
            "Get Azure Account facts (output of az account show)"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_account_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${11:string}",
            "    profile: ${12:string}",
            "    secret: ${13:string}",
            "    subscription_id: ${14:string}",
            "    tenant: ${15:string}",
            "    thumbprint: ${16:string}",
            "    x509_certificate_path: ${17:path}",
            "$0"
        ],
        "description": "Get Azure Account facts (output of az account show)",
        "scope": "ansible"
    },
    "Manage Azure Active Directory application": {
        "prefix": [
            "azure.azcollection.azure_rm_adapplication",
            "Manage Azure Active Directory application"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_adapplication:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    allow_guests_sign_in: ${4|false,true|}",
            "    api_profile: ${5:latest}",
            "    app_id: ${6:string}",
            "    app_roles:",
            "      - ${7:element}",
            "    auth_source: ${8|auto,cli,credential_file,env,msi|}",
            "    available_to_other_tenants: ${9|false,true|}",
            "    cert_validation_mode: ${10:string}",
            "    client_id: ${11:string}",
            "    cloud_environment: ${12:AzureCloud}",
            "    credential_description: ${13:string}",
            "    display_name: ${14:string}",
            "    end_date: ${15:string}",
            "    homepage: ${16:string}",
            "    identifier_uris:",
            "      - ${17:element}",
            "    key_type: ${18|AsymmetricX509Cert,Password,Symmetric|}",
            "    key_usage: ${19|Verify,Sign|}",
            "    key_value: ${20:string}",
            "    log_mode: ${21:string}",
            "    log_path: ${22:string}",
            "    native_app: ${23|false,true|}",
            "    oauth2_allow_implicit_flow: ${24|false,true|}",
            "    optional_claims:",
            "      - ${25:element}",
            "    password: ${26:string}",
            "    profile: ${27:string}",
            "    reply_urls:",
            "      - ${28:element}",
            "    required_resource_accesses:",
            "      - ${29:element}",
            "    secret: ${30:string}",
            "    start_date: ${31:string}",
            "    state: ${32|present,absent|}",
            "    subscription_id: ${33:string}",
            "    tenant: ${34:string}",
            "    thumbprint: ${35:string}",
            "    x509_certificate_path: ${36:path}",
            "$0"
        ],
        "description": "Manage Azure Active Directory application",
        "scope": "ansible"
    },
    "Get Azure Active Directory application info": {
        "prefix": [
            "azure.azcollection.azure_rm_adapplication_info",
            "Get Azure Active Directory application info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_adapplication_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    app_id: ${5:string}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    identifier_uri: ${10:string}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    object_id: ${13:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure Active Directory application info",
        "scope": "ansible"
    },
    "Manage Azure Active Directory group": {
        "prefix": [
            "azure.azcollection.azure_rm_adgroup",
            "Manage Azure Active Directory group"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_adgroup:",
            "    absent_members:",
            "      - ${2:element}",
            "    absent_owners:",
            "      - ${3:element}",
            "    ad_user: ${4:string}",
            "    adfs_authority_url: ${5:string}",
            "    api_profile: ${6:latest}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    display_name: ${11:string}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    mail_nickname: ${14:string}",
            "    object_id: ${15:string}",
            "    password: ${16:string}",
            "    present_members:",
            "      - ${17:element}",
            "    present_owners:",
            "      - ${18:element}",
            "    profile: ${19:string}",
            "    secret: ${20:string}",
            "    state: ${21|present,absent|}",
            "    subscription_id: ${22:string}",
            "    tenant: ${23:string}",
            "    thumbprint: ${24:string}",
            "    x509_certificate_path: ${25:path}",
            "$0"
        ],
        "description": "Manage Azure Active Directory group",
        "scope": "ansible"
    },
    "Get Azure Active Directory group info": {
        "prefix": [
            "azure.azcollection.azure_rm_adgroup_info",
            "Get Azure Active Directory group info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_adgroup_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    all: ${4|false,true|}",
            "    api_profile: ${5:latest}",
            "    attribute_name: ${6:string}",
            "    attribute_value: ${7:string}",
            "    auth_source: ${8|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${9:string}",
            "    check_membership: ${10:string}",
            "    client_id: ${11:string}",
            "    cloud_environment: ${12:AzureCloud}",
            "    log_mode: ${13:string}",
            "    log_path: ${14:string}",
            "    object_id: ${15:string}",
            "    odata_filter: ${16:string}",
            "    password: ${17:string}",
            "    profile: ${18:string}",
            "    return_group_members: ${19|false,true|}",
            "    return_member_groups: ${20|false,true|}",
            "    return_owners: ${21|false,true|}",
            "    secret: ${22:string}",
            "    subscription_id: ${23:string}",
            "    tenant: ${24:string}",
            "    thumbprint: ${25:string}",
            "    x509_certificate_path: ${26:path}",
            "$0"
        ],
        "description": "Get Azure Active Directory group info",
        "scope": "ansible"
    },
    "Manage application password": {
        "prefix": [
            "azure.azcollection.azure_rm_adpassword",
            "Manage application password"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_adpassword:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    app_id: ${5:string}",
            "    app_object_id: ${6:string}",
            "    append_tags: ${7|true,false|}",
            "    auth_source: ${8|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${9:string}",
            "    client_id: ${10:string}",
            "    cloud_environment: ${11:AzureCloud}",
            "    end_date: ${12:string}",
            "    key_id: ${13:string}",
            "    log_mode: ${14:string}",
            "    log_path: ${15:string}",
            "    password: ${16:string}",
            "    profile: ${17:string}",
            "    secret: ${18:string}",
            "    service_principal_object_id: ${19:string}",
            "    state: ${20|present,absent|}",
            "    subscription_id: ${21:string}",
            "    tenant: ${23:string}",
            "    thumbprint: ${24:string}",
            "    value: ${25:string}",
            "    x509_certificate_path: ${26:path}",
            "$0"
        ],
        "description": "Manage application password",
        "scope": "ansible"
    },
    "Get application password info": {
        "prefix": [
            "azure.azcollection.azure_rm_adpassword_info",
            "Get application password info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_adpassword_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    app_id: ${5:string}",
            "    app_object_id: ${6:string}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    end_date: ${11:string}",
            "    key_id: ${12:string}",
            "    log_mode: ${13:string}",
            "    log_path: ${14:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    secret: ${17:string}",
            "    service_principal_object_id: ${18:string}",
            "    subscription_id: ${19:string}",
            "    tenant: ${20:string}",
            "    thumbprint: ${21:string}",
            "    value: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Get application password info",
        "scope": "ansible"
    },
    "Manage Azure Active Directory service principal": {
        "prefix": [
            "azure.azcollection.azure_rm_adserviceprincipal",
            "Manage Azure Active Directory service principal"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_adserviceprincipal:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    app_id: ${5:string}",
            "    app_role_assignment_required: ${6|false,true|}",
            "    append_tags: ${7|true,false|}",
            "    auth_source: ${8|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${9:string}",
            "    client_id: ${10:string}",
            "    cloud_environment: ${11:AzureCloud}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    secret: ${16:string}",
            "    state: ${17|present,absent|}",
            "    subscription_id: ${18:string}",
            "    tenant: ${20:string}",
            "    thumbprint: ${21:string}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Manage Azure Active Directory service principal",
        "scope": "ansible"
    },
    "Get Azure Active Directory service principal info": {
        "prefix": [
            "azure.azcollection.azure_rm_adserviceprincipal_info",
            "Get Azure Active Directory service principal info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_adserviceprincipal_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    app_id: ${5:string}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    object_id: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${19:path}",
            "$0"
        ],
        "description": "Get Azure Active Directory service principal info",
        "scope": "ansible"
    },
    "Modify an Azure Active Directory user": {
        "prefix": [
            "azure.azcollection.azure_rm_aduser",
            "Modify an Azure Active Directory user"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_aduser:",
            "    account_enabled: ${2|false,true|}",
            "    ad_user: ${3:string}",
            "    adfs_authority_url: ${4:string}",
            "    api_profile: ${5:latest}",
            "    attribute_name: ${6:string}",
            "    attribute_value: ${7:string}",
            "    auth_source: ${8|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${9:string}",
            "    client_id: ${10:string}",
            "    cloud_environment: ${11:AzureCloud}",
            "    display_name: ${12:string}",
            "    given_name: ${13:string}",
            "    immutable_id: ${14:string}",
            "    log_mode: ${15:string}",
            "    log_path: ${16:string}",
            "    mail: ${17:string}",
            "    mail_nickname: ${18:string}",
            "    object_id: ${19:string}",
            "    odata_filter: ${20:string}",
            "    password: ${21:string}",
            "    password_profile: ${22:string}",
            "    profile: ${23:string}",
            "    secret: ${24:string}",
            "    state: ${25|present,absent|}",
            "    subscription_id: ${26:string}",
            "    surname: ${27:string}",
            "    tenant: ${28:string}",
            "    thumbprint: ${29:string}",
            "    usage_location: ${30:string}",
            "    user_principal_name: ${31:string}",
            "    user_type: ${32:string}",
            "    x509_certificate_path: ${33:path}",
            "$0"
        ],
        "description": "Modify an Azure Active Directory user",
        "scope": "ansible"
    },
    "Get Azure Active Directory user info": {
        "prefix": [
            "azure.azcollection.azure_rm_aduser_info",
            "Get Azure Active Directory user info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_aduser_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    all: ${4|false,true|}",
            "    api_profile: ${5:latest}",
            "    attribute_name: ${6:string}",
            "    attribute_value: ${7:string}",
            "    auth_source: ${8|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${9:string}",
            "    client_id: ${10:string}",
            "    cloud_environment: ${11:AzureCloud}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    object_id: ${14:string}",
            "    odata_filter: ${15:string}",
            "    password: ${16:string}",
            "    profile: ${17:string}",
            "    secret: ${18:string}",
            "    subscription_id: ${19:string}",
            "    tenant: ${20:string}",
            "    thumbprint: ${21:string}",
            "    user_principal_name: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Get Azure Active Directory user info",
        "scope": "ansible"
    },
    "Manage a managed Azure Container Service (AKS) instance": {
        "prefix": [
            "azure.azcollection.azure_rm_aks",
            "Manage a managed Azure Container Service (AKS) instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_aks:",
            "    ad_user: ${3:string}",
            "    adfs_authority_url: ${5:string}",
            "    api_profile: ${7:latest}",
            "    append_tags: ${9|true,false|}",
            "    auth_source: ${10|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${11:string}",
            "    client_id: ${12:string}",
            "    cloud_environment: ${13:AzureCloud}",
            "    enable_rbac: ${15|false,true|}",
            "    log_mode: ${19:string}",
            "    log_path: ${20:string}",
            "    node_resource_group: ${23:string}",
            "    password: ${24:string}",
            "    profile: ${25:string}",
            "    secret: ${27:string}",
            "    subscription_id: ${30:string}",
            "    tenant: ${32:string}",
            "    thumbprint: ${33:string}",
            "    x509_certificate_path: ${34:path}",
            "$0"
        ],
        "description": "Manage a managed Azure Container Service (AKS) instance",
        "scope": "ansible"
    },
    "Get Azure Kubernetes Service facts": {
        "prefix": [
            "azure.azcollection.azure_rm_aks_info",
            "Get Azure Kubernetes Service facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_aks_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${17:string}",
            "    tags:",
            "      - ${18:element}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Azure Kubernetes Service facts",
        "scope": "ansible"
    },
    "Manage node pools in Kubernetes kubernetes cluster": {
        "prefix": [
            "azure.azcollection.azure_rm_aksagentpool",
            "Manage node pools in Kubernetes kubernetes cluster"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_aksagentpool:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    availability_zones:",
            "      - ${7:element}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    cluster_name: ${11:string}",
            "    count: ${12:int}",
            "    enable_auto_scaling: ${13|false,true|}",
            "    log_mode: ${14:string}",
            "    log_path: ${15:string}",
            "    max_count: ${16:int}",
            "    max_pods: ${17:int}",
            "    min_count: ${18:int}",
            "    mode: ${19:string}",
            "    name: ${20:string}",
            "    orchestrator_version: ${22:string}",
            "    os_disk_size_gb: ${23:int}",
            "    os_type: ${24:string}",
            "    password: ${25:string}",
            "    profile: ${26:string}",
            "    resource_group: ${27:string}",
            "    secret: ${28:string}",
            "    state: ${29|present,absent|}",
            "    subscription_id: ${30:string}",
            "    tenant: ${32:string}",
            "    thumbprint: ${33:string}",
            "    type_properties_type: ${34:string}",
            "    vm_size: ${35:string}",
            "    vnet_subnet_id: ${36:string}",
            "    x509_certificate_path: ${37:path}",
            "$0"
        ],
        "description": "Manage node pools in Kubernetes kubernetes cluster",
        "scope": "ansible"
    },
    "Show the details for a node pool in the managed Kubernetes cluster": {
        "prefix": [
            "azure.azcollection.azure_rm_aksagentpool_info",
            "Show the details for a node pool in the managed Kubernetes cluster"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_aksagentpool_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    cluster_name: ${9:string}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Show the details for a node pool in the managed Kubernetes cluster",
        "scope": "ansible"
    },
    "Gets a list of supported versions for the specified agent pool": {
        "prefix": [
            "azure.azcollection.azure_rm_aksagentpoolversion_info",
            "Gets a list of supported versions for the specified agent pool"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_aksagentpoolversion_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    cluster_name: ${9:string}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${19:path}",
            "$0"
        ],
        "description": "Gets a list of supported versions for the specified agent pool",
        "scope": "ansible"
    },
    "Get the upgrade versions available for a AKS instance": {
        "prefix": [
            "azure.azcollection.azure_rm_aksupgrade_info",
            "Get the upgrade versions available for a AKS instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_aksupgrade_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${19:path}",
            "$0"
        ],
        "description": "Get the upgrade versions available for a AKS instance",
        "scope": "ansible"
    },
    "Get available kubernetes versions supported by Azure Kubernetes Service": {
        "prefix": [
            "azure.azcollection.azure_rm_aksversion_info",
            "Get available kubernetes versions supported by Azure Kubernetes Service"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_aksversion_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${14:string}",
            "    subscription_id: ${15:string}",
            "    tenant: ${16:string}",
            "    thumbprint: ${17:string}",
            "    x509_certificate_path: ${19:path}",
            "$0"
        ],
        "description": "Get available kubernetes versions supported by Azure Kubernetes Service",
        "scope": "ansible"
    },
    "Manage Azure api instances": {
        "prefix": [
            "azure.azcollection.azure_rm_apimanagement",
            "Manage Azure api instances"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_apimanagement:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_id: ${4:string}",
            "    api_profile: ${5:latest}",
            "    api_revision: ${6:string}",
            "    api_revision_description: ${7:string}",
            "    api_type: ${8:string}",
            "    api_version: ${9:string}",
            "    api_version_description: ${10:string}",
            "    api_version_set_id: ${12:string}",
            "    append_tags: ${13|true,false|}",
            "    auth_source: ${14|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${16:string}",
            "    client_id: ${17:string}",
            "    cloud_environment: ${18:AzureCloud}",
            "    description: ${19:string}",
            "    display_name: ${20:string}",
            "    format: ${21:string}",
            "    is_current: ${22|false,true|}",
            "    log_mode: ${23:string}",
            "    log_path: ${24:string}",
            "    password: ${25:string}",
            "    path: ${26:string}",
            "    profile: ${27:string}",
            "    protocols:",
            "      - ${28:element}",
            "    resource_group: ${29:string}",
            "    secret: ${30:string}",
            "    service_name: ${31:string}",
            "    service_url: ${32:string}",
            "    source_api_id: ${33:string}",
            "    state: ${34|present,absent|}",
            "    subscription_id: ${35:string}",
            "    subscription_required: ${37|false,true|}",
            "    tenant: ${39:string}",
            "    thumbprint: ${40:string}",
            "    type: ${41:string}",
            "    value: ${42:string}",
            "    x509_certificate_path: ${44:path}",
            "$0"
        ],
        "description": "Manage Azure api instances",
        "scope": "ansible"
    },
    "Get the infomation of the API Instance": {
        "prefix": [
            "azure.azcollection.azure_rm_apimanagement_info",
            "Get the infomation of the API Instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_apimanagement_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_id: ${4:string}",
            "    api_profile: ${5:latest}",
            "    append_tags: ${6|true,false|}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    expand_api_version_set: ${11|false,true|}",
            "    include_not_tagged_apis: ${12|false,true|}",
            "    log_mode: ${13:string}",
            "    log_path: ${14:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    resource_group: ${17:string}",
            "    secret: ${18:string}",
            "    service_name: ${19:string}",
            "    subscription_id: ${20:string}",
            "    tenant: ${22:string}",
            "    thumbprint: ${23:string}",
            "    x509_certificate_path: ${24:path}",
            "$0"
        ],
        "description": "Get the infomation of the API Instance",
        "scope": "ansible"
    },
    "Manage Azure ApiManagementService instance": {
        "prefix": [
            "azure.azcollection.azure_rm_apimanagementservice",
            "Manage Azure ApiManagementService instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_apimanagementservice:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    location: ${10:string}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    name: ${13:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    publisher_email: ${16:string}",
            "    publisher_name: ${17:string}",
            "    resource_group: ${18:string}",
            "    secret: ${19:string}",
            "    sku_capacity: ${20:int}",
            "    sku_name: ${21:string}",
            "    state: ${22|present,absent|}",
            "    subscription_id: ${23:string}",
            "    tenant: ${25:string}",
            "    thumbprint: ${26:string}",
            "    x509_certificate_path: ${27:path}",
            "$0"
        ],
        "description": "Manage Azure ApiManagementService instance",
        "scope": "ansible"
    },
    "Get ApiManagementService info": {
        "prefix": [
            "azure.azcollection.azure_rm_apimanagementservice_info",
            "Get ApiManagementService info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_apimanagementservice_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${19:path}",
            "$0"
        ],
        "description": "Get ApiManagementService info",
        "scope": "ansible"
    },
    "Manage Application Gateway instance": {
        "prefix": [
            "azure.azcollection.azure_rm_appgateway",
            "Manage Application Gateway instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_appgateway:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    authentication_certificates:",
            "      - ${7:element}",
            "    backend_address_pools:",
            "      - ${8:element}",
            "    backend_http_settings_collection:",
            "      - ${9:element}",
            "    cert_validation_mode: ${10:string}",
            "    client_id: ${11:string}",
            "    cloud_environment: ${12:AzureCloud}",
            "    frontend_ip_configurations:",
            "      - ${13:element}",
            "    frontend_ports:",
            "      - ${14:element}",
            "    gateway_ip_configurations:",
            "      - ${15:element}",
            "    gateway_state: ${16:string}",
            "    http_listeners:",
            "      - ${17:element}",
            "    log_mode: ${19:string}",
            "    log_path: ${20:string}",
            "    password: ${22:string}",
            "    probes:",
            "      - ${23:element}",
            "    profile: ${24:string}",
            "    redirect_configurations:",
            "      - ${25:element}",
            "    request_routing_rules:",
            "      - ${26:element}",
            "    rewrite_rule_sets:",
            "      - ${28:element}",
            "    secret: ${29:string}",
            "    ssl_certificates:",
            "      - ${31:element}",
            "    subscription_id: ${34:string}",
            "    tenant: ${36:string}",
            "    thumbprint: ${37:string}",
            "    url_path_maps:",
            "      - ${38:element}",
            "    x509_certificate_path: ${39:path}",
            "$0"
        ],
        "description": "Manage Application Gateway instance",
        "scope": "ansible"
    },
    "Retrieve Application Gateway instance facts": {
        "prefix": [
            "azure.azcollection.azure_rm_appgateway_info",
            "Retrieve Application Gateway instance facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_appgateway_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${19:path}",
            "$0"
        ],
        "description": "Retrieve Application Gateway instance facts",
        "scope": "ansible"
    },
    "Manage Azure Application Security Group": {
        "prefix": [
            "azure.azcollection.azure_rm_applicationsecuritygroup",
            "Manage Azure Application Security Group"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_applicationsecuritygroup:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    secret: ${17:string}",
            "    subscription_id: ${19:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Manage Azure Application Security Group",
        "scope": "ansible"
    },
    "Get Azure Application Security Group facts": {
        "prefix": [
            "azure.azcollection.azure_rm_applicationsecuritygroup_info",
            "Get Azure Application Security Group facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_applicationsecuritygroup_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure Application Security Group facts",
        "scope": "ansible"
    },
    "Manage App Service Plan": {
        "prefix": [
            "azure.azcollection.azure_rm_appserviceplan",
            "Manage App Service Plan"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_appserviceplan:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    is_linux: ${10|false,true|}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    password: ${16:string}",
            "    profile: ${17:string}",
            "    secret: ${19:string}",
            "    subscription_id: ${22:string}",
            "    tenant: ${24:string}",
            "    thumbprint: ${25:string}",
            "    x509_certificate_path: ${26:path}",
            "$0"
        ],
        "description": "Manage App Service Plan",
        "scope": "ansible"
    },
    "Get azure app service plan facts": {
        "prefix": [
            "azure.azcollection.azure_rm_appserviceplan_info",
            "Get azure app service plan facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_appserviceplan_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get azure app service plan facts",
        "scope": "ansible"
    },
    "Manage Azure Automation account": {
        "prefix": [
            "azure.azcollection.azure_rm_automationaccount",
            "Manage Azure Automation account"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_automationaccount:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    location: ${10:string}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    name: ${13:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    resource_group: ${16:string}",
            "    secret: ${17:string}",
            "    state: ${18|present,absent|}",
            "    subscription_id: ${19:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Manage Azure Automation account",
        "scope": "ansible"
    },
    "Get Azure automation account facts": {
        "prefix": [
            "azure.azcollection.azure_rm_automationaccount_info",
            "Get Azure automation account facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_automationaccount_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    list_keys: ${9|false,true|}",
            "    list_statistics: ${10|false,true|}",
            "    list_usages: ${11|false,true|}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    name: ${14:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    resource_group: ${17:string}",
            "    secret: ${18:string}",
            "    subscription_id: ${19:string}",
            "    tags:",
            "      - ${20:element}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Get Azure automation account facts",
        "scope": "ansible"
    },
    "Mange automation runbook": {
        "prefix": [
            "azure.azcollection.azure_rm_automationrunbook",
            "Mange automation runbook"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_automationrunbook:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    automation_account_name: ${7:string}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    description: ${11:string}",
            "    location: ${12:string}",
            "    log_activity_trace: ${13:int}",
            "    log_mode: ${14:string}",
            "    log_path: ${15:string}",
            "    log_progress: ${16|false,true|}",
            "    log_verbose: ${17|false,true|}",
            "    name: ${18:string}",
            "    password: ${19:string}",
            "    profile: ${20:string}",
            "    publish: ${21|false,true|}",
            "    resource_group: ${22:string}",
            "    runbook_type: ${23:string}",
            "    secret: ${24:string}",
            "    state: ${25|present,absent|}",
            "    subscription_id: ${26:string}",
            "    tenant: ${28:string}",
            "    thumbprint: ${29:string}",
            "    x509_certificate_path: ${30:path}",
            "$0"
        ],
        "description": "Mange automation runbook",
        "scope": "ansible"
    },
    "Get Azure automation runbook facts": {
        "prefix": [
            "azure.azcollection.azure_rm_automationrunbook_info",
            "Get Azure automation runbook facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_automationrunbook_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    automation_account_name: ${6:string}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    show_content: ${17|false,true|}",
            "    subscription_id: ${18:string}",
            "    tags:",
            "      - ${19:element}",
            "    tenant: ${20:string}",
            "    thumbprint: ${21:string}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Get Azure automation runbook facts",
        "scope": "ansible"
    },
    "Manage Azure autoscale setting": {
        "prefix": [
            "azure.azcollection.azure_rm_autoscale",
            "Manage Azure autoscale setting"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_autoscale:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    enabled: ${10|true,false|}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    password: ${16:string}",
            "    profile: ${17:string}",
            "    secret: ${20:string}",
            "    subscription_id: ${22:string}",
            "    tenant: ${25:string}",
            "    thumbprint: ${26:string}",
            "    x509_certificate_path: ${27:path}",
            "$0"
        ],
        "description": "Manage Azure autoscale setting",
        "scope": "ansible"
    },
    "Get Azure Auto Scale Setting facts": {
        "prefix": [
            "azure.azcollection.azure_rm_autoscale_info",
            "Get Azure Auto Scale Setting facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_autoscale_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure Auto Scale Setting facts",
        "scope": "ansible"
    },
    "Manage Azure Availability Set": {
        "prefix": [
            "azure.azcollection.azure_rm_availabilityset",
            "Manage Azure Availability Set"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_availabilityset:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    password: ${14:string}",
            "    platform_fault_domain_count: ${15:3}",
            "    platform_update_domain_count: ${16:5}",
            "    profile: ${17:string}",
            "    proximity_placement_group: ${18:string}",
            "    secret: ${20:string}",
            "    subscription_id: ${23:string}",
            "    tenant: ${25:string}",
            "    thumbprint: ${26:string}",
            "    x509_certificate_path: ${27:path}",
            "$0"
        ],
        "description": "Manage Azure Availability Set",
        "scope": "ansible"
    },
    "Get Azure Availability Set facts": {
        "prefix": [
            "azure.azcollection.azure_rm_availabilityset_info",
            "Get Azure Availability Set facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_availabilityset_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure Availability Set facts",
        "scope": "ansible"
    },
    "Manage Azure Firewall instance": {
        "prefix": [
            "azure.azcollection.azure_rm_azurefirewall",
            "Manage Azure Firewall instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_azurefirewall:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    application_rule_collections:",
            "      - ${6:element}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    ip_configurations:",
            "      - ${11:element}",
            "    location: ${12:string}",
            "    log_mode: ${13:string}",
            "    log_path: ${14:string}",
            "    name: ${15:string}",
            "    nat_rule_collections:",
            "      - ${16:element}",
            "    network_rule_collections:",
            "      - ${17:element}",
            "    password: ${18:string}",
            "    profile: ${19:string}",
            "    resource_group: ${20:string}",
            "    secret: ${21:string}",
            "    state: ${22|present,absent|}",
            "    subscription_id: ${23:string}",
            "    tenant: ${25:string}",
            "    thumbprint: ${26:string}",
            "    x509_certificate_path: ${27:path}",
            "$0"
        ],
        "description": "Manage Azure Firewall instance",
        "scope": "ansible"
    },
    "Get AzureFirewall info": {
        "prefix": [
            "azure.azcollection.azure_rm_azurefirewall_info",
            "Get AzureFirewall info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_azurefirewall_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${19:path}",
            "$0"
        ],
        "description": "Get AzureFirewall info",
        "scope": "ansible"
    },
    "Back up an Azure Virtual Machine using Azure Backup": {
        "prefix": [
            "azure.azcollection.azure_rm_backupazurevm",
            "Back up an Azure Virtual Machine using Azure Backup"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_backupazurevm:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    backup_policy_id: ${7:string}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    recovery_vault_name: ${15:string}",
            "    resource_group: ${16:string}",
            "    resource_id: ${17:string}",
            "    secret: ${18:string}",
            "    state: ${19|create,update,delete,stop,backup|}",
            "    subscription_id: ${20:string}",
            "    tenant: ${22:string}",
            "    thumbprint: ${23:string}",
            "    x509_certificate_path: ${24:path}",
            "$0"
        ],
        "description": "Back up an Azure Virtual Machine using Azure Backup",
        "scope": "ansible"
    },
    "Back up an Azure Virtual Machine using Azure Backup Information": {
        "prefix": [
            "azure.azcollection.azure_rm_backupazurevm_info",
            "Back up an Azure Virtual Machine using Azure Backup Information"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_backupazurevm_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    recovery_vault_name: ${14:string}",
            "    resource_group: ${15:string}",
            "    resource_id: ${16:string}",
            "    secret: ${17:string}",
            "    subscription_id: ${18:string}",
            "    tenant: ${20:string}",
            "    thumbprint: ${21:string}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Back up an Azure Virtual Machine using Azure Backup Information",
        "scope": "ansible"
    },
    "Manage Azure Backup Policy": {
        "prefix": [
            "azure.azcollection.azure_rm_backuppolicy",
            "Manage Azure Backup Policy"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_backuppolicy:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    backup_management_type: ${6:string}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    daily_retention_count: ${10:int}",
            "    instant_recovery_snapshot_retention: ${11:int}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    name: ${14:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    resource_group: ${17:string}",
            "    schedule_days:",
            "      - ${18:element}",
            "    schedule_run_frequency: ${19:string}",
            "    schedule_run_time: ${20:int}",
            "    schedule_weekly_frequency: ${21:int}",
            "    secret: ${22:string}",
            "    state: ${23|present,absent|}",
            "    subscription_id: ${24:string}",
            "    tenant: ${25:string}",
            "    thumbprint: ${26:string}",
            "    time_zone: ${27:UTC}",
            "    vault_name: ${28:string}",
            "    weekly_retention_count: ${29:int}",
            "    x509_certificate_path: ${30:path}",
            "$0"
        ],
        "description": "Manage Azure Backup Policy",
        "scope": "ansible"
    },
    "Get Info on Azure Backup Policy": {
        "prefix": [
            "azure.azcollection.azure_rm_backuppolicy_info",
            "Get Info on Azure Backup Policy"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_backuppolicy_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    vault_name: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Info on Azure Backup Policy",
        "scope": "ansible"
    },
    "Managed bastion host resource": {
        "prefix": [
            "azure.azcollection.azure_rm_bastionhost",
            "Managed bastion host resource"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_bastionhost:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    disable_copy_paste: ${10|false,true|}",
            "    enable_file_copy: ${11|false,true|}",
            "    enable_ip_connect: ${12|false,true|}",
            "    enable_shareable_link: ${13|false,true|}",
            "    enable_tunneling: ${14|false,true|}",
            "    ip_configurations:",
            "      - ${15:element}",
            "    location: ${16:string}",
            "    log_mode: ${17:string}",
            "    log_path: ${18:string}",
            "    name: ${19:string}",
            "    password: ${20:string}",
            "    profile: ${21:string}",
            "    resource_group: ${22:string}",
            "    scale_units: ${23:int}",
            "    secret: ${24:string}",
            "    state: ${26|present,absent|}",
            "    subscription_id: ${27:string}",
            "    tenant: ${29:string}",
            "    thumbprint: ${30:string}",
            "    x509_certificate_path: ${31:path}",
            "$0"
        ],
        "description": "Managed bastion host resource",
        "scope": "ansible"
    },
    "Get Azure bastion host info": {
        "prefix": [
            "azure.azcollection.azure_rm_bastionhost_info",
            "Get Azure bastion host info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_bastionhost_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure bastion host info",
        "scope": "ansible"
    },
    "Manages a Batch Account on Azure": {
        "prefix": [
            "azure.azcollection.azure_rm_batchaccount",
            "Manages a Batch Account on Azure"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_batchaccount:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    location: ${12:string}",
            "    log_mode: ${13:string}",
            "    log_path: ${14:string}",
            "    name: ${15:string}",
            "    password: ${16:string}",
            "    pool_allocation_mode: ${17|batch_service,user_subscription|}",
            "    profile: ${18:string}",
            "    resource_group: ${19:string}",
            "    secret: ${20:string}",
            "    state: ${21|present,absent|}",
            "    subscription_id: ${22:string}",
            "    tenant: ${24:string}",
            "    thumbprint: ${25:string}",
            "    x509_certificate_path: ${26:path}",
            "$0"
        ],
        "description": "Manages a Batch Account on Azure",
        "scope": "ansible"
    },
    "Manage a Azure CDN endpoint": {
        "prefix": [
            "azure.azcollection.azure_rm_cdnendpoint",
            "Manage a Azure CDN endpoint"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_cdnendpoint:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    content_types_to_compress:",
            "      - ${10:element}",
            "    is_compression_enabled: ${11|false,true|}",
            "    is_http_allowed: ${12|true,false|}",
            "    is_https_allowed: ${13|true,false|}",
            "    log_mode: ${15:string}",
            "    log_path: ${16:string}",
            "    origin_host_header: ${18:string}",
            "    origin_path: ${19:string}",
            "    password: ${21:string}",
            "    profile: ${22:string}",
            "    purge: ${24|false,true|}",
            "    purge_content_paths:",
            "      - ${25:element}",
            "    query_string_caching_behavior: ${26|ignore_query_string,bypass_caching,use_query_string,not_set|}",
            "    secret: ${28:string}",
            "    started: ${29|false,true|}",
            "    subscription_id: ${31:string}",
            "    tenant: ${33:string}",
            "    thumbprint: ${34:string}",
            "    x509_certificate_path: ${35:path}",
            "$0"
        ],
        "description": "Manage a Azure CDN endpoint",
        "scope": "ansible"
    },
    "Get Azure CDN endpoint facts": {
        "prefix": [
            "azure.azcollection.azure_rm_cdnendpoint_info",
            "Get Azure CDN endpoint facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_cdnendpoint_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tags:",
            "      - ${18:element}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Azure CDN endpoint facts",
        "scope": "ansible"
    },
    "Manage a Azure CDN profile": {
        "prefix": [
            "azure.azcollection.azure_rm_cdnprofile",
            "Manage a Azure CDN profile"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_cdnprofile:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    secret: ${17:string}",
            "    subscription_id: ${20:string}",
            "    tenant: ${22:string}",
            "    thumbprint: ${23:string}",
            "    x509_certificate_path: ${24:path}",
            "$0"
        ],
        "description": "Manage a Azure CDN profile",
        "scope": "ansible"
    },
    "Get Azure CDN profile facts": {
        "prefix": [
            "azure.azcollection.azure_rm_cdnprofile_info",
            "Get Azure CDN profile facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_cdnprofile_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure CDN profile facts",
        "scope": "ansible"
    },
    "Manage Azure Cognitive Search service": {
        "prefix": [
            "azure.azcollection.azure_rm_cognitivesearch",
            "Manage Azure Cognitive Search service"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_cognitivesearch:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    hosting_mode: ${10|default,highDensity|}",
            "    identity: ${11|None,SystemAssigned|}",
            "    location: ${12:string}",
            "    log_mode: ${13:string}",
            "    log_path: ${14:string}",
            "    name: ${15:string}",
            "    network_rule_set:",
            "      - ${16:element}",
            "    partition_count: ${17:1}",
            "    password: ${18:string}",
            "    profile: ${19:string}",
            "    public_network_access: ${20|enabled,disabled|}",
            "    replica_count: ${21:1}",
            "    resource_group: ${22:string}",
            "    secret: ${23:string}",
            "    sku: ${24|basic,free,standard,standard2,standard3,storage_optimized_l1,storage_optimized_l2|}",
            "    state: ${25|present,absent|}",
            "    subscription_id: ${26:string}",
            "    tenant: ${28:string}",
            "    thumbprint: ${29:string}",
            "    x509_certificate_path: ${30:path}",
            "$0"
        ],
        "description": "Manage Azure Cognitive Search service",
        "scope": "ansible"
    },
    "Get Azure Cognitive Search service info": {
        "prefix": [
            "azure.azcollection.azure_rm_cognitivesearch_info",
            "Get Azure Cognitive Search service info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_cognitivesearch_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    show_keys: ${16|false,true|}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure Cognitive Search service info",
        "scope": "ansible"
    },
    "Manage an Azure Container Instance": {
        "prefix": [
            "azure.azcollection.azure_rm_containerinstance",
            "Manage an Azure Container Instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_containerinstance:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    containers:",
            "      - ${10:element}",
            "    dns_name_label: ${11:string}",
            "    force_update: ${12|true,false|}",
            "    ip_address: ${13|none,public|}",
            "    location: ${14:string}",
            "    log_mode: ${15:string}",
            "    log_path: ${16:string}",
            "    name: ${17:string}",
            "    os_type: ${18|linux,windows|}",
            "    password: ${19:string}",
            "    ports:",
            "      - ${20:element}",
            "    profile: ${21:string}",
            "    registry_login_server: ${22:string}",
            "    registry_password: ${23:string}",
            "    registry_username: ${24:string}",
            "    resource_group: ${25:string}",
            "    restart_policy: ${26:string}",
            "    secret: ${27:string}",
            "    state: ${28|present,absent|}",
            "    subscription_id: ${29:string}",
            "    tenant: ${31:string}",
            "    thumbprint: ${32:string}",
            "    volumes:",
            "      - ${33:element}",
            "    x509_certificate_path: ${34:path}",
            "$0"
        ],
        "description": "Manage an Azure Container Instance",
        "scope": "ansible"
    },
    "Get Azure Container Instance facts": {
        "prefix": [
            "azure.azcollection.azure_rm_containerinstance_info",
            "Get Azure Container Instance facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_containerinstance_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure Container Instance facts",
        "scope": "ansible"
    },
    "Manage an Azure Container Registry": {
        "prefix": [
            "azure.azcollection.azure_rm_containerregistry",
            "Manage an Azure Container Registry"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_containerregistry:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    admin_user_enabled: ${4|false,true|}",
            "    api_profile: ${5:latest}",
            "    append_tags: ${6|true,false|}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    location: ${11:string}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    name: ${14:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    resource_group: ${17:string}",
            "    secret: ${18:string}",
            "    sku: ${19|Standard,Basic,Premium|}",
            "    state: ${20|present,absent|}",
            "    subscription_id: ${21:string}",
            "    tenant: ${23:string}",
            "    thumbprint: ${24:string}",
            "    x509_certificate_path: ${25:path}",
            "$0"
        ],
        "description": "Manage an Azure Container Registry",
        "scope": "ansible"
    },
    "Get Azure Container Registry facts": {
        "prefix": [
            "azure.azcollection.azure_rm_containerregistry_info",
            "Get Azure Container Registry facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_containerregistry_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    retrieve_credentials: ${15|false,true|}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tags:",
            "      - ${18:element}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Azure Container Registry facts",
        "scope": "ansible"
    },
    "Manage Replication instance.": {
        "prefix": [
            "azure.azcollection.azure_rm_containerregistryreplication",
            "Manage Replication instance."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_containerregistryreplication:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${18:string}",
            "    subscription_id: ${19:string}",
            "    tenant: ${20:string}",
            "    thumbprint: ${21:string}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Manage Replication instance.",
        "scope": "ansible"
    },
    "Get Replication facts.": {
        "prefix": [
            "azure.azcollection.azure_rm_containerregistryreplication_info",
            "Get Replication facts."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_containerregistryreplication_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${11:string}",
            "    profile: ${12:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Replication facts.",
        "scope": "ansible"
    },
    "Import or delete tags in Azure Container Registry": {
        "prefix": [
            "azure.azcollection.azure_rm_containerregistrytag",
            "Import or delete tags in Azure Container Registry"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_containerregistrytag:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    registry: ${14:string}",
            "    repository_name: ${15:string}",
            "    resource_group: ${16:string}",
            "    secret: ${17:string}",
            "    state: ${19|present,absent|}",
            "    subscription_id: ${20:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Import or delete tags in Azure Container Registry",
        "scope": "ansible"
    },
    "Get Azure Container Registry tag facts": {
        "prefix": [
            "azure.azcollection.azure_rm_containerregistrytag_info",
            "Get Azure Container Registry tag facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_containerregistrytag_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    registry: ${14:string}",
            "    repository_name: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure Container Registry tag facts",
        "scope": "ansible"
    },
    "Manage Webhook instance.": {
        "prefix": [
            "azure.azcollection.azure_rm_containerregistrywebhook",
            "Manage Webhook instance."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_containerregistrywebhook:",
            "    actions:",
            "      - ${2:element}",
            "    ad_user: ${3:string}",
            "    adfs_authority_url: ${4:string}",
            "    api_profile: ${5:latest}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    secret: ${19:string}",
            "    subscription_id: ${22:string}",
            "    tenant: ${23:string}",
            "    thumbprint: ${24:string}",
            "    x509_certificate_path: ${26:path}",
            "$0"
        ],
        "description": "Manage Webhook instance.",
        "scope": "ansible"
    },
    "Get Webhook facts.": {
        "prefix": [
            "azure.azcollection.azure_rm_containerregistrywebhook_info",
            "Get Webhook facts."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_containerregistrywebhook_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${11:string}",
            "    profile: ${12:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Webhook facts.",
        "scope": "ansible"
    },
    "Manage Azure Database Account instance": {
        "prefix": [
            "azure.azcollection.azure_rm_cosmosdbaccount",
            "Manage Azure Database Account instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_cosmosdbaccount:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    enable_automatic_failover: ${12|false,true|}",
            "    enable_cassandra: ${13|false,true|}",
            "    enable_free_tier: ${14|false,true|}",
            "    enable_gremlin: ${15|false,true|}",
            "    enable_multiple_write_locations: ${16|false,true|}",
            "    enable_table: ${17|false,true|}",
            "    geo_rep_locations:",
            "      - ${18:element}",
            "    ip_rules:",
            "      - ${20:element}",
            "    is_virtual_network_filter_enabled: ${21|false,true|}",
            "    log_mode: ${24:string}",
            "    log_path: ${25:string}",
            "    mongo_version: ${26:string}",
            "    password: ${28:string}",
            "    profile: ${29:string}",
            "    public_network_access: ${30|Enabled,Disabled|}",
            "    secret: ${32:string}",
            "    subscription_id: ${34:string}",
            "    tenant: ${36:string}",
            "    thumbprint: ${37:string}",
            "    virtual_network_rules:",
            "      - ${38:element}",
            "    x509_certificate_path: ${39:path}",
            "$0"
        ],
        "description": "Manage Azure Database Account instance",
        "scope": "ansible"
    },
    "Get Azure Cosmos DB Account facts": {
        "prefix": [
            "azure.azcollection.azure_rm_cosmosdbaccount_info",
            "Get Azure Cosmos DB Account facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_cosmosdbaccount_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    retrieve_connection_strings: ${15|false,true|}",
            "    retrieve_keys: ${16:string}",
            "    secret: ${17:string}",
            "    subscription_id: ${18:string}",
            "    tags:",
            "      - ${19:element}",
            "    tenant: ${20:string}",
            "    thumbprint: ${21:string}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Get Azure Cosmos DB Account facts",
        "scope": "ansible"
    },
    "Managed data factory": {
        "prefix": [
            "azure.azcollection.azure_rm_datafactory",
            "Managed data factory"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_datafactory:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    if_match: ${10:string}",
            "    location: ${11:string}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    name: ${14:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    public_network_access: ${17:string}",
            "    resource_group: ${19:string}",
            "    secret: ${20:string}",
            "    state: ${21|present,absent|}",
            "    subscription_id: ${22:string}",
            "    tenant: ${24:string}",
            "    thumbprint: ${25:string}",
            "    x509_certificate_path: ${26:path}",
            "$0"
        ],
        "description": "Managed data factory",
        "scope": "ansible"
    },
    "Get data factory facts": {
        "prefix": [
            "azure.azcollection.azure_rm_datafactory_info",
            "Get data factory facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_datafactory_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    if_none_match: ${9:string}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tags:",
            "      - ${18:element}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get data factory facts",
        "scope": "ansible"
    },
    "Manage Azure data lake store": {
        "prefix": [
            "azure.azcollection.azure_rm_datalakestore",
            "Manage Azure data lake store"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_datalakestore:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    default_group: ${10:string}",
            "    encryption_state: ${12:string}",
            "    firewall_allow_azure_ips: ${13:string}",
            "    firewall_rules:",
            "      - ${14:element}",
            "    firewall_state: ${15:string}",
            "    identity: ${16:string}",
            "    location: ${17:string}",
            "    log_mode: ${18:string}",
            "    log_path: ${19:string}",
            "    name: ${20:string}",
            "    new_tier: ${21:string}",
            "    password: ${22:string}",
            "    profile: ${23:string}",
            "    resource_group: ${24:string}",
            "    secret: ${25:string}",
            "    state: ${26|present,absent|}",
            "    subscription_id: ${27:string}",
            "    tenant: ${29:string}",
            "    thumbprint: ${30:string}",
            "    virtual_network_rules:",
            "      - ${31:element}",
            "    x509_certificate_path: ${32:path}",
            "$0"
        ],
        "description": "Manage Azure data lake store",
        "scope": "ansible"
    },
    "Get Azure Data Lake Store info": {
        "prefix": [
            "azure.azcollection.azure_rm_datalakestore_info",
            "Get Azure Data Lake Store info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_datalakestore_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${19:path}",
            "$0"
        ],
        "description": "Get Azure Data Lake Store info",
        "scope": "ansible"
    },
    "Manage DDoS protection plan": {
        "prefix": [
            "azure.azcollection.azure_rm_ddosprotectionplan",
            "Manage DDoS protection plan"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_ddosprotectionplan:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    location: ${10:string}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    name: ${13:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    resource_group: ${16:string}",
            "    secret: ${17:string}",
            "    state: ${18|present,absent|}",
            "    subscription_id: ${19:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Manage DDoS protection plan",
        "scope": "ansible"
    },
    "Get Azure DDoS protection plan": {
        "prefix": [
            "azure.azcollection.azure_rm_ddosprotectionplan_info",
            "Get Azure DDoS protection plan"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_ddosprotectionplan_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${19:path}",
            "$0"
        ],
        "description": "Get Azure DDoS protection plan",
        "scope": "ansible"
    },
    "Create or destroy Azure Resource Manager template deployments": {
        "prefix": [
            "azure.azcollection.azure_rm_deployment",
            "Create or destroy Azure Resource Manager template deployments"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_deployment:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    password: ${17:string}",
            "    profile: ${18:string}",
            "    secret: ${20:string}",
            "    subscription_id: ${22:string}",
            "    tenant: ${26:string}",
            "    thumbprint: ${27:string}",
            "    wait_for_deployment_completion: ${28|true,false|}",
            "    x509_certificate_path: ${30:path}",
            "$0"
        ],
        "description": "Create or destroy Azure Resource Manager template deployments",
        "scope": "ansible"
    },
    "Get Azure Deployment facts": {
        "prefix": [
            "azure.azcollection.azure_rm_deployment_info",
            "Get Azure Deployment facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_deployment_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${19:path}",
            "$0"
        ],
        "description": "Get Azure Deployment facts",
        "scope": "ansible"
    },
    "Manage Azure DevTest Lab instance": {
        "prefix": [
            "azure.azcollection.azure_rm_devtestlab",
            "Manage Azure DevTest Lab instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_devtestlab:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    password: ${14:string}",
            "    premium_data_disks: ${15|false,true|}",
            "    profile: ${16:string}",
            "    secret: ${18:string}",
            "    subscription_id: ${21:string}",
            "    tenant: ${23:string}",
            "    thumbprint: ${24:string}",
            "    x509_certificate_path: ${25:path}",
            "$0"
        ],
        "description": "Manage Azure DevTest Lab instance",
        "scope": "ansible"
    },
    "Get Azure DevTest Lab facts": {
        "prefix": [
            "azure.azcollection.azure_rm_devtestlab_info",
            "Get Azure DevTest Lab facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_devtestlab_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure DevTest Lab facts",
        "scope": "ansible"
    },
    "Get Azure DevTest Lab ARM Template facts": {
        "prefix": [
            "azure.azcollection.azure_rm_devtestlabarmtemplate_info",
            "Get Azure DevTest Lab ARM Template facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_devtestlabarmtemplate_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    artifact_source_name: ${5:string}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    lab_name: ${10:string}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    name: ${13:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    resource_group: ${16:string}",
            "    secret: ${17:string}",
            "    subscription_id: ${18:string}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Azure DevTest Lab ARM Template facts",
        "scope": "ansible"
    },
    "Get Azure DevTest Lab Artifact facts": {
        "prefix": [
            "azure.azcollection.azure_rm_devtestlabartifact_info",
            "Get Azure DevTest Lab Artifact facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_devtestlabartifact_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    artifact_source_name: ${5:string}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    lab_name: ${10:string}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    name: ${13:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    resource_group: ${16:string}",
            "    secret: ${17:string}",
            "    subscription_id: ${18:string}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Azure DevTest Lab Artifact facts",
        "scope": "ansible"
    },
    "Manage Azure DevTest Labs Artifacts Source instance": {
        "prefix": [
            "azure.azcollection.azure_rm_devtestlabartifactsource",
            "Manage Azure DevTest Labs Artifacts Source instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_devtestlabartifactsource:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${9:string}",
            "    client_id: ${10:string}",
            "    cloud_environment: ${11:AzureCloud}",
            "    is_enabled: ${14|false,true|}",
            "    log_mode: ${16:string}",
            "    log_path: ${17:string}",
            "    password: ${19:string}",
            "    profile: ${20:string}",
            "    secret: ${22:string}",
            "    subscription_id: ${26:string}",
            "    tenant: ${28:string}",
            "    thumbprint: ${29:string}",
            "    x509_certificate_path: ${31:path}",
            "$0"
        ],
        "description": "Manage Azure DevTest Labs Artifacts Source instance",
        "scope": "ansible"
    },
    "Get Azure DevTest Lab Artifact Source facts": {
        "prefix": [
            "azure.azcollection.azure_rm_devtestlabartifactsource_info",
            "Get Azure DevTest Lab Artifact Source facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_devtestlabartifactsource_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    lab_name: ${9:string}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tags:",
            "      - ${18:element}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Azure DevTest Lab Artifact Source facts",
        "scope": "ansible"
    },
    "Manage Azure DevTest Lab Custom Image instance": {
        "prefix": [
            "azure.azcollection.azure_rm_devtestlabcustomimage",
            "Manage Azure DevTest Lab Custom Image instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_devtestlabcustomimage:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    log_mode: ${14:string}",
            "    log_path: ${15:string}",
            "    password: ${17:string}",
            "    profile: ${18:string}",
            "    secret: ${20:string}",
            "    subscription_id: ${23:string}",
            "    tenant: ${25:string}",
            "    thumbprint: ${26:string}",
            "    x509_certificate_path: ${28:path}",
            "$0"
        ],
        "description": "Manage Azure DevTest Lab Custom Image instance",
        "scope": "ansible"
    },
    "Get Azure DevTest Lab Custom Image facts": {
        "prefix": [
            "azure.azcollection.azure_rm_devtestlabcustomimage_info",
            "Get Azure DevTest Lab Custom Image facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_devtestlabcustomimage_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    lab_name: ${9:string}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tags:",
            "      - ${18:element}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Azure DevTest Lab Custom Image facts",
        "scope": "ansible"
    },
    "Manage Azure DevTest Lab Environment instance": {
        "prefix": [
            "azure.azcollection.azure_rm_devtestlabenvironment",
            "Manage Azure DevTest Lab Environment instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_devtestlabenvironment:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    deployment_parameters:",
            "      - ${10:element}",
            "    deployment_template: ${11:\"raw\"}",
            "    lab_name: ${12:string}",
            "    location: ${13:string}",
            "    log_mode: ${14:string}",
            "    log_path: ${15:string}",
            "    name: ${16:string}",
            "    password: ${17:string}",
            "    profile: ${18:string}",
            "    resource_group: ${19:string}",
            "    secret: ${20:string}",
            "    state: ${21|present,absent|}",
            "    subscription_id: ${22:string}",
            "    tenant: ${24:string}",
            "    thumbprint: ${25:string}",
            "    user_name: ${26:string}",
            "    x509_certificate_path: ${27:path}",
            "$0"
        ],
        "description": "Manage Azure DevTest Lab Environment instance",
        "scope": "ansible"
    },
    "Get Azure Environment facts": {
        "prefix": [
            "azure.azcollection.azure_rm_devtestlabenvironment_info",
            "Get Azure Environment facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_devtestlabenvironment_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    lab_name: ${9:string}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tags:",
            "      - ${18:element}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    user_name: ${21:string}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Get Azure Environment facts",
        "scope": "ansible"
    },
    "Manage Azure Policy instance": {
        "prefix": [
            "azure.azcollection.azure_rm_devtestlabpolicy",
            "Manage Azure Policy instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_devtestlabpolicy:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${13:string}",
            "    log_path: ${14:string}",
            "    password: ${16:string}",
            "    profile: ${18:string}",
            "    secret: ${20:string}",
            "    subscription_id: ${22:string}",
            "    tenant: ${24:string}",
            "    threshold: ${25:\"raw\"}",
            "    thumbprint: ${26:string}",
            "    x509_certificate_path: ${27:path}",
            "$0"
        ],
        "description": "Manage Azure Policy instance",
        "scope": "ansible"
    },
    "Get Azure DTL Policy facts": {
        "prefix": [
            "azure.azcollection.azure_rm_devtestlabpolicy_info",
            "Get Azure DTL Policy facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_devtestlabpolicy_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    lab_name: ${9:string}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    policy_set_name: ${14:string}",
            "    profile: ${15:string}",
            "    resource_group: ${16:string}",
            "    secret: ${17:string}",
            "    subscription_id: ${18:string}",
            "    tags:",
            "      - ${19:element}",
            "    tenant: ${20:string}",
            "    thumbprint: ${21:string}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Get Azure DTL Policy facts",
        "scope": "ansible"
    },
    "Manage Azure DevTest Lab Schedule instance": {
        "prefix": [
            "azure.azcollection.azure_rm_devtestlabschedule",
            "Manage Azure DevTest Lab Schedule instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_devtestlabschedule:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    secret: ${17:string}",
            "    subscription_id: ${19:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${25:path}",
            "$0"
        ],
        "description": "Manage Azure DevTest Lab Schedule instance",
        "scope": "ansible"
    },
    "Get Azure Schedule facts": {
        "prefix": [
            "azure.azcollection.azure_rm_devtestlabschedule_info",
            "Get Azure Schedule facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_devtestlabschedule_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    lab_name: ${9:string}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tags:",
            "      - ${18:element}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Azure Schedule facts",
        "scope": "ansible"
    },
    "Manage Azure DevTest Lab Virtual Machine instance": {
        "prefix": [
            "azure.azcollection.azure_rm_devtestlabvirtualmachine",
            "Manage Azure DevTest Lab Virtual Machine instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_devtestlabvirtualmachine:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${5:latest}",
            "    append_tags: ${6|true,false|}",
            "    artifacts:",
            "      - ${7:element}",
            "    auth_source: ${8|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${9:string}",
            "    client_id: ${10:string}",
            "    cloud_environment: ${11:AzureCloud}",
            "    log_mode: ${17:string}",
            "    log_path: ${18:string}",
            "    password: ${22:string}",
            "    profile: ${23:string}",
            "    secret: ${25:string}",
            "    subscription_id: ${29:string}",
            "    tenant: ${31:string}",
            "    thumbprint: ${32:string}",
            "    x509_certificate_path: ${35:path}",
            "$0"
        ],
        "description": "Manage Azure DevTest Lab Virtual Machine instance",
        "scope": "ansible"
    },
    "Get Azure DevTest Lab Virtual Machine facts": {
        "prefix": [
            "azure.azcollection.azure_rm_devtestlabvirtualmachine_info",
            "Get Azure DevTest Lab Virtual Machine facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_devtestlabvirtualmachine_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    lab_name: ${9:string}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tags:",
            "      - ${18:element}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Azure DevTest Lab Virtual Machine facts",
        "scope": "ansible"
    },
    "Manage Azure DevTest Lab Virtual Network instance": {
        "prefix": [
            "azure.azcollection.azure_rm_devtestlabvirtualnetwork",
            "Manage Azure DevTest Lab Virtual Network instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_devtestlabvirtualnetwork:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${13:string}",
            "    log_path: ${14:string}",
            "    password: ${16:string}",
            "    profile: ${17:string}",
            "    secret: ${19:string}",
            "    subscription_id: ${21:string}",
            "    tenant: ${23:string}",
            "    thumbprint: ${24:string}",
            "    x509_certificate_path: ${25:path}",
            "$0"
        ],
        "description": "Manage Azure DevTest Lab Virtual Network instance",
        "scope": "ansible"
    },
    "Get Azure DevTest Lab Virtual Network facts": {
        "prefix": [
            "azure.azcollection.azure_rm_devtestlabvirtualnetwork_info",
            "Get Azure DevTest Lab Virtual Network facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_devtestlabvirtualnetwork_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    lab_name: ${9:string}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure DevTest Lab Virtual Network facts",
        "scope": "ansible"
    },
    "Create, delete and update Disk encryption set": {
        "prefix": [
            "azure.azcollection.azure_rm_diskencryptionset",
            "Create, delete and update Disk encryption set"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_diskencryptionset:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    key_url: ${10:string}",
            "    location: ${11:string}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    name: ${14:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    resource_group: ${17:string}",
            "    secret: ${18:string}",
            "    source_vault: ${19:string}",
            "    state: ${20|present,absent|}",
            "    subscription_id: ${21:string}",
            "    tenant: ${23:string}",
            "    thumbprint: ${24:string}",
            "    x509_certificate_path: ${25:path}",
            "$0"
        ],
        "description": "Create, delete and update Disk encryption set",
        "scope": "ansible"
    },
    "Get disk encryption set facts": {
        "prefix": [
            "azure.azcollection.azure_rm_diskencryptionset_info",
            "Get disk encryption set facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_diskencryptionset_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get disk encryption set facts",
        "scope": "ansible"
    },
    "Create, delete and update DNS record sets and records": {
        "prefix": [
            "azure.azcollection.azure_rm_dnsrecordset",
            "Create, delete and update DNS record sets and records"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_dnsrecordset:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_metadata: ${5|true,false|}",
            "    append_tags: ${6|true,false|}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    record_mode: ${16|purge,append|}",
            "    record_type: ${17:string}",
            "    records:",
            "      - ${18:element}",
            "    relative_name: ${19:string}",
            "    resource_group: ${20:string}",
            "    secret: ${21:string}",
            "    state: ${22|present,absent|}",
            "    subscription_id: ${23:string}",
            "    tenant: ${25:string}",
            "    thumbprint: ${26:string}",
            "    time_to_live: ${27:3600}",
            "    x509_certificate_path: ${28:path}",
            "    zone_name: ${29:string}",
            "$0"
        ],
        "description": "Create, delete and update DNS record sets and records",
        "scope": "ansible"
    },
    "Get DNS Record Set facts": {
        "prefix": [
            "azure.azcollection.azure_rm_dnsrecordset_info",
            "Get DNS Record Set facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_dnsrecordset_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    record_type: ${14:string}",
            "    relative_name: ${15:string}",
            "    resource_group: ${16:string}",
            "    secret: ${17:string}",
            "    subscription_id: ${18:string}",
            "    tenant: ${20:string}",
            "    thumbprint: ${21:string}",
            "    top: ${22:int}",
            "    x509_certificate_path: ${23:path}",
            "    zone_name: ${24:string}",
            "$0"
        ],
        "description": "Get DNS Record Set facts",
        "scope": "ansible"
    },
    "Manage Azure DNS zones": {
        "prefix": [
            "azure.azcollection.azure_rm_dnszone",
            "Manage Azure DNS zones"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_dnszone:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    registration_virtual_networks:",
            "      - ${15:element}",
            "    resolution_virtual_networks:",
            "      - ${16:element}",
            "    secret: ${18:string}",
            "    subscription_id: ${20:string}",
            "    tenant: ${22:string}",
            "    thumbprint: ${23:string}",
            "    x509_certificate_path: ${25:path}",
            "$0"
        ],
        "description": "Manage Azure DNS zones",
        "scope": "ansible"
    },
    "Get DNS zone facts": {
        "prefix": [
            "azure.azcollection.azure_rm_dnszone_info",
            "Get DNS zone facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_dnszone_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get DNS zone facts",
        "scope": "ansible"
    },
    "Manage Event Hub": {
        "prefix": [
            "azure.azcollection.azure_rm_eventhub",
            "Manage Event Hub"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_eventhub:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    location: ${10:string}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    message_retention_in_days: ${13:int}",
            "    name: ${14:string}",
            "    namespace_name: ${15:string}",
            "    partition_count: ${16:int}",
            "    password: ${17:string}",
            "    profile: ${18:string}",
            "    resource_group: ${19:string}",
            "    secret: ${20:string}",
            "    sku: ${21|Basic,Standard|}",
            "    state: ${22|present,absent|}",
            "    status: ${23|Active,Disabled,Restoring,SendDisabled,ReceiveDisabled,Creating,Deleting,Renaming,Unknown|}",
            "    subscription_id: ${24:string}",
            "    tenant: ${26:string}",
            "    thumbprint: ${27:string}",
            "    x509_certificate_path: ${28:path}",
            "$0"
        ],
        "description": "Manage Event Hub",
        "scope": "ansible"
    },
    "Get Azure Event Hub": {
        "prefix": [
            "azure.azcollection.azure_rm_eventhub_info",
            "Get Azure Event Hub"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_eventhub_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    namespace_name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure Event Hub",
        "scope": "ansible"
    },
    "Manage Express Route Circuits": {
        "prefix": [
            "azure.azcollection.azure_rm_expressroute",
            "Manage Express Route Circuits"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_expressroute:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    allow_classic_operations: ${4|false,true|}",
            "    api_profile: ${5:latest}",
            "    append_tags: ${6|true,false|}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    authorizations:",
            "      - ${8:element}",
            "    cert_validation_mode: ${9:string}",
            "    client_id: ${10:string}",
            "    cloud_environment: ${11:AzureCloud}",
            "    global_reach_enabled: ${12|false,true|}",
            "    location: ${13:string}",
            "    log_mode: ${14:string}",
            "    log_path: ${15:string}",
            "    name: ${16:string}",
            "    password: ${17:string}",
            "    profile: ${18:string}",
            "    resource_group: ${19:string}",
            "    secret: ${20:string}",
            "    state: ${23|present,absent|}",
            "    subscription_id: ${24:string}",
            "    tenant: ${26:string}",
            "    thumbprint: ${27:string}",
            "    x509_certificate_path: ${28:path}",
            "$0"
        ],
        "description": "Manage Express Route Circuits",
        "scope": "ansible"
    },
    "Get Azure Express Route": {
        "prefix": [
            "azure.azcollection.azure_rm_expressroute_info",
            "Get Azure Express Route"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_expressroute_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure Express Route",
        "scope": "ansible"
    },
    "Create, delete or update specified firewall policy.": {
        "prefix": [
            "azure.azcollection.azure_rm_firewallpolicy",
            "Create, delete or update specified firewall policy."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_firewallpolicy:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    base_policy: ${7:string}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    location: ${11:string}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    name: ${14:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    resource_group: ${17:string}",
            "    secret: ${18:string}",
            "    state: ${19|present,absent|}",
            "    subscription_id: ${20:string}",
            "    tenant: ${22:string}",
            "    threat_intel_mode: ${23|alert,deny,off|}",
            "    thumbprint: ${25:string}",
            "    x509_certificate_path: ${26:path}",
            "$0"
        ],
        "description": "Create, delete or update specified firewall policy.",
        "scope": "ansible"
    },
    "Get firewall policy facts": {
        "prefix": [
            "azure.azcollection.azure_rm_firewallpolicy_info",
            "Get firewall policy facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_firewallpolicy_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get firewall policy facts",
        "scope": "ansible"
    },
    "Manage Azure Function Apps": {
        "prefix": [
            "azure.azcollection.azure_rm_functionapp",
            "Manage Azure Function Apps"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_functionapp:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${6|true,false|}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    log_mode: ${13:string}",
            "    log_path: ${14:string}",
            "    password: ${16:string}",
            "    profile: ${18:string}",
            "    secret: ${20:string}",
            "    subscription_id: ${23:string}",
            "    tenant: ${25:string}",
            "    thumbprint: ${26:string}",
            "    x509_certificate_path: ${27:path}",
            "$0"
        ],
        "description": "Manage Azure Function Apps",
        "scope": "ansible"
    },
    "Get Azure Function App facts": {
        "prefix": [
            "azure.azcollection.azure_rm_functionapp_info",
            "Get Azure Function App facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_functionapp_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure Function App facts",
        "scope": "ansible"
    },
    "Manage Azure Shared Image Gallery instance": {
        "prefix": [
            "azure.azcollection.azure_rm_gallery",
            "Manage Azure Shared Image Gallery instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_gallery:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    description: ${10:string}",
            "    location: ${11:string}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    name: ${14:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    resource_group: ${17:string}",
            "    secret: ${18:string}",
            "    state: ${19|present,absent|}",
            "    subscription_id: ${20:string}",
            "    tenant: ${22:string}",
            "    thumbprint: ${23:string}",
            "    x509_certificate_path: ${24:path}",
            "$0"
        ],
        "description": "Manage Azure Shared Image Gallery instance",
        "scope": "ansible"
    },
    "Get Azure Shared Image Gallery info": {
        "prefix": [
            "azure.azcollection.azure_rm_gallery_info",
            "Get Azure Shared Image Gallery info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_gallery_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${19:path}",
            "$0"
        ],
        "description": "Get Azure Shared Image Gallery info",
        "scope": "ansible"
    },
    "Manage Azure SIG Image instance": {
        "prefix": [
            "azure.azcollection.azure_rm_galleryimage",
            "Manage Azure SIG Image instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_galleryimage:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    description: ${10:string}",
            "    end_of_life_date: ${12:string}",
            "    eula: ${13:string}",
            "    gallery_name: ${14:string}",
            "    hypervgeneration: ${15:string}",
            "    location: ${17:string}",
            "    log_mode: ${18:string}",
            "    log_path: ${19:string}",
            "    name: ${20:string}",
            "    os_state: ${21:string}",
            "    os_type: ${22:string}",
            "    password: ${23:string}",
            "    privacy_statement_uri: ${24:string}",
            "    profile: ${25:string}",
            "    release_note_uri: ${28:string}",
            "    resource_group: ${29:string}",
            "    secret: ${30:string}",
            "    state: ${31|present,absent|}",
            "    subscription_id: ${32:string}",
            "    tenant: ${34:string}",
            "    thumbprint: ${35:string}",
            "    x509_certificate_path: ${36:path}",
            "$0"
        ],
        "description": "Manage Azure SIG Image instance",
        "scope": "ansible"
    },
    "Get Azure SIG Image info": {
        "prefix": [
            "azure.azcollection.azure_rm_galleryimage_info",
            "Get Azure SIG Image info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_galleryimage_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    gallery_name: ${9:string}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure SIG Image info",
        "scope": "ansible"
    },
    "Manage Azure SIG Image Version instance": {
        "prefix": [
            "azure.azcollection.azure_rm_galleryimageversion",
            "Manage Azure SIG Image Version instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_galleryimageversion:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    gallery_image_name: ${10:string}",
            "    gallery_name: ${11:string}",
            "    location: ${12:string}",
            "    log_mode: ${13:string}",
            "    log_path: ${14:string}",
            "    name: ${15:string}",
            "    password: ${16:string}",
            "    profile: ${17:string}",
            "    resource_group: ${19:string}",
            "    secret: ${20:string}",
            "    state: ${21|present,absent|}",
            "    subscription_id: ${23:string}",
            "    tenant: ${25:string}",
            "    thumbprint: ${26:string}",
            "    x509_certificate_path: ${27:path}",
            "$0"
        ],
        "description": "Manage Azure SIG Image Version instance",
        "scope": "ansible"
    },
    "Get Azure SIG Image Version info": {
        "prefix": [
            "azure.azcollection.azure_rm_galleryimageversion_info",
            "Get Azure SIG Image Version info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_galleryimageversion_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    gallery_image_name: ${9:string}",
            "    gallery_name: ${10:string}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    name: ${13:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    resource_group: ${16:string}",
            "    secret: ${17:string}",
            "    subscription_id: ${18:string}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Azure SIG Image Version info",
        "scope": "ansible"
    },
    "Manage Azure HDInsight Cluster instance": {
        "prefix": [
            "azure.azcollection.azure_rm_hdinsightcluster",
            "Manage Azure HDInsight Cluster instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_hdinsightcluster:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    compute_profile_roles:",
            "      - ${12:element}",
            "    log_mode: ${14:string}",
            "    log_path: ${15:string}",
            "    password: ${18:string}",
            "    profile: ${19:string}",
            "    secret: ${21:string}",
            "    storage_accounts:",
            "      - ${23:element}",
            "    subscription_id: ${24:string}",
            "    tenant: ${26:string}",
            "    thumbprint: ${27:string}",
            "    x509_certificate_path: ${29:path}",
            "$0"
        ],
        "description": "Manage Azure HDInsight Cluster instance",
        "scope": "ansible"
    },
    "Get Azure HDInsight Cluster facts": {
        "prefix": [
            "azure.azcollection.azure_rm_hdinsightcluster_info",
            "Get Azure HDInsight Cluster facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_hdinsightcluster_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure HDInsight Cluster facts",
        "scope": "ansible"
    },
    "Create, delete and update a dedicated host group": {
        "prefix": [
            "azure.azcollection.azure_rm_hostgroup",
            "Create, delete and update a dedicated host group"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_hostgroup:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    location: ${10:string}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    name: ${13:string}",
            "    password: ${14:string}",
            "    platform_fault_domain_count: ${15:int}",
            "    profile: ${16:string}",
            "    resource_group: ${17:string}",
            "    secret: ${18:string}",
            "    state: ${19|present,absent|}",
            "    subscription_id: ${20:string}",
            "    tenant: ${22:string}",
            "    thumbprint: ${23:string}",
            "    x509_certificate_path: ${24:path}",
            "    zones:",
            "      - ${25:element}",
            "$0"
        ],
        "description": "Create, delete and update a dedicated host group",
        "scope": "ansible"
    },
    "Get host group facts": {
        "prefix": [
            "azure.azcollection.azure_rm_hostgroup_info",
            "Get host group facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_hostgroup_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get host group facts",
        "scope": "ansible"
    },
    "Manage Azure image": {
        "prefix": [
            "azure.azcollection.azure_rm_image",
            "Manage Azure image"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_image:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    data_disk_sources:",
            "      - ${10:element}",
            "    hyper_v_generation: ${11:string}",
            "    location: ${12:string}",
            "    log_mode: ${13:string}",
            "    log_path: ${14:string}",
            "    name: ${15:string}",
            "    os_type: ${16:string}",
            "    password: ${17:string}",
            "    profile: ${18:string}",
            "    resource_group: ${19:string}",
            "    secret: ${20:string}",
            "    source: ${21:\"raw\"}",
            "    state: ${22|present,absent|}",
            "    subscription_id: ${23:string}",
            "    tenant: ${25:string}",
            "    thumbprint: ${26:string}",
            "    x509_certificate_path: ${27:path}",
            "$0"
        ],
        "description": "Manage Azure image",
        "scope": "ansible"
    },
    "Get facts about azure custom images": {
        "prefix": [
            "azure.azcollection.azure_rm_image_info",
            "Get facts about azure custom images"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_image_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get facts about azure custom images",
        "scope": "ansible"
    },
    "Manage Azure IoT hub device": {
        "prefix": [
            "azure.azcollection.azure_rm_iotdevice",
            "Manage Azure IoT hub device"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_iotdevice:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_method: ${6|sas,certificate_authority,self_signed|}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    edge_enabled: ${12|false,true|}",
            "    hub: ${13:string}",
            "    hub_policy_key: ${14:string}",
            "    hub_policy_name: ${15:string}",
            "    log_mode: ${16:string}",
            "    log_path: ${17:string}",
            "    name: ${18:string}",
            "    password: ${19:string}",
            "    primary_key: ${20:string}",
            "    profile: ${21:string}",
            "    secondary_key: ${22:string}",
            "    secret: ${23:string}",
            "    state: ${24|present,absent|}",
            "    status: ${25|false,true|}",
            "    subscription_id: ${26:string}",
            "    tenant: ${28:string}",
            "    thumbprint: ${29:string}",
            "    x509_certificate_path: ${31:path}",
            "$0"
        ],
        "description": "Manage Azure IoT hub device",
        "scope": "ansible"
    },
    "Facts of Azure IoT hub device": {
        "prefix": [
            "azure.azcollection.azure_rm_iotdevice_info",
            "Facts of Azure IoT hub device"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_iotdevice_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    hub: ${10:string}",
            "    hub_policy_key: ${11:string}",
            "    hub_policy_name: ${12:string}",
            "    log_mode: ${13:string}",
            "    log_path: ${14:string}",
            "    module_id: ${15:string}",
            "    name: ${16:string}",
            "    password: ${17:string}",
            "    profile: ${18:string}",
            "    query: ${19:string}",
            "    secret: ${20:string}",
            "    subscription_id: ${21:string}",
            "    tenant: ${23:string}",
            "    thumbprint: ${24:string}",
            "    top: ${25:int}",
            "    x509_certificate_path: ${26:path}",
            "$0"
        ],
        "description": "Facts of Azure IoT hub device",
        "scope": "ansible"
    },
    "Manage Azure IoT hub device module": {
        "prefix": [
            "azure.azcollection.azure_rm_iotdevicemodule",
            "Manage Azure IoT hub device module"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_iotdevicemodule:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_method: ${6|sas,certificate_authority,self_signed|}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    device: ${12:string}",
            "    hub: ${13:string}",
            "    hub_policy_key: ${14:string}",
            "    hub_policy_name: ${15:string}",
            "    log_mode: ${16:string}",
            "    log_path: ${17:string}",
            "    name: ${18:string}",
            "    password: ${19:string}",
            "    primary_key: ${20:string}",
            "    profile: ${21:string}",
            "    secondary_key: ${22:string}",
            "    secret: ${23:string}",
            "    state: ${24|present,absent|}",
            "    subscription_id: ${25:string}",
            "    tenant: ${27:string}",
            "    thumbprint: ${28:string}",
            "    x509_certificate_path: ${30:path}",
            "$0"
        ],
        "description": "Manage Azure IoT hub device module",
        "scope": "ansible"
    },
    "Manage Azure IoT hub": {
        "prefix": [
            "azure.azcollection.azure_rm_iothubconsumergroup",
            "Manage Azure IoT hub"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_iothubconsumergroup:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    event_hub: ${10:events}",
            "    hub: ${11:string}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    name: ${14:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    resource_group: ${17:string}",
            "    secret: ${18:string}",
            "    state: ${19|present,absent|}",
            "    subscription_id: ${20:string}",
            "    tenant: ${22:string}",
            "    thumbprint: ${23:string}",
            "    x509_certificate_path: ${24:path}",
            "$0"
        ],
        "description": "Manage Azure IoT hub",
        "scope": "ansible"
    },
    "Get IoT Hub facts": {
        "prefix": [
            "azure.azcollection.azure_rm_iothub_info",
            "Get IoT Hub facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_iothub_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    list_consumer_groups: ${9|false,true|}",
            "    list_keys: ${10|false,true|}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    name: ${13:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    resource_group: ${16:string}",
            "    secret: ${17:string}",
            "    show_endpoint_health: ${18|false,true|}",
            "    show_quota_metrics: ${19|false,true|}",
            "    show_stats: ${20|false,true|}",
            "    subscription_id: ${21:string}",
            "    tags:",
            "      - ${22:element}",
            "    tenant: ${23:string}",
            "    test_route_message: ${24:string}",
            "    thumbprint: ${25:string}",
            "    x509_certificate_path: ${26:path}",
            "$0"
        ],
        "description": "Get IoT Hub facts",
        "scope": "ansible"
    },
    "Create, delete and update IP group": {
        "prefix": [
            "azure.azcollection.azure_rm_ipgroup",
            "Create, delete and update IP group"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_ipgroup:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    ip_addresses:",
            "      - ${10:element}",
            "    location: ${11:string}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    name: ${14:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    resource_group: ${17:string}",
            "    secret: ${18:string}",
            "    state: ${19|present,absent|}",
            "    subscription_id: ${20:string}",
            "    tenant: ${22:string}",
            "    thumbprint: ${23:string}",
            "    x509_certificate_path: ${24:path}",
            "$0"
        ],
        "description": "Create, delete and update IP group",
        "scope": "ansible"
    },
    "Get IP group facts": {
        "prefix": [
            "azure.azcollection.azure_rm_ipgroup_info",
            "Get IP group facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_ipgroup_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get IP group facts",
        "scope": "ansible"
    },
    "Manage Key Vault instance": {
        "prefix": [
            "azure.azcollection.azure_rm_keyvault",
            "Manage Key Vault instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_keyvault:",
            "    ad_user: ${3:string}",
            "    adfs_authority_url: ${4:string}",
            "    api_profile: ${5:latest}",
            "    append_tags: ${6|true,false|}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    enable_purge_protection: ${11|false,true|}",
            "    enable_soft_delete: ${12|true,false|}",
            "    enabled_for_deployment: ${13|false,true|}",
            "    enabled_for_disk_encryption: ${14|false,true|}",
            "    enabled_for_template_deployment: ${15|false,true|}",
            "    log_mode: ${17:string}",
            "    log_path: ${18:string}",
            "    password: ${19:string}",
            "    profile: ${20:string}",
            "    recover_mode: ${21|false,true|}",
            "    secret: ${23:string}",
            "    soft_delete_retention_in_days: ${25:int}",
            "    subscription_id: ${27:string}",
            "    tenant: ${29:string}",
            "    thumbprint: ${30:string}",
            "    x509_certificate_path: ${33:path}",
            "$0"
        ],
        "description": "Manage Key Vault instance",
        "scope": "ansible"
    },
    "Get Azure Key Vault facts": {
        "prefix": [
            "azure.azcollection.azure_rm_keyvault_info",
            "Get Azure Key Vault facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_keyvault_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure Key Vault facts",
        "scope": "ansible"
    },
    "Use Azure KeyVault keys": {
        "prefix": [
            "azure.azcollection.azure_rm_keyvaultkey",
            "Use Azure KeyVault keys"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_keyvaultkey:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    log_mode: ${17:string}",
            "    log_path: ${18:string}",
            "    password: ${19:string}",
            "    profile: ${22:string}",
            "    secret: ${23:string}",
            "    subscription_id: ${25:string}",
            "    tenant: ${27:string}",
            "    thumbprint: ${28:string}",
            "    x509_certificate_path: ${29:path}",
            "$0"
        ],
        "description": "Use Azure KeyVault keys",
        "scope": "ansible"
    },
    "Get Azure Key Vault key facts": {
        "prefix": [
            "azure.azcollection.azure_rm_keyvaultkey_info",
            "Get Azure Key Vault key facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_keyvaultkey_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${14:string}",
            "    show_deleted_key: ${15|false,true|}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    vault_uri: ${20:string}",
            "    version: ${21:current}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Get Azure Key Vault key facts",
        "scope": "ansible"
    },
    "Use Azure KeyVault Secrets": {
        "prefix": [
            "azure.azcollection.azure_rm_keyvaultsecret",
            "Use Azure KeyVault Secrets"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_keyvaultsecret:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    content_type: ${10:string}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    secret: ${16:string}",
            "    secret_expiry: ${17:string}",
            "    secret_valid_from: ${19:string}",
            "    subscription_id: ${22:string}",
            "    tenant: ${24:string}",
            "    thumbprint: ${25:string}",
            "    x509_certificate_path: ${26:path}",
            "$0"
        ],
        "description": "Use Azure KeyVault Secrets",
        "scope": "ansible"
    },
    "Get Azure Key Vault secret facts": {
        "prefix": [
            "azure.azcollection.azure_rm_keyvaultsecret_info",
            "Get Azure Key Vault secret facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_keyvaultsecret_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${14:string}",
            "    show_deleted_secret: ${15|false,true|}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    vault_uri: ${20:string}",
            "    version: ${21:current}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Get Azure Key Vault secret facts",
        "scope": "ansible"
    },
    "Manage Azure load balancers": {
        "prefix": [
            "azure.azcollection.azure_rm_loadbalancer",
            "Manage Azure load balancers"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_loadbalancer:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${9:string}",
            "    client_id: ${10:string}",
            "    cloud_environment: ${11:AzureCloud}",
            "    log_mode: ${20:string}",
            "    log_path: ${21:string}",
            "    password: ${27:string}",
            "    profile: ${34:string}",
            "    secret: ${38:string}",
            "    subscription_id: ${41:string}",
            "    tenant: ${43:string}",
            "    thumbprint: ${44:string}",
            "    x509_certificate_path: ${45:path}",
            "$0"
        ],
        "description": "Manage Azure load balancers",
        "scope": "ansible"
    },
    "Get load balancer facts": {
        "prefix": [
            "azure.azcollection.azure_rm_loadbalancer_info",
            "Get load balancer facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_loadbalancer_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get load balancer facts",
        "scope": "ansible"
    },
    "Manage Azure locks": {
        "prefix": [
            "azure.azcollection.azure_rm_lock_info",
            "Manage Azure locks"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_lock_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    managed_resource_id: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Manage Azure locks",
        "scope": "ansible"
    },
    "Manage Azure Log Analytics workspaces": {
        "prefix": [
            "azure.azcollection.azure_rm_loganalyticsworkspace",
            "Manage Azure Log Analytics workspaces"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_loganalyticsworkspace:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    force: ${10|false,true|}",
            "    log_mode: ${13:string}",
            "    log_path: ${14:string}",
            "    password: ${16:string}",
            "    profile: ${17:string}",
            "    secret: ${20:string}",
            "    subscription_id: ${23:string}",
            "    tenant: ${25:string}",
            "    thumbprint: ${26:string}",
            "    x509_certificate_path: ${27:path}",
            "$0"
        ],
        "description": "Manage Azure Log Analytics workspaces",
        "scope": "ansible"
    },
    "Get facts of Azure Log Analytics workspaces": {
        "prefix": [
            "azure.azcollection.azure_rm_loganalyticsworkspace_info",
            "Get facts of Azure Log Analytics workspaces"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_loganalyticsworkspace_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${20:string}",
            "    tags:",
            "      - ${21:element}",
            "    tenant: ${22:string}",
            "    thumbprint: ${23:string}",
            "    x509_certificate_path: ${24:path}",
            "$0"
        ],
        "description": "Get facts of Azure Log Analytics workspaces",
        "scope": "ansible"
    },
    "Manage Azure Manage Disks": {
        "prefix": [
            "azure.azcollection.azure_rm_manageddisk",
            "Manage Azure Manage Disks"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_manageddisk:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    log_mode: ${14:string}",
            "    log_path: ${15:string}",
            "    lun: ${16:int}",
            "    managed_by_extended:",
            "      - ${18:element}",
            "    max_shares: ${19:int}",
            "    password: ${22:string}",
            "    profile: ${23:string}",
            "    secret: ${25:string}",
            "    storage_account_id: ${28:string}",
            "    subscription_id: ${30:string}",
            "    tenant: ${32:string}",
            "    thumbprint: ${33:string}",
            "    x509_certificate_path: ${34:path}",
            "$0"
        ],
        "description": "Manage Azure Manage Disks",
        "scope": "ansible"
    },
    "Get managed disk facts": {
        "prefix": [
            "azure.azcollection.azure_rm_manageddisk_info",
            "Get managed disk facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_manageddisk_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    managed_by: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tags:",
            "      - ${18:element}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get managed disk facts",
        "scope": "ansible"
    },
    "Manage Azure ManagementGroup instance": {
        "prefix": [
            "azure.azcollection.azure_rm_managementgroup",
            "Manage Azure ManagementGroup instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_managementgroup:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    group_id: ${10:string}",
            "    id: ${11:string}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    name: ${14:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    secret: ${18:string}",
            "    state: ${19|present,absent|}",
            "    subscription_id: ${20:string}",
            "    tenant: ${22:string}",
            "    thumbprint: ${23:string}",
            "    type: ${24:string}",
            "    x509_certificate_path: ${25:path}",
            "$0"
        ],
        "description": "Manage Azure ManagementGroup instance",
        "scope": "ansible"
    },
    "Get Azure Management Group facts": {
        "prefix": [
            "azure.azcollection.azure_rm_managementgroup_info",
            "Get Azure Management Group facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_managementgroup_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    children: ${7|false,true|}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    flatten: ${10|false,true|}",
            "    id: ${11:string}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    name: ${14:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    recurse: ${17|false,true|}",
            "    secret: ${18:string}",
            "    subscription_id: ${19:string}",
            "    tenant: ${20:string}",
            "    thumbprint: ${21:string}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Get Azure Management Group facts",
        "scope": "ansible"
    },
    "Manage Configuration instance": {
        "prefix": [
            "azure.azcollection.azure_rm_mysqlconfiguration",
            "Manage Configuration instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_mysqlconfiguration:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${18:string}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Manage Configuration instance",
        "scope": "ansible"
    },
    "Get Azure MariaDB Configuration facts": {
        "prefix": [
            "azure.azcollection.azure_rm_mariadbconfiguration_info",
            "Get Azure MariaDB Configuration facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_mariadbconfiguration_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    server_name: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure MariaDB Configuration facts",
        "scope": "ansible"
    },
    "Manage MariaDB Database instance": {
        "prefix": [
            "azure.azcollection.azure_rm_mariadbdatabase",
            "Manage MariaDB Database instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_mariadbdatabase:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    force_update: ${11|true,false|}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    secret: ${18:string}",
            "    subscription_id: ${21:string}",
            "    tenant: ${22:string}",
            "    thumbprint: ${23:string}",
            "    x509_certificate_path: ${24:path}",
            "$0"
        ],
        "description": "Manage MariaDB Database instance",
        "scope": "ansible"
    },
    "Get Azure MariaDB Database facts": {
        "prefix": [
            "azure.azcollection.azure_rm_mariadbdatabase_info",
            "Get Azure MariaDB Database facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_mariadbdatabase_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    server_name: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure MariaDB Database facts",
        "scope": "ansible"
    },
    "Manage MariaDB firewall rule instance": {
        "prefix": [
            "azure.azcollection.azure_rm_mariadbfirewallrule",
            "Manage MariaDB firewall rule instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_mariadbfirewallrule:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${20:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Manage MariaDB firewall rule instance",
        "scope": "ansible"
    },
    "Get Azure MariaDB Firewall Rule facts": {
        "prefix": [
            "azure.azcollection.azure_rm_mariadbfirewallrule_info",
            "Get Azure MariaDB Firewall Rule facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_mariadbfirewallrule_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    server_name: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure MariaDB Firewall Rule facts",
        "scope": "ansible"
    },
    "Manage MariaDB Server instance": {
        "prefix": [
            "azure.azcollection.azure_rm_mariadbserver",
            "Manage MariaDB Server instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_mariadbserver:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${6:latest}",
            "    append_tags: ${7|true,false|}",
            "    auth_source: ${8|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${9:string}",
            "    client_id: ${10:string}",
            "    cloud_environment: ${11:AzureCloud}",
            "    enforce_ssl: ${13|false,true|}",
            "    log_mode: ${15:string}",
            "    log_path: ${16:string}",
            "    password: ${18:string}",
            "    profile: ${19:string}",
            "    secret: ${21:string}",
            "    storage_mb: ${24:int}",
            "    subscription_id: ${25:string}",
            "    tenant: ${27:string}",
            "    thumbprint: ${28:string}",
            "    x509_certificate_path: ${30:path}",
            "$0"
        ],
        "description": "Manage MariaDB Server instance",
        "scope": "ansible"
    },
    "Get Azure MariaDB Server facts": {
        "prefix": [
            "azure.azcollection.azure_rm_mariadbserver_info",
            "Get Azure MariaDB Server facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_mariadbserver_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure MariaDB Server facts",
        "scope": "ansible"
    },
    "Create, update, or manage Azure Monitor diagnostic settings.": {
        "prefix": [
            "azure.azcollection.azure_rm_monitordiagnosticsetting",
            "Create, update, or manage Azure Monitor diagnostic settings."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_monitordiagnosticsetting:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_analytics: ${10:\"raw\"}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    logs:",
            "      - ${13:element}",
            "    metrics:",
            "      - ${14:element}",
            "    name: ${15:string}",
            "    password: ${16:string}",
            "    profile: ${17:string}",
            "    resource: ${18:\"raw\"}",
            "    secret: ${19:string}",
            "    state: ${20|present,absent|}",
            "    storage_account: ${21:\"raw\"}",
            "    subscription_id: ${22:string}",
            "    tenant: ${23:string}",
            "    thumbprint: ${24:string}",
            "    x509_certificate_path: ${25:path}",
            "$0"
        ],
        "description": "Create, update, or manage Azure Monitor diagnostic settings.",
        "scope": "ansible"
    },
    "Get Azure Monitor diagnostic setting facts.": {
        "prefix": [
            "azure.azcollection.azure_rm_monitordiagnosticsetting_info",
            "Get Azure Monitor diagnostic setting facts."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_monitordiagnosticsetting_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource: ${14:\"raw\"}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${19:path}",
            "$0"
        ],
        "description": "Get Azure Monitor diagnostic setting facts.",
        "scope": "ansible"
    },
    "Manage Azure Monitor log profile": {
        "prefix": [
            "azure.azcollection.azure_rm_monitorlogprofile",
            "Manage Azure Monitor log profile"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_monitorlogprofile:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    categories:",
            "      - ${7:element}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    location: ${11:string}",
            "    locations:",
            "      - ${12:element}",
            "    log_mode: ${13:string}",
            "    log_path: ${14:string}",
            "    name: ${15:string}",
            "    password: ${16:string}",
            "    profile: ${17:string}",
            "    secret: ${19:string}",
            "    service_bus_rule_id: ${20:string}",
            "    state: ${21|present,absent|}",
            "    storage_account: ${22:\"raw\"}",
            "    subscription_id: ${23:string}",
            "    tenant: ${25:string}",
            "    thumbprint: ${26:string}",
            "    x509_certificate_path: ${27:path}",
            "$0"
        ],
        "description": "Manage Azure Monitor log profile",
        "scope": "ansible"
    },
    "Get Azure MySQL Configuration facts": {
        "prefix": [
            "azure.azcollection.azure_rm_mysqlconfiguration_info",
            "Get Azure MySQL Configuration facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_mysqlconfiguration_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    server_name: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure MySQL Configuration facts",
        "scope": "ansible"
    },
    "Manage MySQL Database instance": {
        "prefix": [
            "azure.azcollection.azure_rm_mysqldatabase",
            "Manage MySQL Database instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_mysqldatabase:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    force_update: ${11|true,false|}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    secret: ${18:string}",
            "    subscription_id: ${21:string}",
            "    tenant: ${22:string}",
            "    thumbprint: ${23:string}",
            "    x509_certificate_path: ${24:path}",
            "$0"
        ],
        "description": "Manage MySQL Database instance",
        "scope": "ansible"
    },
    "Get Azure MySQL Database facts": {
        "prefix": [
            "azure.azcollection.azure_rm_mysqldatabase_info",
            "Get Azure MySQL Database facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_mysqldatabase_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    server_name: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure MySQL Database facts",
        "scope": "ansible"
    },
    "Manage MySQL firewall rule instance": {
        "prefix": [
            "azure.azcollection.azure_rm_mysqlfirewallrule",
            "Manage MySQL firewall rule instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_mysqlfirewallrule:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${20:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Manage MySQL firewall rule instance",
        "scope": "ansible"
    },
    "Get Azure MySQL Firewall Rule facts": {
        "prefix": [
            "azure.azcollection.azure_rm_mysqlfirewallrule_info",
            "Get Azure MySQL Firewall Rule facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_mysqlfirewallrule_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    server_name: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure MySQL Firewall Rule facts",
        "scope": "ansible"
    },
    "Manage MySQL Server instance": {
        "prefix": [
            "azure.azcollection.azure_rm_mysqlserver",
            "Manage MySQL Server instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_mysqlserver:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    admin_password: ${4:string}",
            "    admin_username: ${5:string}",
            "    api_profile: ${6:latest}",
            "    append_tags: ${7|true,false|}",
            "    auth_source: ${8|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${9:string}",
            "    client_id: ${10:string}",
            "    cloud_environment: ${11:AzureCloud}",
            "    create_mode: ${12:Default}",
            "    enforce_ssl: ${13|false,true|}",
            "    location: ${14:string}",
            "    log_mode: ${15:string}",
            "    log_path: ${16:string}",
            "    name: ${17:string}",
            "    password: ${18:string}",
            "    profile: ${19:string}",
            "    resource_group: ${20:string}",
            "    restarted: ${21|false,true|}",
            "    secret: ${22:string}",
            "    state: ${24|present,absent|}",
            "    subscription_id: ${26:string}",
            "    tenant: ${28:string}",
            "    thumbprint: ${29:string}",
            "    version: ${30:string}",
            "    x509_certificate_path: ${31:path}",
            "$0"
        ],
        "description": "Manage MySQL Server instance",
        "scope": "ansible"
    },
    "Get Azure MySQL Server facts": {
        "prefix": [
            "azure.azcollection.azure_rm_mysqlserver_info",
            "Get Azure MySQL Server facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_mysqlserver_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure MySQL Server facts",
        "scope": "ansible"
    },
    "Manage Azure NAT Gateway instance": {
        "prefix": [
            "azure.azcollection.azure_rm_natgateway",
            "Manage Azure NAT Gateway instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_natgateway:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    idle_timeout_in_minutes: ${10:4}",
            "    location: ${11:string}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    name: ${14:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    public_ip_addresses:",
            "      - ${17:element}",
            "    resource_group: ${18:string}",
            "    secret: ${19:string}",
            "    state: ${21|present,absent|}",
            "    subscription_id: ${22:string}",
            "    tenant: ${24:string}",
            "    thumbprint: ${25:string}",
            "    x509_certificate_path: ${26:path}",
            "    zones:",
            "      - ${27:element}",
            "$0"
        ],
        "description": "Manage Azure NAT Gateway instance",
        "scope": "ansible"
    },
    "Retrieve NAT Gateway instance facts": {
        "prefix": [
            "azure.azcollection.azure_rm_natgateway_info",
            "Retrieve NAT Gateway instance facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_natgateway_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${19:path}",
            "$0"
        ],
        "description": "Retrieve NAT Gateway instance facts",
        "scope": "ansible"
    },
    "Manage Azure network interfaces": {
        "prefix": [
            "azure.azcollection.azure_rm_networkinterface",
            "Manage Azure network interfaces"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_networkinterface:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    create_with_security_group: ${10|true,false|}",
            "    dns_servers:",
            "      - ${11:element}",
            "    enable_accelerated_networking: ${12|false,true|}",
            "    enable_ip_forwarding: ${13|false,true|}",
            "    log_mode: ${16:string}",
            "    log_path: ${17:string}",
            "    password: ${21:string}",
            "    profile: ${24:string}",
            "    public_ip: ${25|true,false|}",
            "    secret: ${29:string}",
            "    subscription_id: ${33:string}",
            "    tenant: ${35:string}",
            "    thumbprint: ${36:string}",
            "    x509_certificate_path: ${38:path}",
            "$0"
        ],
        "description": "Manage Azure network interfaces",
        "scope": "ansible"
    },
    "Get network interface facts": {
        "prefix": [
            "azure.azcollection.azure_rm_networkinterface_info",
            "Get network interface facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_networkinterface_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get network interface facts",
        "scope": "ansible"
    },
    "Manage Notification Hub": {
        "prefix": [
            "azure.azcollection.azure_rm_notificationhub",
            "Manage Notification Hub"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_notificationhub:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    location: ${10:string}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    name: ${13:string}",
            "    namespace_name: ${14:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    resource_group: ${17:string}",
            "    secret: ${18:string}",
            "    sku: ${19|free,basic,standard|}",
            "    state: ${20|present,absent|}",
            "    subscription_id: ${21:string}",
            "    tenant: ${23:string}",
            "    thumbprint: ${24:string}",
            "    x509_certificate_path: ${25:path}",
            "$0"
        ],
        "description": "Manage Notification Hub",
        "scope": "ansible"
    },
    "Get Azure Notification Hub": {
        "prefix": [
            "azure.azcollection.azure_rm_notificationhub_info",
            "Get Azure Notification Hub"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_notificationhub_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    namespace_name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure Notification Hub",
        "scope": "ansible"
    },
    "Manage Azure Red Hat OpenShift Managed Cluster instance": {
        "prefix": [
            "azure.azcollection.azure_rm_openshiftmanagedcluster",
            "Manage Azure Red Hat OpenShift Managed Cluster instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_openshiftmanagedcluster:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${6|true,false|}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    ingress_profiles:",
            "      - ${12:element}",
            "    location: ${13:string}",
            "    log_mode: ${14:string}",
            "    log_path: ${15:string}",
            "    name: ${17:string}",
            "    password: ${19:string}",
            "    profile: ${20:string}",
            "    provisioning_state: ${21:string}",
            "    resource_group: ${22:string}",
            "    secret: ${23:string}",
            "    state: ${25|present,absent|}",
            "    subscription_id: ${26:string}",
            "    tenant: ${28:string}",
            "    thumbprint: ${29:string}",
            "    worker_profiles:",
            "      - ${30:element}",
            "    x509_certificate_path: ${31:path}",
            "$0"
        ],
        "description": "Manage Azure Red Hat OpenShift Managed Cluster instance",
        "scope": "ansible"
    },
    "Get Info onf Azure Red Hat OpenShift Managed Cluster": {
        "prefix": [
            "azure.azcollection.azure_rm_openshiftmanagedcluster_info",
            "Get Info onf Azure Red Hat OpenShift Managed Cluster"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_openshiftmanagedcluster_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${19:path}",
            "$0"
        ],
        "description": "Get Info onf Azure Red Hat OpenShift Managed Cluster",
        "scope": "ansible"
    },
    "Manage Azure PostgreSQL Configuration": {
        "prefix": [
            "azure.azcollection.azure_rm_postgresqlconfiguration",
            "Manage Azure PostgreSQL Configuration"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_postgresqlconfiguration:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${18:string}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Manage Azure PostgreSQL Configuration",
        "scope": "ansible"
    },
    "Get Azure PostgreSQL Configuration facts": {
        "prefix": [
            "azure.azcollection.azure_rm_postgresqlconfiguration_info",
            "Get Azure PostgreSQL Configuration facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_postgresqlconfiguration_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    server_name: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure PostgreSQL Configuration facts",
        "scope": "ansible"
    },
    "Manage PostgreSQL Database instance": {
        "prefix": [
            "azure.azcollection.azure_rm_postgresqldatabase",
            "Manage PostgreSQL Database instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_postgresqldatabase:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    force_update: ${11|true,false|}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    secret: ${18:string}",
            "    subscription_id: ${21:string}",
            "    tenant: ${22:string}",
            "    thumbprint: ${23:string}",
            "    x509_certificate_path: ${24:path}",
            "$0"
        ],
        "description": "Manage PostgreSQL Database instance",
        "scope": "ansible"
    },
    "Get Azure PostgreSQL Database facts": {
        "prefix": [
            "azure.azcollection.azure_rm_postgresqldatabase_info",
            "Get Azure PostgreSQL Database facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_postgresqldatabase_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    server_name: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure PostgreSQL Database facts",
        "scope": "ansible"
    },
    "Manage PostgreSQL firewall rule instance": {
        "prefix": [
            "azure.azcollection.azure_rm_postgresqlfirewallrule",
            "Manage PostgreSQL firewall rule instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_postgresqlfirewallrule:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${20:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Manage PostgreSQL firewall rule instance",
        "scope": "ansible"
    },
    "Get Azure PostgreSQL Firewall Rule facts": {
        "prefix": [
            "azure.azcollection.azure_rm_postgresqlfirewallrule_info",
            "Get Azure PostgreSQL Firewall Rule facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_postgresqlfirewallrule_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    server_name: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure PostgreSQL Firewall Rule facts",
        "scope": "ansible"
    },
    "Manage PostgreSQL Server instance": {
        "prefix": [
            "azure.azcollection.azure_rm_postgresqlserver",
            "Manage PostgreSQL Server instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_postgresqlserver:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    admin_password: ${4:string}",
            "    admin_username: ${5:string}",
            "    api_profile: ${6:latest}",
            "    append_tags: ${7|true,false|}",
            "    auth_source: ${8|auto,cli,credential_file,env,msi|}",
            "    backup_retention_days: ${9:int}",
            "    cert_validation_mode: ${10:string}",
            "    client_id: ${11:string}",
            "    cloud_environment: ${12:AzureCloud}",
            "    create_mode: ${13|default,geo_restore,point_in_time_restore|}",
            "    enforce_ssl: ${14|false,true|}",
            "    geo_redundant_backup: ${15|false,true|}",
            "    location: ${16:string}",
            "    log_mode: ${17:string}",
            "    log_path: ${18:string}",
            "    name: ${19:string}",
            "    password: ${20:string}",
            "    profile: ${21:string}",
            "    resource_group: ${22:string}",
            "    restore_point_in_time: ${23:string}",
            "    secret: ${24:string}",
            "    source_server_id: ${26:string}",
            "    state: ${27|present,absent|}",
            "    storage_autogrow: ${28|false,true|}",
            "    storage_mb: ${29:int}",
            "    subscription_id: ${30:string}",
            "    tenant: ${32:string}",
            "    thumbprint: ${33:string}",
            "    version: ${34:string}",
            "    x509_certificate_path: ${35:path}",
            "$0"
        ],
        "description": "Manage PostgreSQL Server instance",
        "scope": "ansible"
    },
    "Get Azure PostgreSQL Server facts": {
        "prefix": [
            "azure.azcollection.azure_rm_postgresqlserver_info",
            "Get Azure PostgreSQL Server facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_postgresqlserver_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure PostgreSQL Server facts",
        "scope": "ansible"
    },
    "Create, delete and update Private DNS record sets and records": {
        "prefix": [
            "azure.azcollection.azure_rm_privatednsrecordset",
            "Create, delete and update Private DNS record sets and records"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_privatednsrecordset:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    record_mode: ${14|purge,append|}",
            "    record_type: ${15:string}",
            "    records:",
            "      - ${16:element}",
            "    relative_name: ${17:string}",
            "    resource_group: ${18:string}",
            "    secret: ${19:string}",
            "    state: ${20|present,absent|}",
            "    subscription_id: ${21:string}",
            "    tenant: ${23:string}",
            "    thumbprint: ${24:string}",
            "    time_to_live: ${25:3600}",
            "    x509_certificate_path: ${26:path}",
            "    zone_name: ${27:string}",
            "$0"
        ],
        "description": "Create, delete and update Private DNS record sets and records",
        "scope": "ansible"
    },
    "Get Private DNS Record Set facts": {
        "prefix": [
            "azure.azcollection.azure_rm_privatednsrecordset_info",
            "Get Private DNS Record Set facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_privatednsrecordset_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    record_type: ${14:string}",
            "    relative_name: ${15:string}",
            "    resource_group: ${16:string}",
            "    secret: ${17:string}",
            "    subscription_id: ${18:string}",
            "    tenant: ${20:string}",
            "    thumbprint: ${21:string}",
            "    top: ${22:int}",
            "    x509_certificate_path: ${23:path}",
            "    zone_name: ${24:string}",
            "$0"
        ],
        "description": "Get Private DNS Record Set facts",
        "scope": "ansible"
    },
    "Manage Azure private DNS zones": {
        "prefix": [
            "azure.azcollection.azure_rm_privatednszone",
            "Manage Azure private DNS zones"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_privatednszone:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    state: ${17|present,absent|}",
            "    subscription_id: ${18:string}",
            "    tenant: ${20:string}",
            "    thumbprint: ${21:string}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Manage Azure private DNS zones",
        "scope": "ansible"
    },
    "Get private DNS zone facts": {
        "prefix": [
            "azure.azcollection.azure_rm_privatednszone_info",
            "Get private DNS zone facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_privatednszone_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get private DNS zone facts",
        "scope": "ansible"
    },
    "Create, delete and update Virtual network link for Private DNS zone": {
        "prefix": [
            "azure.azcollection.azure_rm_privatednszonelink",
            "Create, delete and update Virtual network link for Private DNS zone"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_privatednszonelink:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    registration_enabled: ${15|false,true|}",
            "    resource_group: ${16:string}",
            "    secret: ${17:string}",
            "    state: ${18|present,absent|}",
            "    subscription_id: ${19:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    virtual_network: ${23:string}",
            "    x509_certificate_path: ${24:path}",
            "    zone_name: ${25:string}",
            "$0"
        ],
        "description": "Create, delete and update Virtual network link for Private DNS zone",
        "scope": "ansible"
    },
    "Get Virtual Network link facts for private DNS zone": {
        "prefix": [
            "azure.azcollection.azure_rm_privatednszonelink_info",
            "Get Virtual Network link facts for private DNS zone"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_privatednszonelink_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "    zone_name: ${21:string}",
            "$0"
        ],
        "description": "Get Virtual Network link facts for private DNS zone",
        "scope": "ansible"
    },
    "Manage Azure private endpoint": {
        "prefix": [
            "azure.azcollection.azure_rm_privateendpoint",
            "Manage Azure private endpoint"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_privateendpoint:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    location: ${10:string}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    name: ${13:string}",
            "    password: ${14:string}",
            "    private_link_service_connections:",
            "      - ${15:element}",
            "    profile: ${16:string}",
            "    resource_group: ${17:string}",
            "    secret: ${18:string}",
            "    state: ${19|present,absent|}",
            "    subscription_id: ${21:string}",
            "    tenant: ${23:string}",
            "    thumbprint: ${24:string}",
            "    x509_certificate_path: ${25:path}",
            "$0"
        ],
        "description": "Manage Azure private endpoint",
        "scope": "ansible"
    },
    "Get private endpoints info": {
        "prefix": [
            "azure.azcollection.azure_rm_privateendpoint_info",
            "Get private endpoints info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_privateendpoint_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get private endpoints info",
        "scope": "ansible"
    },
    "Managed private endpoint connection": {
        "prefix": [
            "azure.azcollection.azure_rm_privateendpointconnection",
            "Managed private endpoint connection"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_privateendpointconnection:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    service_name: ${17:string}",
            "    state: ${18|present,absent|}",
            "    subscription_id: ${19:string}",
            "    tenant: ${20:string}",
            "    thumbprint: ${21:string}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Managed private endpoint connection",
        "scope": "ansible"
    },
    "Get private endpoint connection info": {
        "prefix": [
            "azure.azcollection.azure_rm_privatelinkservice_info",
            "Get private endpoint connection info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_privatelinkservice_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get private endpoint connection info",
        "scope": "ansible"
    },
    "Create, update, or manage private endpoint DNS zone groups.": {
        "prefix": [
            "azure.azcollection.azure_rm_privateendpointdnszonegroup",
            "Create, update, or manage private endpoint DNS zone groups."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_privateendpointdnszonegroup:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    private_dns_zone_configs:",
            "      - ${13:element}",
            "    private_endpoint: ${14:string}",
            "    profile: ${15:string}",
            "    resource_group: ${16:string}",
            "    secret: ${17:string}",
            "    state: ${18|present,absent|}",
            "    subscription_id: ${19:string}",
            "    tenant: ${20:string}",
            "    thumbprint: ${21:string}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Create, update, or manage private endpoint DNS zone groups.",
        "scope": "ansible"
    },
    "Get private endpoint DNS zone group info.": {
        "prefix": [
            "azure.azcollection.azure_rm_privateendpointdnszonegroup_info",
            "Get private endpoint DNS zone group info."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_privateendpointdnszonegroup_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    private_endpoint: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get private endpoint DNS zone group info.",
        "scope": "ansible"
    },
    "Managed private link service resource": {
        "prefix": [
            "azure.azcollection.azure_rm_privatelinkservice",
            "Managed private link service resource"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_privatelinkservice:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    enable_proxy_protocol: ${11|false,true|}",
            "    fqdns:",
            "      - ${12:element}",
            "    ip_configurations:",
            "      - ${13:element}",
            "    load_balancer_frontend_ip_configurations:",
            "      - ${14:element}",
            "    location: ${15:string}",
            "    log_mode: ${16:string}",
            "    log_path: ${17:string}",
            "    name: ${18:string}",
            "    password: ${19:string}",
            "    profile: ${20:string}",
            "    resource_group: ${21:string}",
            "    secret: ${22:string}",
            "    state: ${23|present,absent|}",
            "    subscription_id: ${24:string}",
            "    tenant: ${26:string}",
            "    thumbprint: ${27:string}",
            "    x509_certificate_path: ${29:path}",
            "$0"
        ],
        "description": "Managed private link service resource",
        "scope": "ansible"
    },
    "Create, delete and update proximity placement group": {
        "prefix": [
            "azure.azcollection.azure_rm_proximityplacementgroup",
            "Create, delete and update proximity placement group"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_proximityplacementgroup:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    location: ${10:string}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    name: ${13:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    resource_group: ${16:string}",
            "    secret: ${17:string}",
            "    state: ${18|present,absent|}",
            "    subscription_id: ${19:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Create, delete and update proximity placement group",
        "scope": "ansible"
    },
    "Get proximity placement group facts": {
        "prefix": [
            "azure.azcollection.azure_rm_proximityplacementgroup_info",
            "Get proximity placement group facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_proximityplacementgroup_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get proximity placement group facts",
        "scope": "ansible"
    },
    "Manage Azure Public IP Addresses": {
        "prefix": [
            "azure.azcollection.azure_rm_publicipaddress",
            "Manage Azure Public IP Addresses"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_publicipaddress:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${5:latest}",
            "    append_tags: ${6|true,false|}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    idle_timeout: ${12:int}",
            "    log_mode: ${15:string}",
            "    log_path: ${16:string}",
            "    password: ${18:string}",
            "    profile: ${19:string}",
            "    secret: ${21:string}",
            "    subscription_id: ${24:string}",
            "    tenant: ${26:string}",
            "    thumbprint: ${27:string}",
            "    x509_certificate_path: ${29:path}",
            "    zones:",
            "      - ${30:element}",
            "$0"
        ],
        "description": "Manage Azure Public IP Addresses",
        "scope": "ansible"
    },
    "Get public IP facts": {
        "prefix": [
            "azure.azcollection.azure_rm_publicipaddress_info",
            "Get public IP facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_publicipaddress_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get public IP facts",
        "scope": "ansible"
    },
    "Create and Delete Azure Recovery Services vault": {
        "prefix": [
            "azure.azcollection.azure_rm_recoveryservicesvault",
            "Create and Delete Azure Recovery Services vault"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_recoveryservicesvault:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    location: ${10:string}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    name: ${13:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    resource_group: ${16:string}",
            "    secret: ${17:string}",
            "    state: ${18|present,absent|}",
            "    subscription_id: ${19:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Create and Delete Azure Recovery Services vault",
        "scope": "ansible"
    },
    "Get Azure Recovery Services vault Details": {
        "prefix": [
            "azure.azcollection.azure_rm_recoveryservicesvault_info",
            "Get Azure Recovery Services vault Details"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_recoveryservicesvault_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Azure Recovery Services vault Details",
        "scope": "ansible"
    },
    "Manage Azure Cache for Redis instance": {
        "prefix": [
            "azure.azcollection.azure_rm_rediscache",
            "Manage Azure Cache for Redis instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_rediscache:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    enable_non_ssl_port: ${10|false,true|}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    minimum_tls_version: ${17:string}",
            "    notify_keyspace_events: ${19:string}",
            "    password: ${20:string}",
            "    profile: ${21:string}",
            "    public_network_access: ${22|Enabled,Disabled|}",
            "    redis_version: ${24|4,6|}",
            "    secret: ${27:string}",
            "    shard_count: ${28:int}",
            "    subscription_id: ${33:string}",
            "    tenant: ${35:string}",
            "    thumbprint: ${37:string}",
            "    wait_for_provisioning: ${38|true,false|}",
            "    x509_certificate_path: ${39:path}",
            "$0"
        ],
        "description": "Manage Azure Cache for Redis instance",
        "scope": "ansible"
    },
    "Get Azure Cache for Redis instance facts": {
        "prefix": [
            "azure.azcollection.azure_rm_rediscache_info",
            "Get Azure Cache for Redis instance facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_rediscache_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    return_access_keys: ${15|false,true|}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tags:",
            "      - ${18:element}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Azure Cache for Redis instance facts",
        "scope": "ansible"
    },
    "Manage Azure Cache for Redis Firewall rules": {
        "prefix": [
            "azure.azcollection.azure_rm_rediscachefirewallrule",
            "Manage Azure Cache for Redis Firewall rules"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_rediscachefirewallrule:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    secret: ${17:string}",
            "    subscription_id: ${20:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Manage Azure Cache for Redis Firewall rules",
        "scope": "ansible"
    },
    "Manage Azure RegistrationAssignment instance": {
        "prefix": [
            "azure.azcollection.azure_rm_registrationassignment",
            "Manage Azure RegistrationAssignment instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_registrationassignment:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    registration_assignment_id: ${15:string}",
            "    scope: ${16:string}",
            "    secret: ${17:string}",
            "    state: ${18|present,absent|}",
            "    subscription_id: ${19:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Manage Azure RegistrationAssignment instance",
        "scope": "ansible"
    },
    "Get RegistrationAssignment info": {
        "prefix": [
            "azure.azcollection.azure_rm_registrationassignment_info",
            "Get RegistrationAssignment info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_registrationassignment_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    registration_assignment_id: ${14:string}",
            "    scope: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get RegistrationAssignment info",
        "scope": "ansible"
    },
    "Manage Azure RegistrationDefinition instance": {
        "prefix": [
            "azure.azcollection.azure_rm_registrationdefinition",
            "Manage Azure RegistrationDefinition instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_registrationdefinition:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${14:string}",
            "    registration_definition_id: ${16:string}",
            "    scope: ${17:string}",
            "    secret: ${18:string}",
            "    state: ${19|present,absent|}",
            "    subscription_id: ${20:string}",
            "    tenant: ${22:string}",
            "    thumbprint: ${23:string}",
            "    x509_certificate_path: ${24:path}",
            "$0"
        ],
        "description": "Manage Azure RegistrationDefinition instance",
        "scope": "ansible"
    },
    "Get RegistrationDefinition info": {
        "prefix": [
            "azure.azcollection.azure_rm_registrationdefinition_info",
            "Get RegistrationDefinition info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_registrationdefinition_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    registration_definition_id: ${14:string}",
            "    scope: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get RegistrationDefinition info",
        "scope": "ansible"
    },
    "Create any Azure resource": {
        "prefix": [
            "azure.azcollection.azure_rm_resource",
            "Create any Azure resource"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_resource:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    idempotency: ${11|false,true|}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    password: ${15:string}",
            "    polling_interval: ${16:60}",
            "    polling_timeout: ${17:0}",
            "    profile: ${18:string}",
            "    secret: ${23:string}",
            "    status_code:",
            "      - ${25:element}",
            "    subscription_id: ${27:string}",
            "    tenant: ${28:string}",
            "    thumbprint: ${29:string}",
            "    x509_certificate_path: ${31:path}",
            "$0"
        ],
        "description": "Create any Azure resource",
        "scope": "ansible"
    },
    "Generic facts of Azure resources": {
        "prefix": [
            "azure.azcollection.azure_rm_resource_info",
            "Generic facts of Azure resources"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_resource_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${18:string}",
            "    subscription_id: ${20:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${24:path}",
            "$0"
        ],
        "description": "Generic facts of Azure resources",
        "scope": "ansible"
    },
    "Manage Azure resource groups": {
        "prefix": [
            "azure.azcollection.azure_rm_resourcegroup",
            "Manage Azure resource groups"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_resourcegroup:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    force_delete_nonempty: ${10|true,false|}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    secret: ${17:string}",
            "    subscription_id: ${19:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Manage Azure resource groups",
        "scope": "ansible"
    },
    "Get resource group facts": {
        "prefix": [
            "azure.azcollection.azure_rm_resourcegroup_info",
            "Get resource group facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_resourcegroup_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get resource group facts",
        "scope": "ansible"
    },
    "Manage Azure Role Assignment": {
        "prefix": [
            "azure.azcollection.azure_rm_roleassignment",
            "Manage Azure Role Assignment"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_roleassignment:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    secret: ${18:string}",
            "    subscription_id: ${20:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Manage Azure Role Assignment",
        "scope": "ansible"
    },
    "Gets Azure Role Assignment facts": {
        "prefix": [
            "azure.azcollection.azure_rm_roleassignment_info",
            "Gets Azure Role Assignment facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_roleassignment_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    secret: ${18:string}",
            "    strict_scope_match: ${19|false,true|}",
            "    subscription_id: ${20:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Gets Azure Role Assignment facts",
        "scope": "ansible"
    },
    "Manage Azure Role Definition": {
        "prefix": [
            "azure.azcollection.azure_rm_roledefinition",
            "Manage Azure Role Definition"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_roledefinition:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    assignable_scopes:",
            "      - ${5:element}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    description: ${10:string}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    name: ${13:string}",
            "    password: ${14:string}",
            "    permissions:",
            "      - ${15:element}",
            "    profile: ${16:string}",
            "    scope: ${17:string}",
            "    secret: ${18:string}",
            "    state: ${19|present,absent|}",
            "    subscription_id: ${20:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Manage Azure Role Definition",
        "scope": "ansible"
    },
    "Get Azure Role Definition facts": {
        "prefix": [
            "azure.azcollection.azure_rm_roledefinition_info",
            "Get Azure Role Definition facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_roledefinition_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    id: ${9:string}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    role_name: ${14:string}",
            "    scope: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    type: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Azure Role Definition facts",
        "scope": "ansible"
    },
    "Manage Azure route resource": {
        "prefix": [
            "azure.azcollection.azure_rm_route",
            "Manage Azure route resource"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_route:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${4:string}",
            "    api_profile: ${5:latest}",
            "    append_tags: ${6|true,false|}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    password: ${16:string}",
            "    profile: ${17:string}",
            "    secret: ${20:string}",
            "    subscription_id: ${22:string}",
            "    tenant: ${24:string}",
            "    thumbprint: ${25:string}",
            "    x509_certificate_path: ${26:path}",
            "$0"
        ],
        "description": "Manage Azure route resource",
        "scope": "ansible"
    },
    "Get Route info": {
        "prefix": [
            "azure.azcollection.azure_rm_route_info",
            "Get Route info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_route_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    route_table_name: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tags:",
            "      - ${18:element}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Route info",
        "scope": "ansible"
    },
    "Manage Azure route table resource": {
        "prefix": [
            "azure.azcollection.azure_rm_routetable",
            "Manage Azure route table resource"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_routetable:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    disable_bgp_route_propagation: ${10|false,true|}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    secret: ${18:string}",
            "    subscription_id: ${20:string}",
            "    tenant: ${22:string}",
            "    thumbprint: ${23:string}",
            "    x509_certificate_path: ${24:path}",
            "$0"
        ],
        "description": "Manage Azure route table resource",
        "scope": "ansible"
    },
    "Get route table facts": {
        "prefix": [
            "azure.azcollection.azure_rm_routetable_info",
            "Get route table facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_routetable_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get route table facts",
        "scope": "ansible"
    },
    "Manage Azure network security groups": {
        "prefix": [
            "azure.azcollection.azure_rm_securitygroup",
            "Manage Azure network security groups"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_securitygroup:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    purge_default_rules: ${17|true,false|}",
            "    purge_rules: ${18|true,false|}",
            "    secret: ${21:string}",
            "    subscription_id: ${23:string}",
            "    tenant: ${25:string}",
            "    thumbprint: ${26:string}",
            "    x509_certificate_path: ${27:path}",
            "$0"
        ],
        "description": "Manage Azure network security groups",
        "scope": "ansible"
    },
    "Get security group facts": {
        "prefix": [
            "azure.azcollection.azure_rm_securitygroup_info",
            "Get security group facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_securitygroup_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get security group facts",
        "scope": "ansible"
    },
    "Manage Azure Service Bus": {
        "prefix": [
            "azure.azcollection.azure_rm_servicebustopic",
            "Manage Azure Service Bus"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_servicebustopic:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    auto_delete_on_idle_in_seconds: ${7:int}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    default_message_time_to_live_seconds: ${11:int}",
            "    duplicate_detection_time_in_seconds: ${12:int}",
            "    enable_batched_operations: ${13|false,true|}",
            "    enable_express: ${14|false,true|}",
            "    enable_partitioning: ${15|false,true|}",
            "    log_mode: ${16:string}",
            "    log_path: ${17:string}",
            "    max_size_in_mb: ${18:int}",
            "    password: ${21:string}",
            "    profile: ${22:string}",
            "    requires_duplicate_detection: ${23|false,true|}",
            "    secret: ${25:string}",
            "    subscription_id: ${28:string}",
            "    support_ordering: ${29|false,true|}",
            "    tenant: ${31:string}",
            "    thumbprint: ${32:string}",
            "    x509_certificate_path: ${33:path}",
            "$0"
        ],
        "description": "Manage Azure Service Bus",
        "scope": "ansible"
    },
    "Get servicebus facts": {
        "prefix": [
            "azure.azcollection.azure_rm_servicebus_info",
            "Get servicebus facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_servicebus_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    secret: ${16:string}",
            "    show_sas_policies: ${17|false,true|}",
            "    subscription_id: ${18:string}",
            "    tags:",
            "      - ${19:element}",
            "    tenant: ${20:string}",
            "    thumbprint: ${21:string}",
            "    x509_certificate_path: ${24:path}",
            "$0"
        ],
        "description": "Get servicebus facts",
        "scope": "ansible"
    },
    "Manage Azure Service Bus queue": {
        "prefix": [
            "azure.azcollection.azure_rm_servicebusqueue",
            "Manage Azure Service Bus queue"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_servicebusqueue:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    auto_delete_on_idle_in_seconds: ${7:int}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    dead_lettering_on_message_expiration: ${11|false,true|}",
            "    default_message_time_to_live_seconds: ${12:int}",
            "    duplicate_detection_time_in_seconds: ${13:int}",
            "    enable_batched_operations: ${14|false,true|}",
            "    enable_express: ${15|false,true|}",
            "    enable_partitioning: ${16|false,true|}",
            "    lock_duration_in_seconds: ${19:int}",
            "    log_mode: ${20:string}",
            "    log_path: ${21:string}",
            "    max_delivery_count: ${22:int}",
            "    max_size_in_mb: ${23:int}",
            "    password: ${26:string}",
            "    profile: ${27:string}",
            "    requires_duplicate_detection: ${28|false,true|}",
            "    requires_session: ${29|false,true|}",
            "    secret: ${31:string}",
            "    subscription_id: ${34:string}",
            "    tenant: ${36:string}",
            "    thumbprint: ${37:string}",
            "    x509_certificate_path: ${38:path}",
            "$0"
        ],
        "description": "Manage Azure Service Bus queue",
        "scope": "ansible"
    },
    "Manage Azure Service Bus SAS policy": {
        "prefix": [
            "azure.azcollection.azure_rm_servicebussaspolicy",
            "Manage Azure Service Bus SAS policy"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_servicebussaspolicy:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    regenerate_primary_key: ${17|false,true|}",
            "    regenerate_secondary_key: ${18|false,true|}",
            "    secret: ${21:string}",
            "    subscription_id: ${23:string}",
            "    tenant: ${25:string}",
            "    thumbprint: ${26:string}",
            "    x509_certificate_path: ${28:path}",
            "$0"
        ],
        "description": "Manage Azure Service Bus SAS policy",
        "scope": "ansible"
    },
    "Manage Azure Service Bus subscription": {
        "prefix": [
            "azure.azcollection.azure_rm_servicebustopicsubscription",
            "Manage Azure Service Bus subscription"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_servicebustopicsubscription:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    auto_delete_on_idle_in_seconds: ${7:int}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    dead_lettering_on_filter_evaluation_exceptions: ${11|false,true|}",
            "    dead_lettering_on_message_expiration: ${12|false,true|}",
            "    default_message_time_to_live_seconds: ${13:int}",
            "    duplicate_detection_time_in_seconds: ${14:int}",
            "    enable_batched_operations: ${15|false,true|}",
            "    lock_duration_in_seconds: ${18:int}",
            "    log_mode: ${19:string}",
            "    log_path: ${20:string}",
            "    max_delivery_count: ${21:int}",
            "    password: ${24:string}",
            "    profile: ${25:string}",
            "    requires_session: ${26|false,true|}",
            "    secret: ${28:string}",
            "    subscription_id: ${31:string}",
            "    tenant: ${33:string}",
            "    thumbprint: ${34:string}",
            "    x509_certificate_path: ${36:path}",
            "$0"
        ],
        "description": "Manage Azure Service Bus subscription",
        "scope": "ansible"
    },
    "Manage Azure Snapshot instance.": {
        "prefix": [
            "azure.azcollection.azure_rm_snapshot",
            "Manage Azure Snapshot instance."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_snapshot:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    location: ${11:string}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    name: ${14:string}",
            "    os_type: ${15:string}",
            "    password: ${16:string}",
            "    profile: ${17:string}",
            "    resource_group: ${18:string}",
            "    secret: ${19:string}",
            "    state: ${21|present,absent|}",
            "    subscription_id: ${22:string}",
            "    tenant: ${24:string}",
            "    thumbprint: ${25:string}",
            "    x509_certificate_path: ${26:path}",
            "$0"
        ],
        "description": "Manage Azure Snapshot instance.",
        "scope": "ansible"
    },
    "Manage SQL Database instance": {
        "prefix": [
            "azure.azcollection.azure_rm_sqldatabase",
            "Manage SQL Database instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_sqldatabase:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    force_update: ${14|false,true|}",
            "    log_mode: ${16:string}",
            "    log_path: ${17:string}",
            "    password: ${20:string}",
            "    profile: ${21:string}",
            "    read_scale: ${22|false,true|}",
            "    secret: ${27:string}",
            "    subscription_id: ${33:string}",
            "    tenant: ${35:string}",
            "    thumbprint: ${36:string}",
            "    x509_certificate_path: ${37:path}",
            "    zone_redundant: ${38|false,true|}",
            "$0"
        ],
        "description": "Manage SQL Database instance",
        "scope": "ansible"
    },
    "Get Azure SQL Database facts": {
        "prefix": [
            "azure.azcollection.azure_rm_sqldatabase_info",
            "Get Azure SQL Database facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_sqldatabase_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${18:string}",
            "    tags:",
            "      - ${19:element}",
            "    tenant: ${20:string}",
            "    thumbprint: ${21:string}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Get Azure SQL Database facts",
        "scope": "ansible"
    },
    "Manage Firewall Rule instance": {
        "prefix": [
            "azure.azcollection.azure_rm_sqlfirewallrule",
            "Manage Firewall Rule instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_sqlfirewallrule:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${20:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Manage Firewall Rule instance",
        "scope": "ansible"
    },
    "Get Azure SQL Firewall Rule facts": {
        "prefix": [
            "azure.azcollection.azure_rm_sqlfirewallrule_info",
            "Get Azure SQL Firewall Rule facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_sqlfirewallrule_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure SQL Firewall Rule facts",
        "scope": "ansible"
    },
    "Manage SQL Server instance": {
        "prefix": [
            "azure.azcollection.azure_rm_sqlserver",
            "Manage SQL Server instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_sqlserver:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${7:latest}",
            "    append_tags: ${8|true,false|}",
            "    auth_source: ${9|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${10:string}",
            "    change_admin_password: ${11|false,true|}",
            "    client_id: ${12:string}",
            "    cloud_environment: ${13:AzureCloud}",
            "    log_mode: ${16:string}",
            "    log_path: ${17:string}",
            "    minimal_tls_version: ${18:string}",
            "    password: ${20:string}",
            "    profile: ${21:string}",
            "    public_network_access: ${22:string}",
            "    restrict_outbound_network_access: ${24:string}",
            "    secret: ${25:string}",
            "    subscription_id: ${27:string}",
            "    tenant: ${29:string}",
            "    thumbprint: ${30:string}",
            "    x509_certificate_path: ${32:path}",
            "$0"
        ],
        "description": "Manage SQL Server instance",
        "scope": "ansible"
    },
    "Get SQL Server facts": {
        "prefix": [
            "azure.azcollection.azure_rm_sqlserver_info",
            "Get SQL Server facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_sqlserver_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get SQL Server facts",
        "scope": "ansible"
    },
    "Manage Azure storage accounts": {
        "prefix": [
            "azure.azcollection.azure_rm_storageaccount",
            "Manage Azure storage accounts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_storageaccount:",
            "    ad_user: ${4:string}",
            "    adfs_authority_url: ${5:string}",
            "    allow_blob_public_access: ${6|false,true|}",
            "    api_profile: ${7:latest}",
            "    append_tags: ${8|true,false|}",
            "    auth_source: ${9|auto,cli,credential_file,env,msi|}",
            "    blob_cors:",
            "      - ${10:element}",
            "    cert_validation_mode: ${11:string}",
            "    client_id: ${12:string}",
            "    cloud_environment: ${13:AzureCloud}",
            "    force_delete_nonempty: ${16|false,true|}",
            "    https_only: ${17|false,true|}",
            "    is_hns_enabled: ${18|false,true|}",
            "    log_mode: ${21:string}",
            "    log_path: ${22:string}",
            "    password: ${26:string}",
            "    profile: ${27:string}",
            "    secret: ${30:string}",
            "    subscription_id: ${33:string}",
            "    tenant: ${35:string}",
            "    thumbprint: ${36:string}",
            "    x509_certificate_path: ${37:path}",
            "$0"
        ],
        "description": "Manage Azure storage accounts",
        "scope": "ansible"
    },
    "Get storage account facts": {
        "prefix": [
            "azure.azcollection.azure_rm_storageaccount_info",
            "Get storage account facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_storageaccount_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    show_blob_cors: ${16|false,true|}",
            "    show_connection_string: ${17|false,true|}",
            "    subscription_id: ${18:string}",
            "    tags:",
            "      - ${19:element}",
            "    tenant: ${20:string}",
            "    thumbprint: ${21:string}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Get storage account facts",
        "scope": "ansible"
    },
    "Manage blob containers and blob objects": {
        "prefix": [
            "azure.azcollection.azure_rm_storageblob",
            "Manage blob containers and blob objects"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_storageblob:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${12:string}",
            "    client_id: ${13:string}",
            "    cloud_environment: ${14:AzureCloud}",
            "    force: ${22|false,true|}",
            "    log_mode: ${23:string}",
            "    log_path: ${24:string}",
            "    password: ${25:string}",
            "    profile: ${26:string}",
            "    secret: ${29:string}",
            "    subscription_id: ${33:string}",
            "    tenant: ${35:string}",
            "    thumbprint: ${36:string}",
            "    x509_certificate_path: ${37:path}",
            "$0"
        ],
        "description": "Manage blob containers and blob objects",
        "scope": "ansible"
    },
    "Manage Azure storage file share": {
        "prefix": [
            "azure.azcollection.azure_rm_storageshare",
            "Manage Azure storage file share"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_storageshare:",
            "    access_tier: ${2:string}",
            "    account_name: ${3:string}",
            "    ad_user: ${4:string}",
            "    adfs_authority_url: ${5:string}",
            "    api_profile: ${6:latest}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    name: ${14:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    quota: ${17:int}",
            "    resource_group: ${18:string}",
            "    secret: ${19:string}",
            "    state: ${20|present,absent|}",
            "    subscription_id: ${21:string}",
            "    tenant: ${22:string}",
            "    thumbprint: ${23:string}",
            "    x509_certificate_path: ${24:path}",
            "$0"
        ],
        "description": "Manage Azure storage file share",
        "scope": "ansible"
    },
    "Get Azure storage file share info": {
        "prefix": [
            "azure.azcollection.azure_rm_storageshare_info",
            "Get Azure storage file share info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_storageshare_info:",
            "    account_name: ${2:string}",
            "    ad_user: ${3:string}",
            "    adfs_authority_url: ${4:string}",
            "    api_profile: ${5:latest}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure storage file share info",
        "scope": "ansible"
    },
    "Manage Azure subnets": {
        "prefix": [
            "azure.azcollection.azure_rm_subnet",
            "Manage Azure subnets"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_subnet:",
            "    ad_user: ${2:string}",
            "    address_prefixes_cidr:",
            "      - ${4:element}",
            "    adfs_authority_url: ${5:string}",
            "    api_profile: ${6:latest}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    delegations:",
            "      - ${11:element}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    nat_gateway: ${15:string}",
            "    password: ${16:string}",
            "    private_endpoint_network_policies: ${17|Enabled,Disabled|}",
            "    private_link_service_network_policies: ${18|Enabled,Disabled|}",
            "    profile: ${19:string}",
            "    secret: ${22:string}",
            "    service_endpoints:",
            "      - ${24:element}",
            "    subscription_id: ${26:string}",
            "    tenant: ${27:string}",
            "    thumbprint: ${28:string}",
            "    x509_certificate_path: ${30:path}",
            "$0"
        ],
        "description": "Manage Azure subnets",
        "scope": "ansible"
    },
    "Get Azure Subnet facts": {
        "prefix": [
            "azure.azcollection.azure_rm_subnet_info",
            "Get Azure Subnet facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_subnet_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure Subnet facts",
        "scope": "ansible"
    },
    "Get Azure Subscription facts": {
        "prefix": [
            "azure.azcollection.azure_rm_subscription_info",
            "Get Azure Subscription facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_subscription_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    all: ${4|false,true|}",
            "    api_profile: ${5:latest}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    id: ${10:string}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    name: ${13:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tags:",
            "      - ${18:element}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Azure Subscription facts",
        "scope": "ansible"
    },
    "Manage a Traffic Manager profile.": {
        "prefix": [
            "azure.azcollection.azure_rm_trafficmanager",
            "Manage a Traffic Manager profile."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_trafficmanager:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${13:string}",
            "    log_path: ${14:string}",
            "    password: ${17:string}",
            "    profile: ${18:string}",
            "    secret: ${21:string}",
            "    subscription_id: ${23:string}",
            "    tenant: ${25:string}",
            "    thumbprint: ${26:string}",
            "    x509_certificate_path: ${28:path}",
            "$0"
        ],
        "description": "Manage a Traffic Manager profile.",
        "scope": "ansible"
    },
    "Manage Azure Traffic Manager endpoint": {
        "prefix": [
            "azure.azcollection.azure_rm_trafficmanagerendpoint",
            "Manage Azure Traffic Manager endpoint"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_trafficmanagerendpoint:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    enabled: ${9|true,false|}",
            "    geo_mapping:",
            "      - ${10:element}",
            "    location: ${11:string}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    min_child_endpoints: ${14:int}",
            "    name: ${15:string}",
            "    password: ${16:string}",
            "    priority: ${17:int}",
            "    profile: ${18:string}",
            "    profile_name: ${19:string}",
            "    resource_group: ${20:string}",
            "    secret: ${21:string}",
            "    subscription_id: ${23:string}",
            "    target: ${24:string}",
            "    target_resource_id: ${25:string}",
            "    tenant: ${26:string}",
            "    thumbprint: ${27:string}",
            "    weight: ${29:int}",
            "    x509_certificate_path: ${30:path}",
            "$0"
        ],
        "description": "Manage Azure Traffic Manager endpoint",
        "scope": "ansible"
    },
    "Get Azure Traffic Manager endpoint facts": {
        "prefix": [
            "azure.azcollection.azure_rm_trafficmanagerendpoint_info",
            "Get Azure Traffic Manager endpoint facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_trafficmanagerendpoint_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Azure Traffic Manager endpoint facts",
        "scope": "ansible"
    },
    "Manage Azure Traffic Manager profile": {
        "prefix": [
            "azure.azcollection.azure_rm_trafficmanagerprofile",
            "Manage Azure Traffic Manager profile"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_trafficmanagerprofile:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    password: ${16:string}",
            "    profile: ${17:string}",
            "    secret: ${21:string}",
            "    subscription_id: ${23:string}",
            "    tenant: ${25:string}",
            "    thumbprint: ${26:string}",
            "    x509_certificate_path: ${27:path}",
            "$0"
        ],
        "description": "Manage Azure Traffic Manager profile",
        "scope": "ansible"
    },
    "Get Azure Traffic Manager profile facts": {
        "prefix": [
            "azure.azcollection.azure_rm_trafficmanagerprofile_info",
            "Get Azure Traffic Manager profile facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_trafficmanagerprofile_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure Traffic Manager profile facts",
        "scope": "ansible"
    },
    "Manage Azure VirtualHub instance": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualhubconnection",
            "Manage Azure VirtualHub instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualhubconnection:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    allow_hub_to_remote_vnet_transit: ${4|false,true|}",
            "    allow_remote_vnet_to_use_hub_vnet_gateways: ${5|false,true|}",
            "    api_profile: ${6:latest}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    enable_internet_security: ${11|false,true|}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    name: ${14:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    resource_group: ${18:string}",
            "    secret: ${20:string}",
            "    state: ${21|present,absent|}",
            "    subscription_id: ${22:string}",
            "    tenant: ${23:string}",
            "    thumbprint: ${24:string}",
            "    vhub_name: ${25:string}",
            "    x509_certificate_path: ${26:path}",
            "$0"
        ],
        "description": "Manage Azure VirtualHub instance",
        "scope": "ansible"
    },
    "Get VirtualHub info": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualhubconnection_info",
            "Get VirtualHub info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualhubconnection_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    virtual_hub_name: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get VirtualHub info",
        "scope": "ansible"
    },
    "Manage Azure virtual machines": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualmachine",
            "Manage Azure virtual machines"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualmachine:",
            "    accept_terms: ${2|false,true|}",
            "    ad_user: ${3:string}",
            "    adfs_authority_url: ${4:string}",
            "    allocated: ${7|true,false|}",
            "    api_profile: ${8:latest}",
            "    append_tags: ${9|true,false|}",
            "    auth_source: ${10|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${13:string}",
            "    client_id: ${14:string}",
            "    cloud_environment: ${15:AzureCloud}",
            "    ephemeral_os_disk: ${18|false,true|}",
            "    generalized: ${20|false,true|}",
            "    log_mode: ${25:string}",
            "    log_path: ${26:string}",
            "    network_interface_names:",
            "      - ${30:element}",
            "    password: ${36:string}",
            "    profile: ${39:string}",
            "    remove_on_absent:",
            "      - ${42:element}",
            "    restarted: ${44|false,true|}",
            "    secret: ${45:string}",
            "    ssh_password_enabled: ${47|true,false|}",
            "    started: ${49|false,true|}",
            "    subscription_id: ${55:string}",
            "    tenant: ${57:string}",
            "    thumbprint: ${58:string}",
            "    x509_certificate_path: ${65:path}",
            "    zones:",
            "      - ${66:element}",
            "$0"
        ],
        "description": "Manage Azure virtual machines",
        "scope": "ansible"
    },
    "Get virtual machine facts": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualmachine_info",
            "Get virtual machine facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualmachine_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get virtual machine facts",
        "scope": "ansible"
    },
    "Managed Azure Virtual Machine extension": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualmachineextension",
            "Managed Azure Virtual Machine extension"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualmachineextension:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    auto_upgrade_minor_version: ${6|false,true|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    force_update_tag: ${10|false,true|}",
            "    location: ${11:string}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    name: ${14:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    publisher: ${18:string}",
            "    resource_group: ${19:string}",
            "    secret: ${20:string}",
            "    state: ${22|present,absent|}",
            "    subscription_id: ${23:string}",
            "    tenant: ${24:string}",
            "    thumbprint: ${25:string}",
            "    type_handler_version: ${26:string}",
            "    virtual_machine_extension_type: ${27:string}",
            "    virtual_machine_name: ${28:string}",
            "    x509_certificate_path: ${29:path}",
            "$0"
        ],
        "description": "Managed Azure Virtual Machine extension",
        "scope": "ansible"
    },
    "Get Azure Virtual Machine Extension facts": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualmachineextension_info",
            "Get Azure Virtual Machine Extension facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualmachineextension_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    virtual_machine_name: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Azure Virtual Machine Extension facts",
        "scope": "ansible"
    },
    "Get virtual machine image facts": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualmachineimage_info",
            "Get virtual machine image facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualmachineimage_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${18:string}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Get virtual machine image facts",
        "scope": "ansible"
    },
    "Manage Azure virtual machine scale sets": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualmachinescaleset",
            "Manage Azure virtual machine scale sets"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualmachinescaleset:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${6:latest}",
            "    append_tags: ${7|true,false|}",
            "    auth_source: ${9|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${11:string}",
            "    client_id: ${12:string}",
            "    cloud_environment: ${13:AzureCloud}",
            "    enable_accelerated_networking: ${16|false,true|}",
            "    ephemeral_os_disk: ${17|false,true|}",
            "    log_mode: ${22:string}",
            "    log_path: ${23:string}",
            "    orchestration_mode: ${27:string}",
            "    os_disk_size_gb: ${29:int}",
            "    overprovision: ${31|false,true|}",
            "    password: ${32:string}",
            "    platform_fault_domain_count: ${34:1}",
            "    profile: ${36:string}",
            "    public_ip_per_vm: ${37|false,true|}",
            "    secret: ${41:string}",
            "    single_placement_group: ${44|false,true|}",
            "    ssh_password_enabled: ${45|true,false|}",
            "    subscription_id: ${49:string}",
            "    tenant: ${51:string}",
            "    thumbprint: ${53:string}",
            "    x509_certificate_path: ${59:path}",
            "    zones:",
            "      - ${60:element}",
            "$0"
        ],
        "description": "Manage Azure virtual machine scale sets",
        "scope": "ansible"
    },
    "Get Virtual Machine Scale Set facts": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualmachinescaleset_info",
            "Get Virtual Machine Scale Set facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualmachinescaleset_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tags:",
            "      - ${18:element}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Virtual Machine Scale Set facts",
        "scope": "ansible"
    },
    "Manage Azure Virtual Machine Scale Set (VMSS) extensions": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualmachinescalesetextension",
            "Manage Azure Virtual Machine Scale Set (VMSS) extensions"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualmachinescalesetextension:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    auto_upgrade_minor_version: ${6|false,true|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    password: ${14:string}",
            "    profile: ${15:string}",
            "    secret: ${19:string}",
            "    subscription_id: ${22:string}",
            "    tenant: ${23:string}",
            "    thumbprint: ${24:string}",
            "    x509_certificate_path: ${28:path}",
            "$0"
        ],
        "description": "Manage Azure Virtual Machine Scale Set (VMSS) extensions",
        "scope": "ansible"
    },
    "Get Azure Virtual Machine Scale Set Extension facts": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualmachinescalesetextension_info",
            "Get Azure Virtual Machine Scale Set Extension facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualmachinescalesetextension_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get Azure Virtual Machine Scale Set Extension facts",
        "scope": "ansible"
    },
    "Get Azure Virtual Machine Scale Set Instance facts": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualmachinescalesetinstance_info",
            "Get Azure Virtual Machine Scale Set Instance facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualmachinescalesetinstance_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Azure Virtual Machine Scale Set Instance facts",
        "scope": "ansible"
    },
    "Get facts for virtual machine sizes": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualmachinesize_info",
            "Get facts for virtual machine sizes"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualmachinesize_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    location: ${9:string}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${19:path}",
            "$0"
        ],
        "description": "Get facts for virtual machine sizes",
        "scope": "ansible"
    },
    "Manage Azure virtual networks": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualnetwork",
            "Manage Azure virtual networks"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualnetwork:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${4:string}",
            "    api_profile: ${5:latest}",
            "    append_tags: ${6|true,false|}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    log_mode: ${13:string}",
            "    log_path: ${14:string}",
            "    password: ${16:string}",
            "    profile: ${17:string}",
            "    purge_address_prefixes: ${18|true,false|}",
            "    purge_dns_servers: ${19|true,false|}",
            "    secret: ${21:string}",
            "    subscription_id: ${23:string}",
            "    tenant: ${25:string}",
            "    thumbprint: ${26:string}",
            "    x509_certificate_path: ${27:path}",
            "$0"
        ],
        "description": "Manage Azure virtual networks",
        "scope": "ansible"
    },
    "Get virtual network facts": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualnetwork_info",
            "Get virtual network facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualnetwork_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tags:",
            "      - ${17:element}",
            "    tenant: ${18:string}",
            "    thumbprint: ${19:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get virtual network facts",
        "scope": "ansible"
    },
    "Manage Azure virtual network gateways": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualnetworkgateway",
            "Manage Azure virtual network gateways"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualnetworkgateway:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${8:string}",
            "    client_id: ${9:string}",
            "    cloud_environment: ${10:AzureCloud}",
            "    log_mode: ${15:string}",
            "    log_path: ${16:string}",
            "    password: ${18:string}",
            "    profile: ${19:string}",
            "    secret: ${21:string}",
            "    subscription_id: ${24:string}",
            "    tenant: ${26:string}",
            "    thumbprint: ${27:string}",
            "    x509_certificate_path: ${31:path}",
            "$0"
        ],
        "description": "Manage Azure virtual network gateways",
        "scope": "ansible"
    },
    "Manage Azure Virtual Network Peering": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualnetworkpeering",
            "Manage Azure Virtual Network Peering"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualnetworkpeering:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    allow_forwarded_traffic: ${4|false,true|}",
            "    allow_gateway_transit: ${5|false,true|}",
            "    allow_virtual_network_access: ${6|false,true|}",
            "    api_profile: ${7:latest}",
            "    auth_source: ${8|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${9:string}",
            "    client_id: ${10:string}",
            "    cloud_environment: ${11:AzureCloud}",
            "    log_mode: ${12:string}",
            "    log_path: ${13:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    secret: ${19:string}",
            "    subscription_id: ${21:string}",
            "    tenant: ${22:string}",
            "    thumbprint: ${23:string}",
            "    use_remote_gateways: ${24|false,true|}",
            "    x509_certificate_path: ${26:path}",
            "$0"
        ],
        "description": "Manage Azure Virtual Network Peering",
        "scope": "ansible"
    },
    "Get facts of Azure Virtual Network Peering": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualnetworkpeering_info",
            "Get facts of Azure Virtual Network Peering"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualnetworkpeering_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${20:path}",
            "$0"
        ],
        "description": "Get facts of Azure Virtual Network Peering",
        "scope": "ansible"
    },
    "Manage Azure VirtualWan instance": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualwan",
            "Manage Azure VirtualWan instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualwan:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    allow_branch_to_branch_traffic: ${4|false,true|}",
            "    allow_vnet_to_vnet_traffic: ${5|false,true|}",
            "    api_profile: ${6:latest}",
            "    append_tags: ${7|true,false|}",
            "    auth_source: ${8|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${9:string}",
            "    client_id: ${10:string}",
            "    cloud_environment: ${11:AzureCloud}",
            "    disable_vpn_encryption: ${12|false,true|}",
            "    location: ${13:string}",
            "    log_mode: ${14:string}",
            "    log_path: ${15:string}",
            "    name: ${16:string}",
            "    office365_local_breakout_category: ${17:string}",
            "    password: ${18:string}",
            "    profile: ${19:string}",
            "    resource_group: ${20:string}",
            "    secret: ${21:string}",
            "    subscription_id: ${23:string}",
            "    tenant: ${25:string}",
            "    thumbprint: ${26:string}",
            "    virtual_hubs:",
            "      - ${27:element}",
            "    virtual_wan_type: ${28:string}",
            "    vpn_sites:",
            "      - ${29:element}",
            "    x509_certificate_path: ${30:path}",
            "$0"
        ],
        "description": "Manage Azure VirtualWan instance",
        "scope": "ansible"
    },
    "Get VirtualWan info": {
        "prefix": [
            "azure.azcollection.azure_rm_virtualwan_info",
            "Get VirtualWan info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_virtualwan_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get VirtualWan info",
        "scope": "ansible"
    },
    "Create or Delete Azure VM Backup Policy": {
        "prefix": [
            "azure.azcollection.azure_rm_vmbackuppolicy",
            "Create or Delete Azure VM Backup Policy"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_vmbackuppolicy:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    count: ${10:1}",
            "    log_mode: ${11:string}",
            "    log_path: ${12:string}",
            "    months:",
            "      - ${13:element}",
            "    name: ${14:string}",
            "    password: ${15:string}",
            "    profile: ${16:string}",
            "    resource_group: ${17:string}",
            "    secret: ${18:string}",
            "    state: ${19|present,absent|}",
            "    subscription_id: ${20:string}",
            "    tenant: ${22:string}",
            "    thumbprint: ${23:string}",
            "    time: ${24:12:00}",
            "    vault_name: ${25:string}",
            "    weekdays:",
            "      - ${26:element}",
            "    weeks:",
            "      - ${27:element}",
            "    x509_certificate_path: ${28:path}",
            "$0"
        ],
        "description": "Create or Delete Azure VM Backup Policy",
        "scope": "ansible"
    },
    "Fetch Backup Policy Details": {
        "prefix": [
            "azure.azcollection.azure_rm_vmbackuppolicy_info",
            "Fetch Backup Policy Details"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_vmbackuppolicy_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    vault_name: ${21:string}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Fetch Backup Policy Details",
        "scope": "ansible"
    },
    "Manage Azure VpnSite instance": {
        "prefix": [
            "azure.azcollection.azure_rm_vpnsite",
            "Manage Azure VpnSite instance"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_vpnsite:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${4:string}",
            "    api_profile: ${5:latest}",
            "    append_tags: ${6|true,false|}",
            "    auth_source: ${7|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${9:string}",
            "    client_id: ${10:string}",
            "    cloud_environment: ${11:AzureCloud}",
            "    ip_address: ${13:string}",
            "    is_security_site: ${14|false,true|}",
            "    location: ${15:string}",
            "    log_mode: ${16:string}",
            "    log_path: ${17:string}",
            "    name: ${18:string}",
            "    password: ${20:string}",
            "    profile: ${21:string}",
            "    resource_group: ${22:string}",
            "    secret: ${23:string}",
            "    site_key: ${24:string}",
            "    state: ${25|present,absent|}",
            "    subscription_id: ${26:string}",
            "    tenant: ${28:string}",
            "    thumbprint: ${29:string}",
            "    vpn_site_links:",
            "      - ${31:element}",
            "    x509_certificate_path: ${32:path}",
            "$0"
        ],
        "description": "Manage Azure VpnSite instance",
        "scope": "ansible"
    },
    "Get VpnSite info": {
        "prefix": [
            "azure.azcollection.azure_rm_vpnsite_info",
            "Get VpnSite info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_vpnsite_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get VpnSite info",
        "scope": "ansible"
    },
    "Get VpnSiteLink info": {
        "prefix": [
            "azure.azcollection.azure_rm_vpnsitelink_info",
            "Get VpnSiteLink info"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_vpnsitelink_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    append_tags: ${5|true,false|}",
            "    auth_source: ${6|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${7:string}",
            "    client_id: ${8:string}",
            "    cloud_environment: ${9:AzureCloud}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    vpn_site_name: ${21:string}",
            "    x509_certificate_path: ${22:path}",
            "$0"
        ],
        "description": "Get VpnSiteLink info",
        "scope": "ansible"
    },
    "Manage Web App instances": {
        "prefix": [
            "azure.azcollection.azure_rm_webapp",
            "Manage Web App instances"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_webapp:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    always_on: ${4|false,true|}",
            "    api_profile: ${5:latest}",
            "    app_state: ${7|started,stopped,restarted|}",
            "    append_tags: ${8|true,false|}",
            "    auth_source: ${9|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${10:string}",
            "    client_affinity_enabled: ${11|true,false|}",
            "    client_id: ${12:string}",
            "    cloud_environment: ${13:AzureCloud}",
            "    ftps_state: ${17:string}",
            "    https_only: ${18|false,true|}",
            "    log_mode: ${20:string}",
            "    log_path: ${21:string}",
            "    min_tls_version: ${22:string}",
            "    password: ${24:string}",
            "    profile: ${26:string}",
            "    purge_app_settings: ${27|false,true|}",
            "    secret: ${30:string}",
            "    subscription_id: ${33:string}",
            "    tenant: ${35:string}",
            "    thumbprint: ${36:string}",
            "    x509_certificate_path: ${37:path}",
            "$0"
        ],
        "description": "Manage Web App instances",
        "scope": "ansible"
    },
    "Get Azure web app facts": {
        "prefix": [
            "azure.azcollection.azure_rm_webapp_info",
            "Get Azure web app facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_webapp_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    return_publish_profile: ${15|false,true|}",
            "    secret: ${16:string}",
            "    subscription_id: ${17:string}",
            "    tags:",
            "      - ${18:element}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    x509_certificate_path: ${21:path}",
            "$0"
        ],
        "description": "Get Azure web app facts",
        "scope": "ansible"
    },
    "Manage web app network access restrictions": {
        "prefix": [
            "azure.azcollection.azure_rm_webappaccessrestriction",
            "Manage web app network access restrictions"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_webappaccessrestriction:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    ip_security_restrictions:",
            "      - ${9:element}",
            "    log_mode: ${10:string}",
            "    log_path: ${11:string}",
            "    name: ${12:string}",
            "    password: ${13:string}",
            "    profile: ${14:string}",
            "    resource_group: ${15:string}",
            "    scm_ip_security_restrictions:",
            "      - ${16:element}",
            "    scm_ip_security_restrictions_use_main: ${17|false,true|}",
            "    secret: ${18:string}",
            "    state: ${19|present,absent|}",
            "    subscription_id: ${20:string}",
            "    tenant: ${21:string}",
            "    thumbprint: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Manage web app network access restrictions",
        "scope": "ansible"
    },
    "Retrieve web app network access restriction facts": {
        "prefix": [
            "azure.azcollection.azure_rm_webappaccessrestriction_info",
            "Retrieve web app network access restriction facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_webappaccessrestriction_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${19:path}",
            "$0"
        ],
        "description": "Retrieve web app network access restriction facts",
        "scope": "ansible"
    },
    "Manage Azure Web App slot": {
        "prefix": [
            "azure.azcollection.azure_rm_webappslot",
            "Manage Azure Web App slot"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_webappslot:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    app_state: ${6|started,stopped,restarted|}",
            "    append_tags: ${7|true,false|}",
            "    auth_source: ${8|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${10:string}",
            "    client_id: ${11:string}",
            "    cloud_environment: ${12:AzureCloud}",
            "    log_mode: ${18:string}",
            "    log_path: ${19:string}",
            "    password: ${21:string}",
            "    profile: ${22:string}",
            "    purge_app_settings: ${23|false,true|}",
            "    secret: ${25:string}",
            "    subscription_id: ${28:string}",
            "    tenant: ${31:string}",
            "    thumbprint: ${32:string}",
            "    x509_certificate_path: ${34:path}",
            "$0"
        ],
        "description": "Manage Azure Web App slot",
        "scope": "ansible"
    },
    "Manage web app virtual network connection": {
        "prefix": [
            "azure.azcollection.azure_rm_webappvnetconnection",
            "Manage web app virtual network connection"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_webappvnetconnection:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    state: ${16|present,absent|}",
            "    subnet: ${17:string}",
            "    subscription_id: ${18:string}",
            "    tenant: ${19:string}",
            "    thumbprint: ${20:string}",
            "    vnet_name: ${21:string}",
            "    vnet_resource_group: ${22:string}",
            "    x509_certificate_path: ${23:path}",
            "$0"
        ],
        "description": "Manage web app virtual network connection",
        "scope": "ansible"
    },
    "Get Azure web app virtual network connection facts": {
        "prefix": [
            "azure.azcollection.azure_rm_webappvnetconnection_info",
            "Get Azure web app virtual network connection facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  azure.azcollection.azure_rm_webappvnetconnection_info:",
            "    ad_user: ${2:string}",
            "    adfs_authority_url: ${3:string}",
            "    api_profile: ${4:latest}",
            "    auth_source: ${5|auto,cli,credential_file,env,msi|}",
            "    cert_validation_mode: ${6:string}",
            "    client_id: ${7:string}",
            "    cloud_environment: ${8:AzureCloud}",
            "    log_mode: ${9:string}",
            "    log_path: ${10:string}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    profile: ${13:string}",
            "    resource_group: ${14:string}",
            "    secret: ${15:string}",
            "    subscription_id: ${16:string}",
            "    tenant: ${17:string}",
            "    thumbprint: ${18:string}",
            "    x509_certificate_path: ${19:path}",
            "$0"
        ],
        "description": "Get Azure web app virtual network connection facts",
        "scope": "ansible"
    }
}