{
    "Manages access-layer objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_access_layer",
            "Manages access-layer objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_access_layer:",
            "    add_default_rule: ${2|false,true|}",
            "    applications_and_url_filtering: ${3|false,true|}",
            "    auto_publish_session: ${4|false,true|}",
            "    color: ${5:string}",
            "    comments: ${6:string}",
            "    content_awareness: ${7|false,true|}",
            "    details_level: ${8:string}",
            "    detect_using_x_forward_for: ${9|false,true|}",
            "    firewall: ${10|false,true|}",
            "    ignore_errors: ${11|false,true|}",
            "    ignore_warnings: ${12|false,true|}",
            "    implicit_cleanup_action: ${13:string}",
            "    mobile_access: ${14|false,true|}",
            "    name: ${15:string}",
            "    shared: ${16|false,true|}",
            "    state: ${17|present,absent|}",
            "    tags:",
            "      - ${18:element}",
            "    version: ${19:string}",
            "    wait_for_task: ${20|true,false|}",
            "    wait_for_task_timeout: ${21:30}",
            "$0"
        ],
        "description": "Manages access-layer objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get access-layer objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_access_layer_facts",
            "Get access-layer objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_access_layer_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "$0"
        ],
        "description": "Get access-layer objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages access-role objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_access_role",
            "Manages access-role objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_access_role:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    ignore_errors: ${6|false,true|}",
            "    ignore_warnings: ${7|false,true|}",
            "    machines: ${8:string}",
            "    machines_list:",
            "      - ${9:element}",
            "    name: ${10:string}",
            "    networks:",
            "      - ${11:element}",
            "    remote_access_clients: ${12:string}",
            "    state: ${13|present,absent|}",
            "    tags:",
            "      - ${14:element}",
            "    users: ${15:string}",
            "    users_list:",
            "      - ${16:element}",
            "    version: ${17:string}",
            "    wait_for_task: ${18|true,false|}",
            "    wait_for_task_timeout: ${19:30}",
            "$0"
        ],
        "description": "Manages access-role objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get access-role objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_access_role_facts",
            "Get access-role objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_access_role_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "$0"
        ],
        "description": "Get access-role objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages access-rule objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_access_rule",
            "Manages access-rule objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_access_rule:",
            "    action: ${2:string}",
            "    auto_publish_session: ${4|false,true|}",
            "    comments: ${5:string}",
            "    content:",
            "      - ${6:element}",
            "    content_direction: ${7:string}",
            "    content_negate: ${8|false,true|}",
            "    destination:",
            "      - ${10:element}",
            "    destination_negate: ${11|false,true|}",
            "    details_level: ${12:string}",
            "    enabled: ${13|false,true|}",
            "    ignore_errors: ${14|false,true|}",
            "    ignore_warnings: ${15|false,true|}",
            "    inline_layer: ${16:string}",
            "    install_on:",
            "      - ${17:element}",
            "    layer: ${18:string}",
            "    name: ${19:string}",
            "    position: ${20:string}",
            "    search_entire_rulebase: ${22|false,true|}",
            "    service:",
            "      - ${23:element}",
            "    service_negate: ${24|false,true|}",
            "    source:",
            "      - ${25:element}",
            "    source_negate: ${26|false,true|}",
            "    state: ${27|present,absent|}",
            "    time:",
            "      - ${28:element}",
            "    version: ${31:string}",
            "    vpn: ${32:string}",
            "    vpn_list:",
            "      - ${33:element}",
            "    wait_for_task: ${34|true,false|}",
            "    wait_for_task_timeout: ${35:30}",
            "$0"
        ],
        "description": "Manages access-rule objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get access-rule objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_access_rule_facts",
            "Get access-rule objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_access_rule_facts:",
            "    dereference_group_members: ${2|false,true|}",
            "    details_level: ${3:string}",
            "    filter: ${4:string}",
            "    layer: ${7:string}",
            "    limit: ${8:int}",
            "    name: ${9:string}",
            "    offset: ${10:int}",
            "    order:",
            "      - ${11:element}",
            "    package: ${12:string}",
            "    show_as_ranges: ${13|false,true|}",
            "    show_hits: ${14|false,true|}",
            "    show_membership: ${15|false,true|}",
            "    use_object_dictionary: ${16|false,true|}",
            "    version: ${17:string}",
            "$0"
        ],
        "description": "Get access-rule objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages access-rules objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_access_rules",
            "Manages access-rules objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_access_rules:",
            "    auto_publish_session: ${2|false,true|}",
            "    details_level: ${3:string}",
            "    layer: ${4:string}",
            "    rules:",
            "      - ${5:element}",
            "    version: ${6:string}",
            "    wait_for_task_timeout: ${7:30}",
            "$0"
        ],
        "description": "Manages access-rules objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages access-section objects on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_access_section",
            "Manages access-section objects on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_access_section:",
            "    auto_publish_session: ${2|false,true|}",
            "    details_level: ${3:string}",
            "    ignore_errors: ${4|false,true|}",
            "    ignore_warnings: ${5|false,true|}",
            "    layer: ${6:string}",
            "    name: ${7:string}",
            "    position: ${8:string}",
            "    state: ${9|present,absent|}",
            "    version: ${10:string}",
            "    wait_for_task: ${11|true,false|}",
            "    wait_for_task_timeout: ${12:30}",
            "$0"
        ],
        "description": "Manages access-section objects on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Add API key for administrator, to enable login with it. For the key to be valid publish is needed.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_add_api_key",
            "Add API key for administrator, to enable login with it. For the key to be valid publish is needed."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_add_api_key:",
            "    admin_name: ${2:string}",
            "    admin_uid: ${3:string}",
            "    version: ${4:string}",
            "    wait_for_task: ${5|true,false|}",
            "    wait_for_task_timeout: ${6:30}",
            "$0"
        ],
        "description": "Add API key for administrator, to enable login with it. For the key to be valid publish is needed.",
        "scope": "ansible"
    },
    "Imports a Data Center Object from a Data Center Server.<br> Data Center Object represents an object in the cloud environment.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_add_data_center_object",
            "Imports a Data Center Object from a Data Center Server.&lt;br&gt; Data Center Object represents an object in the cloud environment."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_add_data_center_object:",
            "    color: ${2:string}",
            "    comments: ${3:string}",
            "    data_center_name: ${4:string}",
            "    data_center_uid: ${5:string}",
            "    details_level: ${6:string}",
            "    groups:",
            "      - ${7:element}",
            "    ignore_errors: ${8|false,true|}",
            "    ignore_warnings: ${9|false,true|}",
            "    name: ${10:string}",
            "    tags:",
            "      - ${11:element}",
            "    uid_in_data_center: ${12:string}",
            "    uri: ${13:string}",
            "    version: ${14:string}",
            "    wait_for_task: ${15|true,false|}",
            "    wait_for_task_timeout: ${16:30}",
            "$0"
        ],
        "description": "Imports a Data Center Object from a Data Center Server.&lt;br&gt; Data Center Object represents an object in the cloud environment.",
        "scope": "ansible"
    },
    "Create new object": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_add_domain",
            "Create new object"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_add_domain:",
            "    color: ${2:string}",
            "    comments: ${3:string}",
            "    details_level: ${4:string}",
            "    ignore_errors: ${5|false,true|}",
            "    ignore_warnings: ${6|false,true|}",
            "    name: ${7:string}",
            "    servers:",
            "      - ${8:element}",
            "    version: ${9:string}",
            "    wait_for_task: ${10|true,false|}",
            "    wait_for_task_timeout: ${11:30}",
            "$0"
        ],
        "description": "Create new object",
        "scope": "ansible"
    },
    "Create new object.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_add_nat_rule",
            "Create new object."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_add_nat_rule:",
            "    comments: ${2:string}",
            "    details_level: ${3:string}",
            "    enabled: ${4|false,true|}",
            "    ignore_errors: ${5|false,true|}",
            "    ignore_warnings: ${6|false,true|}",
            "    install_on:",
            "      - ${7:element}",
            "    method: ${8:string}",
            "    original_destination: ${9:string}",
            "    original_service: ${10:string}",
            "    original_source: ${11:string}",
            "    package: ${12:string}",
            "    position: ${13:string}",
            "    translated_destination: ${14:string}",
            "    translated_service: ${15:string}",
            "    translated_source: ${16:string}",
            "    version: ${17:string}",
            "    wait_for_task: ${18|true,false|}",
            "    wait_for_task_timeout: ${19:30}",
            "$0"
        ],
        "description": "Create new object.",
        "scope": "ansible"
    },
    "Creates new rules in batch. Use this API to achieve optimum performance when adding more than one rule.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_add_rules_batch",
            "Creates new rules in batch. Use this API to achieve optimum performance when adding more than one rule."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_add_rules_batch:",
            "    auto_publish_session: ${2|false,true|}",
            "    objects:",
            "      - ${3:element}",
            "    version: ${4:string}",
            "    wait_for_task: ${5|true,false|}",
            "    wait_for_task_timeout: ${6:30}",
            "$0"
        ],
        "description": "Creates new rules in batch. Use this API to achieve optimum performance when adding more than one rule.",
        "scope": "ansible"
    },
    "Manages address-range objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_address_range",
            "Manages address-range objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_address_range:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    groups:",
            "      - ${6:element}",
            "    ignore_errors: ${7|false,true|}",
            "    ignore_warnings: ${8|false,true|}",
            "    ip_address_first: ${9:string}",
            "    ip_address_last: ${10:string}",
            "    ipv4_address_first: ${11:string}",
            "    ipv4_address_last: ${12:string}",
            "    ipv6_address_first: ${13:string}",
            "    ipv6_address_last: ${14:string}",
            "    name: ${15:string}",
            "    state: ${17|present,absent|}",
            "    tags:",
            "      - ${18:element}",
            "    version: ${19:string}",
            "    wait_for_task: ${20|true,false|}",
            "    wait_for_task_timeout: ${21:30}",
            "$0"
        ],
        "description": "Manages address-range objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get address-range objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_address_range_facts",
            "Get address-range objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_address_range_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    show_membership: ${7|false,true|}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get address-range objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages administrator objects on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_administrator",
            "Manages administrator objects on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_administrator:",
            "    authentication_method: ${2:string}",
            "    auto_publish_session: ${3|false,true|}",
            "    color: ${4:string}",
            "    comments: ${5:string}",
            "    details_level: ${6:string}",
            "    email: ${7:string}",
            "    expiration_date: ${8:string}",
            "    ignore_errors: ${9|false,true|}",
            "    ignore_warnings: ${10|false,true|}",
            "    multi_domain_profile: ${11:string}",
            "    must_change_password: ${12|false,true|}",
            "    name: ${13:string}",
            "    password: ${14:string}",
            "    password_hash: ${15:string}",
            "    permissions_profile: ${16:string}",
            "    permissions_profile_list:",
            "      - ${17:element}",
            "    phone_number: ${18:string}",
            "    radius_server: ${19:string}",
            "    state: ${20|present,absent|}",
            "    tacacs_server: ${21:string}",
            "    tags:",
            "      - ${22:element}",
            "    version: ${23:string}",
            "    wait_for_task: ${24|true,false|}",
            "    wait_for_task_timeout: ${25:30}",
            "$0"
        ],
        "description": "Manages administrator objects on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Get administrator objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_administrator_facts",
            "Get administrator objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_administrator_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "$0"
        ],
        "description": "Get administrator objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Manages application-site objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_application_site",
            "Manages application-site objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_application_site:",
            "    additional_categories:",
            "      - ${2:element}",
            "    application_signature: ${3:string}",
            "    auto_publish_session: ${4|false,true|}",
            "    color: ${5:string}",
            "    comments: ${6:string}",
            "    description: ${7:string}",
            "    details_level: ${8:string}",
            "    groups:",
            "      - ${9:element}",
            "    ignore_errors: ${10|false,true|}",
            "    ignore_warnings: ${11|false,true|}",
            "    name: ${12:string}",
            "    primary_category: ${13:string}",
            "    state: ${14|present,absent|}",
            "    tags:",
            "      - ${15:element}",
            "    url_list:",
            "      - ${16:element}",
            "    urls_defined_as_regular_expression: ${17|false,true|}",
            "    version: ${18:string}",
            "    wait_for_task: ${19|true,false|}",
            "    wait_for_task_timeout: ${20:30}",
            "$0"
        ],
        "description": "Manages application-site objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages application-site-category objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_application_site_category",
            "Manages application-site-category objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_application_site_category:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    description: ${5:string}",
            "    details_level: ${6:string}",
            "    groups:",
            "      - ${7:element}",
            "    ignore_errors: ${8|false,true|}",
            "    ignore_warnings: ${9|false,true|}",
            "    name: ${10:string}",
            "    state: ${11|present,absent|}",
            "    tags:",
            "      - ${12:element}",
            "    version: ${13:string}",
            "    wait_for_task: ${14|true,false|}",
            "    wait_for_task_timeout: ${15:30}",
            "$0"
        ],
        "description": "Manages application-site-category objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get application-site-category objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_application_site_category_facts",
            "Get application-site-category objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_application_site_category_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "$0"
        ],
        "description": "Get application-site-category objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get application-site objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_application_site_facts",
            "Get application-site objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_application_site_facts:",
            "    application_id: ${2:string}",
            "    details_level: ${3:string}",
            "    limit: ${4:int}",
            "    name: ${5:string}",
            "    offset: ${6:int}",
            "    order:",
            "      - ${7:element}",
            "    show_membership: ${8|false,true|}",
            "    version: ${9:string}",
            "$0"
        ],
        "description": "Get application-site objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages application-site-group objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_application_site_group",
            "Manages application-site-group objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_application_site_group:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    groups:",
            "      - ${6:element}",
            "    ignore_errors: ${7|false,true|}",
            "    ignore_warnings: ${8|false,true|}",
            "    members:",
            "      - ${9:element}",
            "    name: ${10:string}",
            "    state: ${11|present,absent|}",
            "    tags:",
            "      - ${12:element}",
            "    version: ${13:string}",
            "    wait_for_task: ${14|true,false|}",
            "    wait_for_task_timeout: ${15:30}",
            "$0"
        ],
        "description": "Manages application-site-group objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get application-site-group objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_application_site_group_facts",
            "Get application-site-group objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_application_site_group_facts:",
            "    dereference_group_members: ${2|false,true|}",
            "    details_level: ${3:string}",
            "    limit: ${4:int}",
            "    name: ${5:string}",
            "    offset: ${6:int}",
            "    order:",
            "      - ${7:element}",
            "    show_membership: ${8|false,true|}",
            "    version: ${9:string}",
            "$0"
        ],
        "description": "Get application-site-group objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Workflow feature - Approve and Publish the session.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_approve_session",
            "Workflow feature - Approve and Publish the session."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_approve_session:",
            "    uid: ${2:string}",
            "    version: ${3:string}",
            "    wait_for_task: ${4|true,false|}",
            "    wait_for_task_timeout: ${5:30}",
            "$0"
        ],
        "description": "Workflow feature - Approve and Publish the session.",
        "scope": "ansible"
    },
    "assign global assignment on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_assign_global_assignment",
            "assign global assignment on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_assign_global_assignment:",
            "    dependent_domains:",
            "      - ${2:element}",
            "    details_level: ${3:string}",
            "    global_domains:",
            "      - ${4:element}",
            "    version: ${5:string}",
            "    wait_for_task: ${6|true,false|}",
            "    wait_for_task_timeout: ${7:30}",
            "$0"
        ],
        "description": "assign global assignment on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Check if a target can reach or parse a network feed; can work with an existing feed object or with a new one (by providing all relevant feed parameters).": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_check_network_feed",
            "Check if a target can reach or parse a network feed; can work with an existing feed object or with a new one (by providing all relevant feed parameters)."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_check_network_feed:",
            "    auto_publish_session: ${2|false,true|}",
            "    targets:",
            "      - ${4:element}",
            "    version: ${5:string}",
            "    wait_for_task: ${6|true,false|}",
            "    wait_for_task_timeout: ${7:30}",
            "$0"
        ],
        "description": "Check if a target can reach or parse a network feed; can work with an existing feed object or with a new one (by providing all relevant feed parameters).",
        "scope": "ansible"
    },
    "Check if a target can reach or parse a threat IOC feed; can work with an existing feed object or with a new one (by providing all relevant feed parameters).": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_check_threat_ioc_feed",
            "Check if a target can reach or parse a threat IOC feed; can work with an existing feed object or with a new one (by providing all relevant feed parameters)."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_check_threat_ioc_feed:",
            "    auto_publish_session: ${2|false,true|}",
            "    targets:",
            "      - ${4:element}",
            "    version: ${5:string}",
            "    wait_for_task: ${6|true,false|}",
            "    wait_for_task_timeout: ${7:30}",
            "$0"
        ],
        "description": "Check if a target can reach or parse a threat IOC feed; can work with an existing feed object or with a new one (by providing all relevant feed parameters).",
        "scope": "ansible"
    },
    "Retrieve all existing cluster members in domain.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_cluster_members_facts",
            "Retrieve all existing cluster members in domain."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_cluster_members_facts:",
            "    details_level: ${2:string}",
            "    domains_to_process:",
            "      - ${3:element}",
            "    filter: ${4:string}",
            "    limit: ${5:int}",
            "    limit_interfaces: ${6:int}",
            "    offset: ${7:int}",
            "    order:",
            "      - ${8:element}",
            "    show_membership: ${9|false,true|}",
            "    uid: ${10:string}",
            "    version: ${11:string}",
            "$0"
        ],
        "description": "Retrieve all existing cluster members in domain.",
        "scope": "ansible"
    },
    "Securely connect the Management Server to Check Point's Infinity Portal. <br>This is a preliminary operation so that the management server can use various Check Point cloud-based security services hosted in the Infinity Portal.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_connect_cloud_services",
            "Securely connect the Management Server to Check Point&#39;s Infinity Portal. &lt;br&gt;This is a preliminary operation so that the management server can use various Check Point cloud-based security services hosted in the Infinity Portal."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_connect_cloud_services:",
            "    auth_token: ${2:string}",
            "    version: ${3:string}",
            "    wait_for_task: ${4|true,false|}",
            "    wait_for_task_timeout: ${5:30}",
            "$0"
        ],
        "description": "Securely connect the Management Server to Check Point&#39;s Infinity Portal. &lt;br&gt;This is a preliminary operation so that the management server can use various Check Point cloud-based security services hosted in the Infinity Portal.",
        "scope": "ansible"
    },
    "Get data-center-object objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_data_center_object_facts",
            "Get data-center-object objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_data_center_object_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    show_membership: ${7|false,true|}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get data-center-object objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Delete the API key. For the key to be invalid publish is needed.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_delete_api_key",
            "Delete the API key. For the key to be invalid publish is needed."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_delete_api_key:",
            "    admin_name: ${2:string}",
            "    admin_uid: ${3:string}",
            "    api_key: ${4:string}",
            "    version: ${5:string}",
            "    wait_for_task: ${6|true,false|}",
            "    wait_for_task_timeout: ${7:30}",
            "$0"
        ],
        "description": "Delete the API key. For the key to be invalid publish is needed.",
        "scope": "ansible"
    },
    "Delete existing object using object name or uid.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_delete_nat_rule",
            "Delete existing object using object name or uid."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_delete_nat_rule:",
            "    details_level: ${2:string}",
            "    package: ${3:string}",
            "    rule_number: ${4:string}",
            "    version: ${5:string}",
            "    wait_for_task: ${6|true,false|}",
            "    wait_for_task_timeout: ${7:30}",
            "$0"
        ],
        "description": "Delete existing object using object name or uid.",
        "scope": "ansible"
    },
    "Delete rules in batch from the same layer. Use this API to achieve optimum performance when removing more than one rule.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_delete_rules_batch",
            "Delete rules in batch from the same layer. Use this API to achieve optimum performance when removing more than one rule."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_delete_rules_batch:",
            "    auto_publish_session: ${2|false,true|}",
            "    objects:",
            "      - ${3:element}",
            "    version: ${4:string}",
            "    wait_for_task: ${5|true,false|}",
            "    wait_for_task_timeout: ${6:30}",
            "$0"
        ],
        "description": "Delete rules in batch from the same layer. Use this API to achieve optimum performance when removing more than one rule.",
        "scope": "ansible"
    },
    "All changes done by user are discarded and removed from database.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_discard",
            "All changes done by user are discarded and removed from database."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_discard:",
            "    uid: ${2:string}",
            "    version: ${3:string}",
            "    wait_for_task: ${4|true,false|}",
            "    wait_for_task_timeout: ${5:30}",
            "$0"
        ],
        "description": "All changes done by user are discarded and removed from database.",
        "scope": "ansible"
    },
    "Disconnect the Management Server from Check Point's Infinity Portal.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_disconnect_cloud_services",
            "Disconnect the Management Server from Check Point&#39;s Infinity Portal."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_disconnect_cloud_services:",
            "    force: ${2|false,true|}",
            "    version: ${3:string}",
            "    wait_for_task: ${4|true,false|}",
            "    wait_for_task_timeout: ${5:30}",
            "$0"
        ],
        "description": "Disconnect the Management Server from Check Point&#39;s Infinity Portal.",
        "scope": "ansible"
    },
    "Manages dns-domain objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_dns_domain",
            "Manages dns-domain objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_dns_domain:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    ignore_errors: ${6|false,true|}",
            "    ignore_warnings: ${7|false,true|}",
            "    is_sub_domain: ${8|false,true|}",
            "    name: ${9:string}",
            "    state: ${10|present,absent|}",
            "    tags:",
            "      - ${11:element}",
            "    version: ${12:string}",
            "    wait_for_task: ${13|true,false|}",
            "    wait_for_task_timeout: ${14:30}",
            "$0"
        ],
        "description": "Manages dns-domain objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get dns-domain objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_dns_domain_facts",
            "Get dns-domain objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_dns_domain_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    show_membership: ${7|false,true|}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get dns-domain objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get domain objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_domain_facts",
            "Get domain objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_domain_facts:",
            "    details_level: ${2:string}",
            "    filter: ${3:string}",
            "    limit: ${4:int}",
            "    name: ${5:string}",
            "    offset: ${6:int}",
            "    order:",
            "      - ${7:element}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get domain objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Manages domain-permissions-profile objects on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_domain_permissions_profile",
            "Manages domain-permissions-profile objects on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_domain_permissions_profile:",
            "    auto_publish_session: ${3|false,true|}",
            "    color: ${4:string}",
            "    comments: ${5:string}",
            "    details_level: ${6:string}",
            "    edit_common_objects: ${7|false,true|}",
            "    ignore_errors: ${11|false,true|}",
            "    ignore_warnings: ${12|false,true|}",
            "    name: ${15:string}",
            "    permission_type: ${17:string}",
            "    state: ${18|present,absent|}",
            "    tags:",
            "      - ${19:element}",
            "    version: ${21:string}",
            "    wait_for_task: ${22|true,false|}",
            "    wait_for_task_timeout: ${23:30}",
            "$0"
        ],
        "description": "Manages domain-permissions-profile objects on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Get domain-permissions-profile objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_domain_permissions_profile_facts",
            "Get domain-permissions-profile objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_domain_permissions_profile_facts:",
            "    details_level: ${2:string}",
            "    domains_to_process:",
            "      - ${3:element}",
            "    filter: ${4:string}",
            "    limit: ${5:int}",
            "    name: ${6:string}",
            "    offset: ${7:int}",
            "    order:",
            "      - ${8:element}",
            "    version: ${9:string}",
            "$0"
        ],
        "description": "Get domain-permissions-profile objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Manages dynamic-object objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_dynamic_object",
            "Manages dynamic-object objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_dynamic_object:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    ignore_errors: ${6|false,true|}",
            "    ignore_warnings: ${7|false,true|}",
            "    name: ${8:string}",
            "    state: ${9|present,absent|}",
            "    tags:",
            "      - ${10:element}",
            "    version: ${11:string}",
            "    wait_for_task: ${12|true,false|}",
            "    wait_for_task_timeout: ${13:30}",
            "$0"
        ],
        "description": "Manages dynamic-object objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get dynamic-object objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_dynamic_object_facts",
            "Get dynamic-object objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_dynamic_object_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    show_membership: ${7|false,true|}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get dynamic-object objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages exception-group objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_exception_group",
            "Manages exception-group objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_exception_group:",
            "    applied_profile: ${2:string}",
            "    apply_on: ${4:string}",
            "    auto_publish_session: ${5|false,true|}",
            "    color: ${6:string}",
            "    comments: ${7:string}",
            "    details_level: ${8:string}",
            "    ignore_errors: ${9|false,true|}",
            "    ignore_warnings: ${10|false,true|}",
            "    name: ${11:string}",
            "    state: ${12|present,absent|}",
            "    tags:",
            "      - ${13:element}",
            "    version: ${14:string}",
            "    wait_for_task: ${15|true,false|}",
            "    wait_for_task_timeout: ${16:30}",
            "$0"
        ],
        "description": "Manages exception-group objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get exception-group objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_exception_group_facts",
            "Get exception-group objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_exception_group_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "$0"
        ],
        "description": "Get exception-group objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get actual platform (Hardware, Version, OS) from gateway, cluster or Check Point host.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_get_platform",
            "Get actual platform (Hardware, Version, OS) from gateway, cluster or Check Point host."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_get_platform:",
            "    auto_publish_session: ${2|false,true|}",
            "    name: ${3:string}",
            "    version: ${4:string}",
            "    wait_for_task: ${5|true,false|}",
            "    wait_for_task_timeout: ${6:30}",
            "$0"
        ],
        "description": "Get actual platform (Hardware, Version, OS) from gateway, cluster or Check Point host.",
        "scope": "ansible"
    },
    "Manages global-assignment objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_global_assignment",
            "Manages global-assignment objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_global_assignment:",
            "    auto_publish_session: ${2|false,true|}",
            "    dependent_domain: ${3:string}",
            "    details_level: ${4:string}",
            "    global_access_policy: ${5:string}",
            "    global_domain: ${6:string}",
            "    global_threat_prevention_policy: ${7:string}",
            "    ignore_errors: ${8|false,true|}",
            "    ignore_warnings: ${9|false,true|}",
            "    manage_protection_actions: ${10|false,true|}",
            "    state: ${11|present,absent|}",
            "    version: ${12:string}",
            "    wait_for_task: ${13|true,false|}",
            "    wait_for_task_timeout: ${14:30}",
            "$0"
        ],
        "description": "Manages global-assignment objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get global-assignment objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_global_assignment_facts",
            "Get global-assignment objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_global_assignment_facts:",
            "    dependent_domain: ${2:string}",
            "    details_level: ${3:string}",
            "    global_domain: ${4:string}",
            "    limit: ${5:int}",
            "    offset: ${6:int}",
            "    order:",
            "      - ${7:element}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get global-assignment objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages group objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_group",
            "Manages group objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_group:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    groups:",
            "      - ${6:element}",
            "    ignore_errors: ${7|false,true|}",
            "    ignore_warnings: ${8|false,true|}",
            "    members:",
            "      - ${9:element}",
            "    name: ${10:string}",
            "    state: ${11|present,absent|}",
            "    tags:",
            "      - ${12:element}",
            "    version: ${13:string}",
            "    wait_for_task: ${14|true,false|}",
            "    wait_for_task_timeout: ${15:30}",
            "$0"
        ],
        "description": "Manages group objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get group objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_group_facts",
            "Get group objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_group_facts:",
            "    dereference_group_members: ${2|false,true|}",
            "    details_level: ${3:string}",
            "    limit: ${4:int}",
            "    name: ${5:string}",
            "    offset: ${6:int}",
            "    order:",
            "      - ${7:element}",
            "    show_as_ranges: ${8|false,true|}",
            "    show_membership: ${9|false,true|}",
            "    version: ${10:string}",
            "$0"
        ],
        "description": "Get group objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages group-with-exclusion objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_group_with_exclusion",
            "Manages group-with-exclusion objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_group_with_exclusion:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    except: ${6:string}",
            "    groups:",
            "      - ${7:element}",
            "    ignore_errors: ${8|false,true|}",
            "    ignore_warnings: ${9|false,true|}",
            "    include: ${10:string}",
            "    name: ${11:string}",
            "    state: ${12|present,absent|}",
            "    tags:",
            "      - ${13:element}",
            "    version: ${14:string}",
            "    wait_for_task: ${15|true,false|}",
            "    wait_for_task_timeout: ${16:30}",
            "$0"
        ],
        "description": "Manages group-with-exclusion objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get group-with-exclusion objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_group_with_exclusion_facts",
            "Get group-with-exclusion objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_group_with_exclusion_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    show_as_ranges: ${7|false,true|}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get group-with-exclusion objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages host objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_host",
            "Manages host objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_host:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    groups:",
            "      - ${6:element}",
            "    ignore_errors: ${8|false,true|}",
            "    ignore_warnings: ${9|false,true|}",
            "    interfaces:",
            "      - ${10:element}",
            "    ip_address: ${11:string}",
            "    ipv4_address: ${12:string}",
            "    ipv6_address: ${13:string}",
            "    name: ${14:string}",
            "    state: ${16|present,absent|}",
            "    tags:",
            "      - ${17:element}",
            "    version: ${18:string}",
            "    wait_for_task: ${19|true,false|}",
            "    wait_for_task_timeout: ${20:30}",
            "$0"
        ],
        "description": "Manages host objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get host objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_host_facts",
            "Get host objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_host_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    show_membership: ${7|false,true|}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get host objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages https-section objects on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_https_section",
            "Manages https-section objects on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_https_section:",
            "    auto_publish_session: ${2|false,true|}",
            "    details_level: ${3:string}",
            "    ignore_errors: ${4|false,true|}",
            "    ignore_warnings: ${5|false,true|}",
            "    layer: ${6:string}",
            "    name: ${7:string}",
            "    position: ${8:string}",
            "    state: ${9|present,absent|}",
            "    version: ${10:string}",
            "    wait_for_task: ${11|true,false|}",
            "    wait_for_task_timeout: ${12:30}",
            "$0"
        ],
        "description": "Manages https-section objects on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Manages identity-tag objects on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_identity_tag",
            "Manages identity-tag objects on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_identity_tag:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    external_identifier: ${6:string}",
            "    ignore_errors: ${7|false,true|}",
            "    ignore_warnings: ${8|false,true|}",
            "    name: ${9:string}",
            "    state: ${10|present,absent|}",
            "    tags:",
            "      - ${11:element}",
            "    version: ${12:string}",
            "    wait_for_task: ${13|true,false|}",
            "    wait_for_task_timeout: ${14:30}",
            "$0"
        ],
        "description": "Manages identity-tag objects on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Get identity-tag objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_identity_tag_facts",
            "Get identity-tag objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_identity_tag_facts:",
            "    details_level: ${2:string}",
            "    domains_to_process:",
            "      - ${3:element}",
            "    filter: ${4:string}",
            "    limit: ${5:int}",
            "    name: ${6:string}",
            "    offset: ${7:int}",
            "    order:",
            "      - ${8:element}",
            "    version: ${9:string}",
            "$0"
        ],
        "description": "Get identity-tag objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Manages idp-administrator-group objects on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_idp_administrator_group",
            "Manages idp-administrator-group objects on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_idp_administrator_group:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    group_id: ${6:string}",
            "    ignore_errors: ${7|false,true|}",
            "    ignore_warnings: ${8|false,true|}",
            "    multi_domain_profile: ${9:string}",
            "    name: ${10:string}",
            "    permissions_profile:",
            "      - ${11:element}",
            "    state: ${12|present,absent|}",
            "    tags:",
            "      - ${13:element}",
            "    version: ${14:string}",
            "    wait_for_task: ${15|true,false|}",
            "    wait_for_task_timeout: ${16:30}",
            "$0"
        ],
        "description": "Manages idp-administrator-group objects on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Get idp-administrator-group objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_idp_administrator_group_facts",
            "Get idp-administrator-group objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_idp_administrator_group_facts:",
            "    details_level: ${2:string}",
            "    domains_to_process:",
            "      - ${3:element}",
            "    filter: ${4:string}",
            "    limit: ${5:int}",
            "    name: ${6:string}",
            "    offset: ${7:int}",
            "    order:",
            "      - ${8:element}",
            "    version: ${9:string}",
            "$0"
        ],
        "description": "Get idp-administrator-group objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Get idp-to-domain-assignment objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_idp_to_domain_assignment_facts",
            "Get idp-to-domain-assignment objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_idp_to_domain_assignment_facts:",
            "    assigned_domain: ${2:string}",
            "    details_level: ${3:string}",
            "    limit: ${4:int}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "$0"
        ],
        "description": "Get idp-to-domain-assignment objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Copies the user database and network objects information to specified targets.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_install_database",
            "Copies the user database and network objects information to specified targets."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_install_database:",
            "    targets:",
            "      - ${2:element}",
            "    version: ${3:string}",
            "    wait_for_task: ${4|true,false|}",
            "    wait_for_task_timeout: ${5:30}",
            "$0"
        ],
        "description": "Copies the user database and network objects information to specified targets.",
        "scope": "ansible"
    },
    "Executes the lsm-install-policy on a given list of targets. Install the LSM policy that defined on the attached LSM profile on the targets devices.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_install_lsm_policy",
            "Executes the lsm-install-policy on a given list of targets. Install the LSM policy that defined on the attached LSM profile on the targets devices."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_install_lsm_policy:",
            "    targets:",
            "      - ${2:element}",
            "    version: ${3:string}",
            "    wait_for_task: ${4|true,false|}",
            "    wait_for_task_timeout: ${5:30}",
            "$0"
        ],
        "description": "Executes the lsm-install-policy on a given list of targets. Install the LSM policy that defined on the attached LSM profile on the targets devices.",
        "scope": "ansible"
    },
    "Executes the lsm-install-settings on a given list of targets. Install the provisioning settings that defined on the object on the targets devices.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_install_lsm_settings",
            "Executes the lsm-install-settings on a given list of targets. Install the provisioning settings that defined on the object on the targets devices."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_install_lsm_settings:",
            "    targets:",
            "      - ${2:element}",
            "    version: ${3:string}",
            "    wait_for_task: ${4|true,false|}",
            "    wait_for_task_timeout: ${5:30}",
            "$0"
        ],
        "description": "Executes the lsm-install-settings on a given list of targets. Install the provisioning settings that defined on the object on the targets devices.",
        "scope": "ansible"
    },
    "install policy on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_install_policy",
            "install policy on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_install_policy:",
            "    access: ${2|false,true|}",
            "    desktop_security: ${3|false,true|}",
            "    install_on_all_cluster_members_or_fail: ${4|false,true|}",
            "    policy_package: ${5:string}",
            "    prepare_only: ${6|false,true|}",
            "    qos: ${7|false,true|}",
            "    revision: ${8:string}",
            "    targets:",
            "      - ${9:element}",
            "    threat_prevention: ${10|false,true|}",
            "    version: ${11:string}",
            "    wait_for_task: ${12|true,false|}",
            "    wait_for_task_timeout: ${13:30}",
            "$0"
        ],
        "description": "install policy on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Installs the software package on target machines.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_install_software_package",
            "Installs the software package on target machines."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_install_software_package:",
            "    concurrency_limit: ${3:int}",
            "    method: ${4:string}",
            "    name: ${5:string}",
            "    package_location: ${6:string}",
            "    targets:",
            "      - ${7:element}",
            "    version: ${8:string}",
            "    wait_for_task: ${9|true,false|}",
            "    wait_for_task_timeout: ${10:30}",
            "$0"
        ],
        "description": "Installs the software package on target machines.",
        "scope": "ansible"
    },
    "Manages interoperable-device objects on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_interoperable_device",
            "Manages interoperable-device objects on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_interoperable_device:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    domains_to_process:",
            "      - ${6:element}",
            "    groups:",
            "      - ${7:element}",
            "    ignore_errors: ${8|false,true|}",
            "    ignore_warnings: ${9|false,true|}",
            "    interfaces:",
            "      - ${10:element}",
            "    ip_address: ${11:string}",
            "    ipv4_address: ${12:string}",
            "    ipv6_address: ${13:string}",
            "    name: ${14:string}",
            "    state: ${15|present,absent|}",
            "    tags:",
            "      - ${16:element}",
            "    version: ${17:string}",
            "    wait_for_task: ${19|true,false|}",
            "    wait_for_task_timeout: ${20:30}",
            "$0"
        ],
        "description": "Manages interoperable-device objects on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Get interoperable-device objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_interoperable_device_facts",
            "Get interoperable-device objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_interoperable_device_facts:",
            "    details_level: ${2:string}",
            "    domains_to_process:",
            "      - ${3:element}",
            "    filter: ${4:string}",
            "    limit: ${5:int}",
            "    name: ${6:string}",
            "    offset: ${7:int}",
            "    order:",
            "      - ${8:element}",
            "    version: ${9:string}",
            "$0"
        ],
        "description": "Get interoperable-device objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Manages lsm-cluster objects on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_lsm_cluster",
            "Manages lsm-cluster objects on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_lsm_cluster:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    ignore_errors: ${6|false,true|}",
            "    ignore_warnings: ${7|false,true|}",
            "    interfaces:",
            "      - ${8:element}",
            "    main_ip_address: ${9:string}",
            "    members:",
            "      - ${10:element}",
            "    name_prefix: ${11:string}",
            "    name_suffix: ${12:string}",
            "    security_profile: ${13:string}",
            "    state: ${14|present,absent|}",
            "    version: ${15:string}",
            "    wait_for_task: ${16|true,false|}",
            "    wait_for_task_timeout: ${17:30}",
            "$0"
        ],
        "description": "Manages lsm-cluster objects on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Get lsm-cluster objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_lsm_cluster_facts",
            "Get lsm-cluster objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_lsm_cluster_facts:",
            "    details_level: ${2:string}",
            "    domains_to_process:",
            "      - ${3:element}",
            "    filter: ${4:string}",
            "    limit: ${5:int}",
            "    name: ${6:string}",
            "    offset: ${7:int}",
            "    order:",
            "      - ${8:element}",
            "    show_membership: ${9|false,true|}",
            "    version: ${10:string}",
            "$0"
        ],
        "description": "Get lsm-cluster objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Get lsm-cluster-profile objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_lsm_cluster_profile_facts",
            "Get lsm-cluster-profile objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_lsm_cluster_profile_facts:",
            "    details_level: ${2:string}",
            "    domains_to_process:",
            "      - ${3:element}",
            "    filter: ${4:string}",
            "    limit: ${5:int}",
            "    name: ${6:string}",
            "    offset: ${7:int}",
            "    order:",
            "      - ${8:element}",
            "    show_membership: ${9|false,true|}",
            "    version: ${10:string}",
            "$0"
        ],
        "description": "Get lsm-cluster-profile objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Manages lsm-gateway objects on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_lsm_gateway",
            "Manages lsm-gateway objects on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_lsm_gateway:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    ignore_errors: ${6|false,true|}",
            "    ignore_warnings: ${7|false,true|}",
            "    name: ${8:string}",
            "    provisioning_state: ${10:string}",
            "    security_profile: ${11:string}",
            "    state: ${13|present,absent|}",
            "    version: ${14:string}",
            "    wait_for_task: ${15|true,false|}",
            "    wait_for_task_timeout: ${16:30}",
            "$0"
        ],
        "description": "Manages lsm-gateway objects on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Get lsm-gateway objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_lsm_gateway_facts",
            "Get lsm-gateway objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_lsm_gateway_facts:",
            "    details_level: ${2:string}",
            "    domains_to_process:",
            "      - ${3:element}",
            "    filter: ${4:string}",
            "    limit: ${5:int}",
            "    name: ${6:string}",
            "    offset: ${7:int}",
            "    order:",
            "      - ${8:element}",
            "    show_membership: ${9|false,true|}",
            "    version: ${10:string}",
            "$0"
        ],
        "description": "Get lsm-gateway objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Get lsm-gateway-profile objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_lsm_gateway_profile_facts",
            "Get lsm-gateway-profile objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_lsm_gateway_profile_facts:",
            "    details_level: ${2:string}",
            "    domains_to_process:",
            "      - ${3:element}",
            "    filter: ${4:string}",
            "    limit: ${5:int}",
            "    name: ${6:string}",
            "    offset: ${7:int}",
            "    order:",
            "      - ${8:element}",
            "    show_membership: ${9|false,true|}",
            "    version: ${10:string}",
            "$0"
        ],
        "description": "Get lsm-gateway-profile objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Executes the lsm-run-script on a given list of targets. Run the given script on the targets devices.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_lsm_run_script",
            "Executes the lsm-run-script on a given list of targets. Run the given script on the targets devices."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_lsm_run_script:",
            "    script: ${2:string}",
            "    script_base64: ${3:string}",
            "    targets:",
            "      - ${4:element}",
            "    version: ${5:string}",
            "    wait_for_task: ${6|true,false|}",
            "    wait_for_task_timeout: ${7:30}",
            "$0"
        ],
        "description": "Executes the lsm-run-script on a given list of targets. Run the given script on the targets devices.",
        "scope": "ansible"
    },
    "Manages md-permissions-profile objects on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_md_permissions_profile",
            "Manages md-permissions-profile objects on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_md_permissions_profile:",
            "    auto_publish_session: ${2|false,true|}",
            "    cme_operations: ${3:string}",
            "    color: ${4:string}",
            "    comments: ${5:string}",
            "    default_profile_global_domains: ${6:string}",
            "    default_profile_local_domains: ${7:string}",
            "    details_level: ${8:string}",
            "    domains_to_process:",
            "      - ${9:element}",
            "    enable_default_profile_for_global_domains: ${10|false,true|}",
            "    enable_default_profile_for_local_domains: ${11|false,true|}",
            "    global_vpn_management: ${12|false,true|}",
            "    ignore_errors: ${13|false,true|}",
            "    ignore_warnings: ${14|false,true|}",
            "    manage_admins: ${15|false,true|}",
            "    manage_global_assignments: ${16|false,true|}",
            "    manage_sessions: ${17|false,true|}",
            "    management_api_login: ${18|false,true|}",
            "    mds_provisioning: ${19|false,true|}",
            "    name: ${20:string}",
            "    permission_level: ${21:string}",
            "    state: ${22|present,absent|}",
            "    tags:",
            "      - ${23:element}",
            "    version: ${24:string}",
            "    view_global_objects_in_domain: ${25|false,true|}",
            "    wait_for_task: ${26|true,false|}",
            "    wait_for_task_timeout: ${27:30}",
            "$0"
        ],
        "description": "Manages md-permissions-profile objects on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Get md-permissions-profile objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_md_permissions_profile_facts",
            "Get md-permissions-profile objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_md_permissions_profile_facts:",
            "    details_level: ${2:string}",
            "    domains_to_process:",
            "      - ${3:element}",
            "    filter: ${4:string}",
            "    limit: ${5:int}",
            "    name: ${6:string}",
            "    offset: ${7:int}",
            "    order:",
            "      - ${8:element}",
            "    version: ${9:string}",
            "$0"
        ],
        "description": "Get md-permissions-profile objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Manages mds objects on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_mds",
            "Manages mds objects on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_mds:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    hardware: ${6:string}",
            "    ignore_errors: ${7|false,true|}",
            "    ignore_warnings: ${8|false,true|}",
            "    ip_address: ${9:string}",
            "    ip_pool_first: ${10:string}",
            "    ip_pool_last: ${11:string}",
            "    ipv4_address: ${12:string}",
            "    ipv4_pool_first: ${13:string}",
            "    ipv4_pool_last: ${14:string}",
            "    ipv6_address: ${15:string}",
            "    ipv6_pool_first: ${16:string}",
            "    ipv6_pool_last: ${17:string}",
            "    name: ${18:string}",
            "    one_time_password: ${19:string}",
            "    os: ${20:string}",
            "    server_type: ${21:string}",
            "    state: ${22|present,absent|}",
            "    tags:",
            "      - ${23:element}",
            "    version: ${24:string}",
            "    wait_for_task: ${25|true,false|}",
            "    wait_for_task_timeout: ${26:30}",
            "$0"
        ],
        "description": "Manages mds objects on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Get Multi-Domain Server (mds) objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_mds_facts",
            "Get Multi-Domain Server (mds) objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_mds_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "$0"
        ],
        "description": "Get Multi-Domain Server (mds) objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages multicast-address-range objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_multicast_address_range",
            "Manages multicast-address-range objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_multicast_address_range:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    groups:",
            "      - ${6:element}",
            "    ignore_errors: ${7|false,true|}",
            "    ignore_warnings: ${8|false,true|}",
            "    ip_address: ${9:string}",
            "    ip_address_first: ${10:string}",
            "    ip_address_last: ${11:string}",
            "    ipv4_address: ${12:string}",
            "    ipv4_address_first: ${13:string}",
            "    ipv4_address_last: ${14:string}",
            "    ipv6_address: ${15:string}",
            "    ipv6_address_first: ${16:string}",
            "    ipv6_address_last: ${17:string}",
            "    name: ${18:string}",
            "    state: ${19|present,absent|}",
            "    tags:",
            "      - ${20:element}",
            "    version: ${21:string}",
            "    wait_for_task: ${22|true,false|}",
            "    wait_for_task_timeout: ${23:30}",
            "$0"
        ],
        "description": "Manages multicast-address-range objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get multicast-address-range objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_multicast_address_range_facts",
            "Get multicast-address-range objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_multicast_address_range_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    show_membership: ${7|false,true|}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get multicast-address-range objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get nat-rule objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_nat_rule_facts",
            "Get nat-rule objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_nat_rule_facts:",
            "    dereference_group_members: ${2|false,true|}",
            "    details_level: ${3:string}",
            "    filter: ${4:string}",
            "    limit: ${6:int}",
            "    offset: ${7:int}",
            "    order:",
            "      - ${8:element}",
            "    package: ${9:string}",
            "    rule_number: ${10:string}",
            "    show_membership: ${11|false,true|}",
            "    use_object_dictionary: ${12|false,true|}",
            "    version: ${13:string}",
            "$0"
        ],
        "description": "Get nat-rule objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Manages nat-section objects on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_nat_section",
            "Manages nat-section objects on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_nat_section:",
            "    auto_publish_session: ${2|false,true|}",
            "    details_level: ${3:string}",
            "    ignore_errors: ${4|false,true|}",
            "    ignore_warnings: ${5|false,true|}",
            "    name: ${6:string}",
            "    package: ${7:string}",
            "    position: ${8:string}",
            "    state: ${9|present,absent|}",
            "    version: ${10:string}",
            "    wait_for_task: ${11|true,false|}",
            "    wait_for_task_timeout: ${12:30}",
            "$0"
        ],
        "description": "Manages nat-section objects on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Manages network objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_network",
            "Manages network objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_network:",
            "    auto_publish_session: ${2|false,true|}",
            "    broadcast: ${3:string}",
            "    color: ${4:string}",
            "    comments: ${5:string}",
            "    details_level: ${6:string}",
            "    groups:",
            "      - ${7:element}",
            "    ignore_errors: ${8|false,true|}",
            "    ignore_warnings: ${9|false,true|}",
            "    mask_length: ${10:int}",
            "    mask_length4: ${11:int}",
            "    mask_length6: ${12:int}",
            "    name: ${13:string}",
            "    state: ${15|present,absent|}",
            "    subnet: ${16:string}",
            "    subnet4: ${17:string}",
            "    subnet6: ${18:string}",
            "    subnet_mask: ${19:string}",
            "    tags:",
            "      - ${20:element}",
            "    version: ${21:string}",
            "    wait_for_task: ${22|true,false|}",
            "    wait_for_task_timeout: ${23:30}",
            "$0"
        ],
        "description": "Manages network objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get network objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_network_facts",
            "Get network objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_network_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    show_membership: ${7|false,true|}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get network objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages network-feed objects on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_network_feed",
            "Manages network-feed objects on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_network_feed:",
            "    auto_publish_session: ${2|false,true|}",
            "    certificate_id: ${3:string}",
            "    color: ${4:string}",
            "    comments: ${5:string}",
            "    custom_header:",
            "      - ${6:element}",
            "    data_column: ${7:int}",
            "    details_level: ${8:string}",
            "    domains_to_process:",
            "      - ${9:element}",
            "    feed_format: ${10:string}",
            "    feed_type: ${11:string}",
            "    feed_url: ${12:string}",
            "    fields_delimiter: ${13:string}",
            "    ignore_errors: ${14|false,true|}",
            "    ignore_lines_that_start_with: ${15:string}",
            "    ignore_warnings: ${16|false,true|}",
            "    json_query: ${17:string}",
            "    name: ${18:string}",
            "    password: ${19:string}",
            "    state: ${20|present,absent|}",
            "    tags:",
            "      - ${21:element}",
            "    update_interval: ${22:int}",
            "    use_gateway_proxy: ${23|false,true|}",
            "    username: ${24:string}",
            "    version: ${25:string}",
            "    wait_for_task: ${26|true,false|}",
            "    wait_for_task_timeout: ${27:30}",
            "$0"
        ],
        "description": "Manages network-feed objects on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Get network-feed objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_network_feed_facts",
            "Get network-feed objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_network_feed_facts:",
            "    details_level: ${2:string}",
            "    domains_to_process:",
            "      - ${3:element}",
            "    filter: ${4:string}",
            "    limit: ${5:int}",
            "    name: ${6:string}",
            "    offset: ${7:int}",
            "    order:",
            "      - ${8:element}",
            "    show_membership: ${9|false,true|}",
            "    version: ${10:string}",
            "$0"
        ],
        "description": "Get network-feed objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Get objects objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_objects_facts",
            "Get objects objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_objects_facts:",
            "    dereference_group_members: ${2|false,true|}",
            "    details_level: ${3:string}",
            "    domains_to_process:",
            "      - ${4:element}",
            "    filter: ${5:string}",
            "    ip_only: ${6|false,true|}",
            "    limit: ${7:int}",
            "    offset: ${8:int}",
            "    order:",
            "      - ${9:element}",
            "    show_membership: ${10|false,true|}",
            "    type: ${11:string}",
            "    uid: ${12:string}",
            "    uids:",
            "      - ${13:element}",
            "    version: ${14:string}",
            "$0"
        ],
        "description": "Get objects objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Manages package objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_package",
            "Manages package objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_package:",
            "    access: ${2|false,true|}",
            "    auto_publish_session: ${4|false,true|}",
            "    color: ${5:string}",
            "    comments: ${6:string}",
            "    desktop_security: ${7|false,true|}",
            "    details_level: ${8:string}",
            "    ignore_errors: ${9|false,true|}",
            "    ignore_warnings: ${10|false,true|}",
            "    installation_targets:",
            "      - ${11:element}",
            "    name: ${12:string}",
            "    qos: ${13|false,true|}",
            "    qos_policy_type: ${14:string}",
            "    state: ${15|present,absent|}",
            "    tags:",
            "      - ${16:element}",
            "    threat_prevention: ${18|false,true|}",
            "    version: ${19:string}",
            "    vpn_traditional_mode: ${20|false,true|}",
            "    wait_for_task: ${21|true,false|}",
            "    wait_for_task_timeout: ${22:30}",
            "$0"
        ],
        "description": "Manages package objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get package objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_package_facts",
            "Get package objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_package_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "$0"
        ],
        "description": "Get package objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get provisioning-profile objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_provisioning_profile_facts",
            "Get provisioning-profile objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_provisioning_profile_facts:",
            "    details_level: ${2:string}",
            "    domains_to_process:",
            "      - ${3:element}",
            "    filter: ${4:string}",
            "    limit: ${5:int}",
            "    name: ${6:string}",
            "    offset: ${7:int}",
            "    order:",
            "      - ${8:element}",
            "    show_membership: ${9|false,true|}",
            "    version: ${10:string}",
            "$0"
        ],
        "description": "Get provisioning-profile objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "All the changes done by this user will be seen by all users only after publish is called.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_publish",
            "All the changes done by this user will be seen by all users only after publish is called."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_publish:",
            "    version: ${2:string}",
            "    wait_for_task: ${3|true,false|}",
            "    wait_for_task_timeout: ${4:30}",
            "$0"
        ],
        "description": "All the changes done by this user will be seen by all users only after publish is called.",
        "scope": "ansible"
    },
    "put file on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_put_file",
            "put file on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_put_file:",
            "    comments: ${2:string}",
            "    file_content: ${3:string}",
            "    file_name: ${4:string}",
            "    file_path: ${5:string}",
            "    targets:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "    wait_for_task: ${8|true,false|}",
            "    wait_for_task_timeout: ${9:30}",
            "$0"
        ],
        "description": "put file on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Workflow feature - Return the session to the submitter administrator.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_reject_session",
            "Workflow feature - Return the session to the submitter administrator."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_reject_session:",
            "    comments: ${2:string}",
            "    uid: ${3:string}",
            "    version: ${4:string}",
            "    wait_for_task: ${5|true,false|}",
            "    wait_for_task_timeout: ${6:30}",
            "$0"
        ],
        "description": "Workflow feature - Return the session to the submitter administrator.",
        "scope": "ansible"
    },
    "Manages repository-script objects on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_repository_script",
            "Manages repository-script objects on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_repository_script:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    ignore_errors: ${6|false,true|}",
            "    ignore_warnings: ${7|false,true|}",
            "    name: ${8:string}",
            "    script_body: ${9:string}",
            "    script_body_base64: ${10:string}",
            "    state: ${11|present,absent|}",
            "    tags:",
            "      - ${12:element}",
            "    version: ${13:string}",
            "    wait_for_task: ${14|true,false|}",
            "    wait_for_task_timeout: ${15:30}",
            "$0"
        ],
        "description": "Manages repository-script objects on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Get repository-script objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_repository_script_facts",
            "Get repository-script objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_repository_script_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "$0"
        ],
        "description": "Get repository-script objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Reset Secure Internal Communication (SIC). To complete the reset operation need also to reset the device in the Check Point Configuration Tool (by running cpconfig in Clish or Expert mode). Communication will not be possible until you reset and re-initialize the device properly.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_reset_sic",
            "Reset Secure Internal Communication (SIC). To complete the reset operation need also to reset the device in the Check Point Configuration Tool (by running cpconfig in Clish or Expert mode). Communication will not be possible until you reset and re-initialize the device properly."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_reset_sic:",
            "    auto_publish_session: ${2|false,true|}",
            "    name: ${3:string}",
            "    version: ${4:string}",
            "    wait_for_task: ${5|true,false|}",
            "    wait_for_task_timeout: ${6:30}",
            "$0"
        ],
        "description": "Reset Secure Internal Communication (SIC). To complete the reset operation need also to reset the device in the Check Point Configuration Tool (by running cpconfig in Clish or Expert mode). Communication will not be possible until you reset and re-initialize the device properly.",
        "scope": "ansible"
    },
    "Runs IPS database update. If \"package-path\" is not provided server will try to get the latest package from the User Center.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_run_ips_update",
            "Runs IPS database update. If &#34;package-path&#34; is not provided server will try to get the latest package from the User Center."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_run_ips_update:",
            "    package_path: ${2:string}",
            "    version: ${3:string}",
            "    wait_for_task: ${4|true,false|}",
            "    wait_for_task_timeout: ${5:30}",
            "$0"
        ],
        "description": "Runs IPS database update. If &#34;package-path&#34; is not provided server will try to get the latest package from the User Center.",
        "scope": "ansible"
    },
    "Executes the script on a given list of targets.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_run_script",
            "Executes the script on a given list of targets."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_run_script:",
            "    args: ${2:string}",
            "    comments: ${3:string}",
            "    script: ${4:string}",
            "    script_name: ${5:string}",
            "    targets:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "    wait_for_task: ${8|true,false|}",
            "    wait_for_task_timeout: ${9:30}",
            "$0"
        ],
        "description": "Executes the script on a given list of targets.",
        "scope": "ansible"
    },
    "Manages security-zone objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_security_zone",
            "Manages security-zone objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_security_zone:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    ignore_errors: ${6|false,true|}",
            "    ignore_warnings: ${7|false,true|}",
            "    name: ${8:string}",
            "    state: ${9|present,absent|}",
            "    tags:",
            "      - ${10:element}",
            "    version: ${11:string}",
            "    wait_for_task: ${12|true,false|}",
            "    wait_for_task_timeout: ${13:30}",
            "$0"
        ],
        "description": "Manages security-zone objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get security-zone objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_security_zone_facts",
            "Get security-zone objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_security_zone_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    show_membership: ${7|false,true|}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get security-zone objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages service-dce-rpc objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_service_dce_rpc",
            "Manages service-dce-rpc objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_service_dce_rpc:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    groups:",
            "      - ${6:element}",
            "    ignore_errors: ${7|false,true|}",
            "    ignore_warnings: ${8|false,true|}",
            "    interface_uuid: ${9:string}",
            "    keep_connections_open_after_policy_installation: ${10|false,true|}",
            "    name: ${11:string}",
            "    state: ${12|present,absent|}",
            "    tags:",
            "      - ${13:element}",
            "    version: ${14:string}",
            "    wait_for_task: ${15|true,false|}",
            "    wait_for_task_timeout: ${16:30}",
            "$0"
        ],
        "description": "Manages service-dce-rpc objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get service-dce-rpc objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_service_dce_rpc_facts",
            "Get service-dce-rpc objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_service_dce_rpc_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    show_membership: ${7|false,true|}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get service-dce-rpc objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages service-group objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_service_group",
            "Manages service-group objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_service_group:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    groups:",
            "      - ${6:element}",
            "    ignore_errors: ${7|false,true|}",
            "    ignore_warnings: ${8|false,true|}",
            "    members:",
            "      - ${9:element}",
            "    name: ${10:string}",
            "    state: ${11|present,absent|}",
            "    tags:",
            "      - ${12:element}",
            "    version: ${13:string}",
            "    wait_for_task: ${14|true,false|}",
            "    wait_for_task_timeout: ${15:30}",
            "$0"
        ],
        "description": "Manages service-group objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get service-group objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_service_group_facts",
            "Get service-group objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_service_group_facts:",
            "    dereference_group_members: ${2|false,true|}",
            "    details_level: ${3:string}",
            "    limit: ${4:int}",
            "    name: ${5:string}",
            "    offset: ${6:int}",
            "    order:",
            "      - ${7:element}",
            "    show_as_ranges: ${8|false,true|}",
            "    show_membership: ${9|false,true|}",
            "    version: ${10:string}",
            "$0"
        ],
        "description": "Get service-group objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages service-icmp objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_service_icmp",
            "Manages service-icmp objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_service_icmp:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    groups:",
            "      - ${6:element}",
            "    icmp_code: ${7:int}",
            "    icmp_type: ${8:int}",
            "    ignore_errors: ${9|false,true|}",
            "    ignore_warnings: ${10|false,true|}",
            "    keep_connections_open_after_policy_installation: ${11|false,true|}",
            "    name: ${12:string}",
            "    state: ${13|present,absent|}",
            "    tags:",
            "      - ${14:element}",
            "    version: ${15:string}",
            "    wait_for_task: ${16|true,false|}",
            "    wait_for_task_timeout: ${17:30}",
            "$0"
        ],
        "description": "Manages service-icmp objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages service-icmp6 objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_service_icmp6",
            "Manages service-icmp6 objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_service_icmp6:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    groups:",
            "      - ${6:element}",
            "    icmp_code: ${7:int}",
            "    icmp_type: ${8:int}",
            "    ignore_errors: ${9|false,true|}",
            "    ignore_warnings: ${10|false,true|}",
            "    keep_connections_open_after_policy_installation: ${11|false,true|}",
            "    name: ${12:string}",
            "    state: ${13|present,absent|}",
            "    tags:",
            "      - ${14:element}",
            "    version: ${15:string}",
            "    wait_for_task: ${16|true,false|}",
            "    wait_for_task_timeout: ${17:30}",
            "$0"
        ],
        "description": "Manages service-icmp6 objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get service-icmp6 objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_service_icmp6_facts",
            "Get service-icmp6 objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_service_icmp6_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    show_membership: ${7|false,true|}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get service-icmp6 objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get service-icmp objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_service_icmp_facts",
            "Get service-icmp objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_service_icmp_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    show_membership: ${7|false,true|}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get service-icmp objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages service-other objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_service_other",
            "Manages service-other objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_service_other:",
            "    accept_replies: ${2|false,true|}",
            "    action: ${3:string}",
            "    auto_publish_session: ${5|false,true|}",
            "    color: ${6:string}",
            "    comments: ${7:string}",
            "    details_level: ${8:string}",
            "    groups:",
            "      - ${9:element}",
            "    ignore_errors: ${10|false,true|}",
            "    ignore_warnings: ${11|false,true|}",
            "    ip_protocol: ${12:int}",
            "    keep_connections_open_after_policy_installation: ${13|false,true|}",
            "    match: ${14:string}",
            "    match_for_any: ${15|false,true|}",
            "    name: ${16:string}",
            "    override_default_settings: ${17|false,true|}",
            "    session_timeout: ${18:int}",
            "    state: ${19|present,absent|}",
            "    sync_connections_on_cluster: ${20|false,true|}",
            "    tags:",
            "      - ${21:element}",
            "    use_default_session_timeout: ${22|false,true|}",
            "    version: ${23:string}",
            "    wait_for_task: ${24|true,false|}",
            "    wait_for_task_timeout: ${25:30}",
            "$0"
        ],
        "description": "Manages service-other objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get service-other objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_service_other_facts",
            "Get service-other objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_service_other_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    show_membership: ${7|false,true|}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get service-other objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages service-rpc objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_service_rpc",
            "Manages service-rpc objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_service_rpc:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    groups:",
            "      - ${6:element}",
            "    ignore_errors: ${7|false,true|}",
            "    ignore_warnings: ${8|false,true|}",
            "    keep_connections_open_after_policy_installation: ${9|false,true|}",
            "    name: ${10:string}",
            "    program_number: ${11:int}",
            "    state: ${12|present,absent|}",
            "    tags:",
            "      - ${13:element}",
            "    version: ${14:string}",
            "    wait_for_task: ${15|true,false|}",
            "    wait_for_task_timeout: ${16:30}",
            "$0"
        ],
        "description": "Manages service-rpc objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get service-rpc objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_service_rpc_facts",
            "Get service-rpc objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_service_rpc_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    show_membership: ${7|false,true|}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get service-rpc objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages service-sctp objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_service_sctp",
            "Manages service-sctp objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_service_sctp:",
            "    auto_publish_session: ${3|false,true|}",
            "    color: ${4:string}",
            "    comments: ${5:string}",
            "    details_level: ${6:string}",
            "    groups:",
            "      - ${7:element}",
            "    ignore_errors: ${8|false,true|}",
            "    ignore_warnings: ${9|false,true|}",
            "    keep_connections_open_after_policy_installation: ${10|false,true|}",
            "    match_for_any: ${11|false,true|}",
            "    name: ${12:string}",
            "    port: ${13:string}",
            "    session_timeout: ${14:int}",
            "    source_port: ${15:string}",
            "    state: ${16|present,absent|}",
            "    sync_connections_on_cluster: ${17|false,true|}",
            "    tags:",
            "      - ${18:element}",
            "    use_default_session_timeout: ${19|false,true|}",
            "    version: ${20:string}",
            "    wait_for_task: ${21|true,false|}",
            "    wait_for_task_timeout: ${22:30}",
            "$0"
        ],
        "description": "Manages service-sctp objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get service-sctp objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_service_sctp_facts",
            "Get service-sctp objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_service_sctp_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    show_membership: ${7|false,true|}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get service-sctp objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages service-tcp objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_service_tcp",
            "Manages service-tcp objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_service_tcp:",
            "    auto_publish_session: ${3|false,true|}",
            "    color: ${4:string}",
            "    comments: ${5:string}",
            "    details_level: ${6:string}",
            "    groups:",
            "      - ${7:element}",
            "    ignore_errors: ${8|false,true|}",
            "    ignore_warnings: ${9|false,true|}",
            "    keep_connections_open_after_policy_installation: ${10|false,true|}",
            "    match_by_protocol_signature: ${11|false,true|}",
            "    match_for_any: ${12|false,true|}",
            "    name: ${13:string}",
            "    override_default_settings: ${14|false,true|}",
            "    port: ${15:string}",
            "    protocol: ${16:string}",
            "    session_timeout: ${17:int}",
            "    source_port: ${18:string}",
            "    state: ${19|present,absent|}",
            "    sync_connections_on_cluster: ${20|false,true|}",
            "    tags:",
            "      - ${21:element}",
            "    use_default_session_timeout: ${22|false,true|}",
            "    version: ${23:string}",
            "    wait_for_task: ${24|true,false|}",
            "    wait_for_task_timeout: ${25:30}",
            "$0"
        ],
        "description": "Manages service-tcp objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get service-tcp objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_service_tcp_facts",
            "Get service-tcp objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_service_tcp_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    show_membership: ${7|false,true|}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get service-tcp objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages service-udp objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_service_udp",
            "Manages service-udp objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_service_udp:",
            "    accept_replies: ${2|false,true|}",
            "    auto_publish_session: ${4|false,true|}",
            "    color: ${5:string}",
            "    comments: ${6:string}",
            "    details_level: ${7:string}",
            "    groups:",
            "      - ${8:element}",
            "    ignore_errors: ${9|false,true|}",
            "    ignore_warnings: ${10|false,true|}",
            "    keep_connections_open_after_policy_installation: ${11|false,true|}",
            "    match_by_protocol_signature: ${12|false,true|}",
            "    match_for_any: ${13|false,true|}",
            "    name: ${14:string}",
            "    override_default_settings: ${15|false,true|}",
            "    port: ${16:string}",
            "    protocol: ${17:string}",
            "    session_timeout: ${18:int}",
            "    source_port: ${19:string}",
            "    state: ${20|present,absent|}",
            "    sync_connections_on_cluster: ${21|false,true|}",
            "    tags:",
            "      - ${22:element}",
            "    use_default_session_timeout: ${23|false,true|}",
            "    version: ${24:string}",
            "    wait_for_task: ${25|true,false|}",
            "    wait_for_task_timeout: ${26:30}",
            "$0"
        ],
        "description": "Manages service-udp objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get service-udp objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_service_udp_facts",
            "Get service-udp objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_service_udp_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    show_membership: ${7|false,true|}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get service-udp objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get session objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_session_facts",
            "Get session objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_session_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    offset: ${4:int}",
            "    order:",
            "      - ${5:element}",
            "    version: ${6:string}",
            "    view_published_sessions: ${7|false,true|}",
            "$0"
        ],
        "description": "Get session objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Edit existing object using object name or uid.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_threat_protection_override",
            "Edit existing object using object name or uid."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_threat_protection_override:",
            "    comments: ${2:string}",
            "    details_level: ${3:string}",
            "    follow_up: ${4|false,true|}",
            "    name: ${5:string}",
            "    overrides:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "    wait_for_task: ${8|true,false|}",
            "    wait_for_task_timeout: ${9:30}",
            "$0"
        ],
        "description": "Edit existing object using object name or uid.",
        "scope": "ansible"
    },
    "Edit Global Properties.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_set_global_properties",
            "Edit Global Properties."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_set_global_properties:",
            "    allow_remote_registration_of_opsec_products: ${3|false,true|}",
            "    auto_publish_session: ${5|false,true|}",
            "    details_level: ${9:string}",
            "    domains_to_process:",
            "      - ${10:element}",
            "    ignore_errors: ${13|false,true|}",
            "    ignore_warnings: ${14|false,true|}",
            "    non_unique_ip_address_ranges:",
            "      - ${17:element}",
            "    num_spoofing_errs_that_trigger_brute_force: ${18:int}",
            "    version: ${27:string}",
            "    wait_for_task: ${29|true,false|}",
            "    wait_for_task_timeout: ${30:30}",
            "$0"
        ],
        "description": "Edit Global Properties.",
        "scope": "ansible"
    },
    "Set default Identity Provider assignment to be use for Management server administrator access.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_set_idp_default_assignment",
            "Set default Identity Provider assignment to be use for Management server administrator access."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_set_idp_default_assignment:",
            "    auto_publish_session: ${2|false,true|}",
            "    details_level: ${3:string}",
            "    identity_provider: ${4:string}",
            "    ignore_errors: ${5|false,true|}",
            "    ignore_warnings: ${6|false,true|}",
            "    version: ${7:string}",
            "    wait_for_task: ${8|true,false|}",
            "    wait_for_task_timeout: ${9:30}",
            "$0"
        ],
        "description": "Set default Identity Provider assignment to be use for Management server administrator access.",
        "scope": "ansible"
    },
    "Set Identity Provider assignment to domain, to allow administrator login to that domain using that identity provider, if there is no Identity Provider assigned to the domain the 'idp-default-assignment' will be used. This command only available  for Multi-Domain server.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_set_idp_to_domain_assignment",
            "Set Identity Provider assignment to domain, to allow administrator login to that domain using that identity provider, if there is no Identity Provider assigned to the domain the &#39;idp-default-assignment&#39; will be used. This command only available  for Multi-Domain server."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_set_idp_to_domain_assignment:",
            "    assigned_domain: ${2:string}",
            "    auto_publish_session: ${3|false,true|}",
            "    details_level: ${4:string}",
            "    identity_provider: ${5:string}",
            "    ignore_errors: ${6|false,true|}",
            "    ignore_warnings: ${7|false,true|}",
            "    using_default: ${8|false,true|}",
            "    version: ${9:string}",
            "    wait_for_task: ${10|true,false|}",
            "    wait_for_task_timeout: ${11:30}",
            "$0"
        ],
        "description": "Set Identity Provider assignment to domain, to allow administrator login to that domain using that identity provider, if there is no Identity Provider assigned to the domain the &#39;idp-default-assignment&#39; will be used. This command only available  for Multi-Domain server.",
        "scope": "ansible"
    },
    "Edit user's current session.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_set_session",
            "Edit user&#39;s current session."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_set_session:",
            "    color: ${2:string}",
            "    comments: ${3:string}",
            "    description: ${4:string}",
            "    details_level: ${5:string}",
            "    ignore_errors: ${6|false,true|}",
            "    ignore_warnings: ${7|false,true|}",
            "    new_name: ${8:string}",
            "    tags:",
            "      - ${9:element}",
            "    version: ${10:string}",
            "    wait_for_task: ${11|true,false|}",
            "    wait_for_task_timeout: ${12:30}",
            "$0"
        ],
        "description": "Edit user&#39;s current session.",
        "scope": "ansible"
    },
    "Edit Threat Prevention's Blades' Settings.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_set_threat_advanced_settings",
            "Edit Threat Prevention&#39;s Blades&#39; Settings."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_set_threat_advanced_settings:",
            "    auto_publish_session: ${2|false,true|}",
            "    feed_retrieving_interval: ${3:string}",
            "    httpi_non_standard_ports: ${4|false,true|}",
            "    ignore_errors: ${5|false,true|}",
            "    ignore_warnings: ${6|false,true|}",
            "    internal_error_fail_mode: ${7:string}",
            "    log_unification_timeout: ${8:int}",
            "    version: ${10:string}",
            "    wait_for_task: ${11|true,false|}",
            "    wait_for_task_timeout: ${12:30}",
            "$0"
        ],
        "description": "Edit Threat Prevention&#39;s Blades&#39; Settings.",
        "scope": "ansible"
    },
    "Retrieve existing object using object name or uid.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_show_nat_section",
            "Retrieve existing object using object name or uid."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_show_nat_section:",
            "    details_level: ${2:string}",
            "    name: ${3:string}",
            "    package: ${4:string}",
            "    version: ${5:string}",
            "    wait_for_task: ${6|true,false|}",
            "    wait_for_task_timeout: ${7:30}",
            "$0"
        ],
        "description": "Retrieve existing object using object name or uid.",
        "scope": "ansible"
    },
    "Show the connection status of the Management Server to Check Point's Infinity Portal.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_show_cloud_services",
            "Show the connection status of the Management Server to Check Point&#39;s Infinity Portal."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_show_cloud_services:",
            "    version: ${2:string}",
            "    wait_for_task: ${3|true,false|}",
            "    wait_for_task_timeout: ${4:30}",
            "$0"
        ],
        "description": "Show the connection status of the Management Server to Check Point&#39;s Infinity Portal.",
        "scope": "ansible"
    },
    "Retrieve Global Properties.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_show_global_properties",
            "Retrieve Global Properties."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_show_global_properties:",
            "    version: ${2:string}",
            "    wait_for_task: ${3|true,false|}",
            "    wait_for_task_timeout: ${4:30}",
            "$0"
        ],
        "description": "Retrieve Global Properties.",
        "scope": "ansible"
    },
    "Retrieve existing HTTPS Inspection section using section name or uid and layer name.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_show_https_section",
            "Retrieve existing HTTPS Inspection section using section name or uid and layer name."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_show_https_section:",
            "    details_level: ${2:string}",
            "    layer: ${3:string}",
            "    name: ${4:string}",
            "    version: ${5:string}",
            "    wait_for_task: ${6|true,false|}",
            "    wait_for_task_timeout: ${7:30}",
            "$0"
        ],
        "description": "Retrieve existing HTTPS Inspection section using section name or uid and layer name.",
        "scope": "ansible"
    },
    "Retrieve default Identity Provider assignment that used for Management server administrator access.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_show_idp_default_assignment",
            "Retrieve default Identity Provider assignment that used for Management server administrator access."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_show_idp_default_assignment:",
            "    details_level: ${2:string}",
            "    version: ${3:string}",
            "    wait_for_task: ${4|true,false|}",
            "    wait_for_task_timeout: ${5:30}",
            "$0"
        ],
        "description": "Retrieve default Identity Provider assignment that used for Management server administrator access.",
        "scope": "ansible"
    },
    "Showing logs according to the given filter.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_show_logs",
            "Showing logs according to the given filter."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_show_logs:",
            "    ignore_warnings: ${2|false,true|}",
            "    query_id: ${4:string}",
            "    version: ${5:string}",
            "    wait_for_task: ${6|true,false|}",
            "    wait_for_task_timeout: ${7:30}",
            "$0"
        ],
        "description": "Showing logs according to the given filter.",
        "scope": "ansible"
    },
    "Shows the status of all processes in the current machine (Multi-Domain Server and all Domain Management / Log Servers). <br>This command is available only on Multi-Domain Server.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_show_servers_and_processes",
            "Shows the status of all processes in the current machine (Multi-Domain Server and all Domain Management / Log Servers). &lt;br&gt;This command is available only on Multi-Domain Server."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_show_servers_and_processes:",
            "    version: ${2:string}",
            "    wait_for_task: ${3|true,false|}",
            "    wait_for_task_timeout: ${4:30}",
            "$0"
        ],
        "description": "Shows the status of all processes in the current machine (Multi-Domain Server and all Domain Management / Log Servers). &lt;br&gt;This command is available only on Multi-Domain Server.",
        "scope": "ansible"
    },
    "Gets the software package information from the cloud.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_show_software_package_details",
            "Gets the software package information from the cloud."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_show_software_package_details:",
            "    name: ${2:string}",
            "    version: ${3:string}",
            "    wait_for_task: ${4|true,false|}",
            "    wait_for_task_timeout: ${5:30}",
            "$0"
        ],
        "description": "Gets the software package information from the cloud.",
        "scope": "ansible"
    },
    "Show task progress and details.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_show_task",
            "Show task progress and details."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_show_task:",
            "    details_level: ${2:string}",
            "    task_id:",
            "      - ${3:element}",
            "    version: ${4:string}",
            "    wait_for_task: ${5|true,false|}",
            "    wait_for_task_timeout: ${6:30}",
            "$0"
        ],
        "description": "Show task progress and details.",
        "scope": "ansible"
    },
    "Retrieve all tasks and show their progress and details.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_show_tasks",
            "Retrieve all tasks and show their progress and details."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_show_tasks:",
            "    details_level: ${2:string}",
            "    from_date: ${3:string}",
            "    initiator: ${4:string}",
            "    limit: ${5:int}",
            "    offset: ${6:int}",
            "    order:",
            "      - ${7:element}",
            "    status: ${8:string}",
            "    to_date: ${9:string}",
            "    version: ${10:string}",
            "    wait_for_task: ${11|true,false|}",
            "    wait_for_task_timeout: ${12:30}",
            "$0"
        ],
        "description": "Retrieve all tasks and show their progress and details.",
        "scope": "ansible"
    },
    "Show Threat Prevention's Blades' Settings.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_show_threat_advanced_settings",
            "Show Threat Prevention&#39;s Blades&#39; Settings."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_show_threat_advanced_settings:",
            "    version: ${2:string}",
            "    wait_for_task: ${3|true,false|}",
            "    wait_for_task_timeout: ${4:30}",
            "$0"
        ],
        "description": "Show Threat Prevention&#39;s Blades&#39; Settings.",
        "scope": "ansible"
    },
    "Manages simple-cluster objects on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_simple_cluster",
            "Manages simple-cluster objects on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_simple_cluster:",
            "    anti_bot: ${2|false,true|}",
            "    anti_virus: ${3|false,true|}",
            "    application_control: ${4|false,true|}",
            "    auto_publish_session: ${5|false,true|}",
            "    cluster_mode: ${6:string}",
            "    cluster_version: ${7:string}",
            "    color: ${8:string}",
            "    comments: ${9:string}",
            "    content_awareness: ${10|false,true|}",
            "    details_level: ${11:string}",
            "    firewall: ${12|false,true|}",
            "    groups:",
            "      - ${14:element}",
            "    hardware: ${15:string}",
            "    ignore_errors: ${16|false,true|}",
            "    ignore_warnings: ${17|false,true|}",
            "    interfaces:",
            "      - ${18:element}",
            "    ip_address: ${19:string}",
            "    ips: ${20|false,true|}",
            "    ipv4_address: ${21:string}",
            "    ipv6_address: ${22:string}",
            "    members:",
            "      - ${23:element}",
            "    name: ${24:string}",
            "    os_name: ${25:string}",
            "    send_alerts_to_server:",
            "      - ${27:element}",
            "    send_logs_to_backup_server:",
            "      - ${28:element}",
            "    send_logs_to_server:",
            "      - ${29:element}",
            "    show_portals_certificate: ${30|false,true|}",
            "    state: ${31|present,absent|}",
            "    tags:",
            "      - ${32:element}",
            "    threat_emulation: ${33|false,true|}",
            "    threat_extraction: ${34|false,true|}",
            "    threat_prevention_mode: ${35:string}",
            "    url_filtering: ${36|false,true|}",
            "    version: ${38:string}",
            "    vpn: ${39|false,true|}",
            "    wait_for_task: ${41|true,false|}",
            "    wait_for_task_timeout: ${42:30}",
            "$0"
        ],
        "description": "Manages simple-cluster objects on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Get simple-cluster objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_simple_cluster_facts",
            "Get simple-cluster objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_simple_cluster_facts:",
            "    details_level: ${2:string}",
            "    domains_to_process:",
            "      - ${3:element}",
            "    filter: ${4:string}",
            "    limit: ${5:int}",
            "    limit_interfaces: ${6:int}",
            "    name: ${7:string}",
            "    offset: ${8:int}",
            "    order:",
            "      - ${9:element}",
            "    show_membership: ${10|false,true|}",
            "    show_portals_certificate: ${11|false,true|}",
            "    version: ${12:string}",
            "$0"
        ],
        "description": "Get simple-cluster objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Manages simple-gateway objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_simple_gateway",
            "Manages simple-gateway objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_simple_gateway:",
            "    anti_bot: ${2|false,true|}",
            "    anti_virus: ${3|false,true|}",
            "    application_control: ${4|false,true|}",
            "    auto_publish_session: ${5|false,true|}",
            "    color: ${6:string}",
            "    comments: ${7:string}",
            "    content_awareness: ${8|false,true|}",
            "    details_level: ${9:string}",
            "    firewall: ${10|false,true|}",
            "    gateway_version: ${12:string}",
            "    groups:",
            "      - ${13:element}",
            "    ignore_errors: ${14|false,true|}",
            "    ignore_warnings: ${15|false,true|}",
            "    interfaces:",
            "      - ${16:element}",
            "    ip_address: ${17:string}",
            "    ips: ${18|false,true|}",
            "    ipv4_address: ${19:string}",
            "    ipv6_address: ${20:string}",
            "    name: ${22:string}",
            "    one_time_password: ${23:string}",
            "    os_name: ${24:string}",
            "    save_logs_locally: ${25|false,true|}",
            "    send_alerts_to_server:",
            "      - ${26:element}",
            "    send_logs_to_backup_server:",
            "      - ${27:element}",
            "    send_logs_to_server:",
            "      - ${28:element}",
            "    state: ${29|present,absent|}",
            "    tags:",
            "      - ${30:element}",
            "    threat_emulation: ${31|false,true|}",
            "    threat_extraction: ${32|false,true|}",
            "    url_filtering: ${33|false,true|}",
            "    version: ${34:string}",
            "    vpn: ${35|false,true|}",
            "    wait_for_task: ${37|true,false|}",
            "    wait_for_task_timeout: ${38:30}",
            "$0"
        ],
        "description": "Manages simple-gateway objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get simple-gateway objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_simple_gateway_facts",
            "Get simple-gateway objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_simple_gateway_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    show_membership: ${7|false,true|}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get simple-gateway objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages smtp-server objects on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_smtp_server",
            "Manages smtp-server objects on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_smtp_server:",
            "    authentication: ${2|false,true|}",
            "    auto_publish_session: ${3|false,true|}",
            "    color: ${4:string}",
            "    comments: ${5:string}",
            "    details_level: ${6:string}",
            "    domains_to_process:",
            "      - ${7:element}",
            "    encryption: ${8:string}",
            "    ignore_errors: ${9|false,true|}",
            "    ignore_warnings: ${10|false,true|}",
            "    name: ${11:string}",
            "    password: ${12:string}",
            "    port: ${13:int}",
            "    server: ${14:string}",
            "    state: ${15|present,absent|}",
            "    tags:",
            "      - ${16:element}",
            "    username: ${17:string}",
            "    version: ${18:string}",
            "    wait_for_task: ${19|true,false|}",
            "    wait_for_task_timeout: ${20:30}",
            "$0"
        ],
        "description": "Manages smtp-server objects on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Get smtp-server objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_smtp_server_facts",
            "Get smtp-server objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_smtp_server_facts:",
            "    details_level: ${2:string}",
            "    domains_to_process:",
            "      - ${3:element}",
            "    filter: ${4:string}",
            "    limit: ${5:int}",
            "    name: ${6:string}",
            "    offset: ${7:int}",
            "    order:",
            "      - ${8:element}",
            "    version: ${9:string}",
            "$0"
        ],
        "description": "Get smtp-server objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Workflow feature - Submit the session for approval.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_submit_session",
            "Workflow feature - Submit the session for approval."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_submit_session:",
            "    uid: ${2:string}",
            "    version: ${3:string}",
            "    wait_for_task: ${4|true,false|}",
            "    wait_for_task_timeout: ${5:30}",
            "$0"
        ],
        "description": "Workflow feature - Submit the session for approval.",
        "scope": "ansible"
    },
    "Manages tag objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_tag",
            "Manages tag objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_tag:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    ignore_errors: ${6|false,true|}",
            "    ignore_warnings: ${7|false,true|}",
            "    name: ${8:string}",
            "    state: ${9|present,absent|}",
            "    tags:",
            "      - ${10:element}",
            "    version: ${11:string}",
            "    wait_for_task: ${12|true,false|}",
            "    wait_for_task_timeout: ${13:30}",
            "$0"
        ],
        "description": "Manages tag objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get tag objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_tag_facts",
            "Get tag objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_tag_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "$0"
        ],
        "description": "Get tag objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Test SIC Status reflects the state of the gateway after it has received the certificate issued by the ICA. If the SIC status is Unknown then there is no connection between the gateway and the Security Management Server. If the SIC status is No Communication, an error message will appear. It may contain specific instructions on how to fix the situation.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_test_sic_status",
            "Test SIC Status reflects the state of the gateway after it has received the certificate issued by the ICA. If the SIC status is Unknown then there is no connection between the gateway and the Security Management Server. If the SIC status is No Communication, an error message will appear. It may contain specific instructions on how to fix the situation."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_test_sic_status:",
            "    name: ${2:string}",
            "    version: ${3:string}",
            "    wait_for_task: ${4|true,false|}",
            "    wait_for_task_timeout: ${5:30}",
            "$0"
        ],
        "description": "Test SIC Status reflects the state of the gateway after it has received the certificate issued by the ICA. If the SIC status is Unknown then there is no connection between the gateway and the Security Management Server. If the SIC status is No Communication, an error message will appear. It may contain specific instructions on how to fix the situation.",
        "scope": "ansible"
    },
    "Manages threat-exception objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_threat_exception",
            "Manages threat-exception objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_threat_exception:",
            "    action: ${2:string}",
            "    auto_publish_session: ${3|false,true|}",
            "    comments: ${4:string}",
            "    destination:",
            "      - ${5:element}",
            "    destination_negate: ${6|false,true|}",
            "    details_level: ${7:string}",
            "    enabled: ${8|false,true|}",
            "    exception_group_name: ${9:string}",
            "    exception_group_uid: ${10:string}",
            "    ignore_errors: ${11|false,true|}",
            "    ignore_warnings: ${12|false,true|}",
            "    install_on:",
            "      - ${13:element}",
            "    layer: ${14:string}",
            "    name: ${15:string}",
            "    position: ${16:string}",
            "    protected_scope:",
            "      - ${17:element}",
            "    protected_scope_negate: ${18|false,true|}",
            "    protection_or_site:",
            "      - ${19:element}",
            "    rule_name: ${20:string}",
            "    service:",
            "      - ${21:element}",
            "    service_negate: ${22|false,true|}",
            "    source:",
            "      - ${23:element}",
            "    source_negate: ${24|false,true|}",
            "    state: ${25|present,absent|}",
            "    track: ${26:string}",
            "    version: ${27:string}",
            "    wait_for_task: ${28|true,false|}",
            "    wait_for_task_timeout: ${29:30}",
            "$0"
        ],
        "description": "Manages threat-exception objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get threat-exception objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_threat_exception_facts",
            "Get threat-exception objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_threat_exception_facts:",
            "    dereference_group_members: ${2|false,true|}",
            "    details_level: ${3:string}",
            "    exception_group_name: ${4:string}",
            "    exception_group_uid: ${5:string}",
            "    filter: ${6:string}",
            "    layer: ${8:string}",
            "    limit: ${9:int}",
            "    name: ${10:string}",
            "    offset: ${11:int}",
            "    order:",
            "      - ${12:element}",
            "    package: ${13:string}",
            "    rule_name: ${14:string}",
            "    show_membership: ${15|false,true|}",
            "    use_object_dictionary: ${16|false,true|}",
            "    version: ${17:string}",
            "$0"
        ],
        "description": "Get threat-exception objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages threat-indicator objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_threat_indicator",
            "Manages threat-indicator objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_threat_indicator:",
            "    action: ${2:string}",
            "    auto_publish_session: ${3|false,true|}",
            "    color: ${4:string}",
            "    comments: ${5:string}",
            "    details_level: ${6:string}",
            "    ignore_errors: ${7|false,true|}",
            "    ignore_warnings: ${8|false,true|}",
            "    name: ${9:string}",
            "    observables:",
            "      - ${10:element}",
            "    observables_raw_data: ${11:string}",
            "    profile_overrides:",
            "      - ${12:element}",
            "    state: ${13|present,absent|}",
            "    tags:",
            "      - ${14:element}",
            "    version: ${15:string}",
            "    wait_for_task: ${16|true,false|}",
            "    wait_for_task_timeout: ${17:30}",
            "$0"
        ],
        "description": "Manages threat-indicator objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get threat-indicator objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_threat_indicator_facts",
            "Get threat-indicator objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_threat_indicator_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "$0"
        ],
        "description": "Get threat-indicator objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages threat-layer objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_threat_layer",
            "Manages threat-layer objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_threat_layer:",
            "    add_default_rule: ${2|false,true|}",
            "    auto_publish_session: ${3|false,true|}",
            "    color: ${4:string}",
            "    comments: ${5:string}",
            "    details_level: ${6:string}",
            "    ignore_errors: ${7|false,true|}",
            "    ignore_warnings: ${8|false,true|}",
            "    name: ${9:string}",
            "    state: ${10|present,absent|}",
            "    tags:",
            "      - ${11:element}",
            "    version: ${12:string}",
            "    wait_for_task: ${13|true,false|}",
            "    wait_for_task_timeout: ${14:30}",
            "$0"
        ],
        "description": "Manages threat-layer objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get threat-layer objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_threat_layer_facts",
            "Get threat-layer objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_threat_layer_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "$0"
        ],
        "description": "Get threat-layer objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages threat-profile objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_threat_profile",
            "Manages threat-profile objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_threat_profile:",
            "    activate_protections_by_extended_attributes:",
            "      - ${2:element}",
            "    active_protections_performance_impact: ${3:string}",
            "    active_protections_severity: ${4:string}",
            "    anti_bot: ${5|false,true|}",
            "    anti_virus: ${6|false,true|}",
            "    auto_publish_session: ${7|false,true|}",
            "    color: ${8:string}",
            "    comments: ${9:string}",
            "    confidence_level_high: ${10:string}",
            "    confidence_level_low: ${11:string}",
            "    confidence_level_medium: ${12:string}",
            "    deactivate_protections_by_extended_attributes:",
            "      - ${13:element}",
            "    details_level: ${14:string}",
            "    ignore_errors: ${15|false,true|}",
            "    ignore_warnings: ${16|false,true|}",
            "    indicator_overrides:",
            "      - ${17:element}",
            "    ips: ${18|false,true|}",
            "    name: ${21:string}",
            "    overrides:",
            "      - ${22:element}",
            "    state: ${23|present,absent|}",
            "    tags:",
            "      - ${24:element}",
            "    threat_emulation: ${25|false,true|}",
            "    use_extended_attributes: ${26|false,true|}",
            "    use_indicators: ${27|false,true|}",
            "    version: ${28:string}",
            "    wait_for_task: ${29|true,false|}",
            "    wait_for_task_timeout: ${30:30}",
            "$0"
        ],
        "description": "Manages threat-profile objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get threat-profile objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_threat_profile_facts",
            "Get threat-profile objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_threat_profile_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "$0"
        ],
        "description": "Get threat-profile objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages threat-rule objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_threat_rule",
            "Manages threat-rule objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_threat_rule:",
            "    action: ${2:string}",
            "    auto_publish_session: ${3|false,true|}",
            "    comments: ${4:string}",
            "    destination:",
            "      - ${5:element}",
            "    destination_negate: ${6|false,true|}",
            "    details_level: ${7:string}",
            "    enabled: ${8|false,true|}",
            "    ignore_errors: ${9|false,true|}",
            "    ignore_warnings: ${10|false,true|}",
            "    install_on:",
            "      - ${11:element}",
            "    layer: ${12:string}",
            "    name: ${13:string}",
            "    position: ${14:string}",
            "    protected_scope:",
            "      - ${15:element}",
            "    protected_scope_negate: ${16|false,true|}",
            "    service:",
            "      - ${17:element}",
            "    service_negate: ${18|false,true|}",
            "    source:",
            "      - ${19:element}",
            "    source_negate: ${20|false,true|}",
            "    state: ${21|present,absent|}",
            "    track: ${22:string}",
            "    version: ${24:string}",
            "    wait_for_task: ${25|true,false|}",
            "    wait_for_task_timeout: ${26:30}",
            "$0"
        ],
        "description": "Manages threat-rule objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get threat-rule objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_threat_rule_facts",
            "Get threat-rule objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_threat_rule_facts:",
            "    dereference_group_members: ${2|false,true|}",
            "    details_level: ${3:string}",
            "    filter: ${4:string}",
            "    layer: ${6:string}",
            "    limit: ${7:int}",
            "    name: ${8:string}",
            "    offset: ${9:int}",
            "    order:",
            "      - ${10:element}",
            "    package: ${11:string}",
            "    show_membership: ${12|false,true|}",
            "    use_object_dictionary: ${13|false,true|}",
            "    version: ${14:string}",
            "$0"
        ],
        "description": "Get threat-rule objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages time objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_time",
            "Manages time objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_time:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    end_never: ${7|false,true|}",
            "    groups:",
            "      - ${8:element}",
            "    hours_ranges:",
            "      - ${9:element}",
            "    ignore_errors: ${10|false,true|}",
            "    ignore_warnings: ${11|false,true|}",
            "    name: ${12:string}",
            "    start_now: ${15|false,true|}",
            "    state: ${16|present,absent|}",
            "    tags:",
            "      - ${17:element}",
            "    version: ${18:string}",
            "    wait_for_task: ${19|true,false|}",
            "    wait_for_task_timeout: ${20:30}",
            "$0"
        ],
        "description": "Manages time objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get time objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_time_facts",
            "Get time objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_time_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "$0"
        ],
        "description": "Get time objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages trusted-client objects on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_trusted_client",
            "Manages trusted-client objects on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_trusted_client:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    domains_assignment:",
            "      - ${6:element}",
            "    ignore_errors: ${7|false,true|}",
            "    ignore_warnings: ${8|false,true|}",
            "    ip_address: ${9:string}",
            "    ip_address_first: ${10:string}",
            "    ip_address_last: ${11:string}",
            "    ipv4_address: ${12:string}",
            "    ipv4_address_first: ${13:string}",
            "    ipv4_address_last: ${14:string}",
            "    ipv6_address: ${15:string}",
            "    ipv6_address_first: ${16:string}",
            "    ipv6_address_last: ${17:string}",
            "    mask_length: ${18:int}",
            "    mask_length4: ${19:int}",
            "    mask_length6: ${20:int}",
            "    multi_domain_server_trusted_client: ${21|false,true|}",
            "    name: ${22:string}",
            "    state: ${23|present,absent|}",
            "    tags:",
            "      - ${24:element}",
            "    type: ${25:string}",
            "    version: ${26:string}",
            "    wait_for_task: ${27|true,false|}",
            "    wait_for_task_timeout: ${28:30}",
            "    wild_card: ${29:string}",
            "$0"
        ],
        "description": "Manages trusted-client objects on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Get trusted-client objects facts on Checkpoint over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_trusted_client_facts",
            "Get trusted-client objects facts on Checkpoint over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_trusted_client_facts:",
            "    details_level: ${2:string}",
            "    filter: ${3:string}",
            "    limit: ${4:int}",
            "    name: ${5:string}",
            "    offset: ${6:int}",
            "    order:",
            "      - ${7:element}",
            "    version: ${8:string}",
            "$0"
        ],
        "description": "Get trusted-client objects facts on Checkpoint over Web Services API",
        "scope": "ansible"
    },
    "Uninstalls the software package from target machines.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_uninstall_software_package",
            "Uninstalls the software package from target machines."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_uninstall_software_package:",
            "    concurrency_limit: ${3:int}",
            "    name: ${4:string}",
            "    targets:",
            "      - ${5:element}",
            "    version: ${6:string}",
            "    wait_for_task: ${7|true,false|}",
            "    wait_for_task_timeout: ${8:30}",
            "$0"
        ],
        "description": "Uninstalls the software package from target machines.",
        "scope": "ansible"
    },
    "Executes the update-provisioned-satellites on center gateways of VPN communities.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_update_provisioned_satellites",
            "Executes the update-provisioned-satellites on center gateways of VPN communities."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_update_provisioned_satellites:",
            "    version: ${2:string}",
            "    vpn_center_gateways:",
            "      - ${3:element}",
            "    wait_for_task: ${4|true,false|}",
            "    wait_for_task_timeout: ${5:30}",
            "$0"
        ],
        "description": "Executes the update-provisioned-satellites on center gateways of VPN communities.",
        "scope": "ansible"
    },
    "Verifies the policy of the selected package.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_verify_policy",
            "Verifies the policy of the selected package."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_verify_policy:",
            "    policy_package: ${2:string}",
            "    version: ${3:string}",
            "    wait_for_task: ${4|true,false|}",
            "    wait_for_task_timeout: ${5:30}",
            "$0"
        ],
        "description": "Verifies the policy of the selected package.",
        "scope": "ansible"
    },
    "Verifies the software package on target machines.": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_verify_software_package",
            "Verifies the software package on target machines."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_verify_software_package:",
            "    concurrency_limit: ${2:int}",
            "    download_package: ${3|false,true|}",
            "    download_package_from: ${4:string}",
            "    name: ${5:string}",
            "    targets:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "    wait_for_task: ${8|true,false|}",
            "    wait_for_task_timeout: ${9:30}",
            "$0"
        ],
        "description": "Verifies the software package on target machines.",
        "scope": "ansible"
    },
    "Manages vpn-community-meshed objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_vpn_community_meshed",
            "Manages vpn-community-meshed objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_vpn_community_meshed:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    encryption_method: ${6:string}",
            "    encryption_suite: ${7:string}",
            "    gateways:",
            "      - ${8:element}",
            "    ignore_errors: ${9|false,true|}",
            "    ignore_warnings: ${10|false,true|}",
            "    name: ${13:string}",
            "    shared_secrets:",
            "      - ${14:element}",
            "    state: ${15|present,absent|}",
            "    tags:",
            "      - ${16:element}",
            "    use_shared_secret: ${17|false,true|}",
            "    version: ${18:string}",
            "    wait_for_task: ${19|true,false|}",
            "    wait_for_task_timeout: ${20:30}",
            "$0"
        ],
        "description": "Manages vpn-community-meshed objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get vpn-community-meshed objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_vpn_community_meshed_facts",
            "Get vpn-community-meshed objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_vpn_community_meshed_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "$0"
        ],
        "description": "Get vpn-community-meshed objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages vpn-community-star objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_vpn_community_star",
            "Manages vpn-community-star objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_vpn_community_star:",
            "    auto_publish_session: ${2|false,true|}",
            "    center_gateways:",
            "      - ${3:element}",
            "    color: ${4:string}",
            "    comments: ${5:string}",
            "    details_level: ${6:string}",
            "    encryption_method: ${7:string}",
            "    encryption_suite: ${8:string}",
            "    ignore_errors: ${9|false,true|}",
            "    ignore_warnings: ${10|false,true|}",
            "    mesh_center_gateways: ${13|false,true|}",
            "    name: ${14:string}",
            "    satellite_gateways:",
            "      - ${15:element}",
            "    shared_secrets:",
            "      - ${16:element}",
            "    state: ${17|present,absent|}",
            "    tags:",
            "      - ${18:element}",
            "    use_shared_secret: ${19|false,true|}",
            "    version: ${20:string}",
            "    wait_for_task: ${21|true,false|}",
            "    wait_for_task_timeout: ${22:30}",
            "$0"
        ],
        "description": "Manages vpn-community-star objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get vpn-community-star objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_vpn_community_star_facts",
            "Get vpn-community-star objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_vpn_community_star_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "$0"
        ],
        "description": "Get vpn-community-star objects facts on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Manages wildcard objects on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_wildcard",
            "Manages wildcard objects on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_wildcard:",
            "    auto_publish_session: ${2|false,true|}",
            "    color: ${3:string}",
            "    comments: ${4:string}",
            "    details_level: ${5:string}",
            "    groups:",
            "      - ${6:element}",
            "    ignore_errors: ${7|false,true|}",
            "    ignore_warnings: ${8|false,true|}",
            "    ipv4_address: ${9:string}",
            "    ipv4_mask_wildcard: ${10:string}",
            "    ipv6_address: ${11:string}",
            "    ipv6_mask_wildcard: ${12:string}",
            "    name: ${13:string}",
            "    state: ${14|present,absent|}",
            "    tags:",
            "      - ${15:element}",
            "    version: ${16:string}",
            "    wait_for_task: ${17|true,false|}",
            "    wait_for_task_timeout: ${18:30}",
            "$0"
        ],
        "description": "Manages wildcard objects on Check Point over Web Services API",
        "scope": "ansible"
    },
    "Get wildcard objects facts on Check Point over Web Services API": {
        "prefix": [
            "check_point.mgmt.cp_mgmt_wildcard_facts",
            "Get wildcard objects facts on Check Point over Web Services API"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  check_point.mgmt.cp_mgmt_wildcard_facts:",
            "    details_level: ${2:string}",
            "    limit: ${3:int}",
            "    name: ${4:string}",
            "    offset: ${5:int}",
            "    order:",
            "      - ${6:element}",
            "    version: ${7:string}",
            "$0"
        ],
        "description": "Get wildcard objects facts on Check Point over Web Services API",
        "scope": "ansible"
    }
}